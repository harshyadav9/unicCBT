{"version":3,"sources":["Questions.js","logo.svg","footer/footer.js","reducers/reducer.js","context/ExamDataContext.js","header/header.js","Objective.js","Timer.js","buttonsGroup/buttonsGroup.js","buttonsGroup/displayQuesCount.js","Test.js","login/login.js","instructions/instructions.js","excel.js","Loader.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","id","label","obj","ques","ans","opt1","opt2","opt3","opt4","makeStyles","theme","footer","padding","spacing","marginTop","backgroundColor","palette","grey","ExamReducer","state","action","type","console","log","hours","minutes","name","photo","candidateName","registrationNo","isLoading","reset","time","seconds","finalData","questions","ExamDataContext","createContext","initialState","ExamDataProvider","props","useReducer","dispatch","Provider","value","children","userStyles","Appbar","background","color","position","RollNumber","flexGrow","textAlign","fontSize","marginRight","Header","useContext","classes","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","AppBar","className","Toolbar","Typography","variant","component","IconButton","onClick","event","currentTarget","style","Avatar","alt","src","Menu","onClose","anchorOrigin","vertical","horizontal","keepMounted","MenuItem","styles","root","display","marginLeft","marginBottom","formControl","margin","height","lineHeight","group","quesNo","quesText","RadioButtonsGroup","objective","activeStep","radio","checkbox","Map","radioval","setRadio","useEffect","questionNo","undefined","prevState","multiple","arr","i","set","answeredQues","JSON","parse","localStorage","getItem","reviewQuestionNo","indexOf","splice","setItem","stringify","reviewU","reviewA","handleChange1","eventval","option","isradio","updateQuestionNo","push","concat","handleChange","isChecked","FormControl","FormLabel","question","RadioGroup","aria-label","FormControlLabel","option1","onChange","e","target","control","Radio","option2","option3","option4","FormGroup","Checkbox","checked","get","Timer","count","showWarning","this","myInterval","clearInterval","setState","prevProps","setInterval","getTime","Paper","elevation","gutterBottom","Divider","List","timerStyle","ListItem","ListItemText","primary","secondary","Component","withStyles","gridTemplateColumns","gridGap","borderRadius","useStyles","header","alignItems","width","paddingLeft","unit","default","leftContainer","flexDirection","card","container","overflow","appbar","buttonDefault","answeredColor","getContrastText","green","reviewAnsweredColor","reviewUnAnsweredColor","red","unansweredColor","buttonContainer","placeContent","justifyItems","overflowY","legendContainer","flexWrap","legends","boxShadow","buttonCls","buttonGroupText","fontWeight","justifyContent","ButtonsGroup","arrLen","questionInfo","changeStep","newArr","setnewArr","Object","keys","length","createArr","updateButtons","buttonState","Box","map","val","key","Fab","classNames","unanswered","answered","memo","list","reviewAnswered","reviewUnanswered","unvisitedQuestion","DisplayQuesCount","totalQues","unansweredQuestions","answeredQuestions","reviewUnQuestions","reviewAnQuestions","reviewquestionsObj","answeredQuestionsObj","unvisitedQuestions","ListItemAvatar","size","Footer","mobileStepper","paddingRight","containerStyle","maxHeight","border","minWidth","withTheme","visibilityChange","setactiveStep","useHistory","currentQuestion","setCurrentQuestion","maxSteps","setMaxSteps","questionList","setquestionList","setquestionNo","axios","then","res","unvisitedArr","data","Questions","durationHr","durationMin","instituteName","document","hidden","msHidden","webkitHidden","addEventListener","handleVisibilityChange","checkVisitedQues","unvisitedQues","reviewAndNext","useCallback","activeQues","reviewQues","Grid","xs","md","lg","disabled","Button","resp","put","item","rightContainer","backgroundImage","backgroundSize","backgroundRepeat","paper","avatar","dark","form","submit","Copyright","align","Link","href","Date","getFullYear","Login","regNo","setregNo","password","setpassword","regNoErr","setregNoErr","passwordErr","setpasswordErr","isregValid","setisRegValid","ispassValid","setisPassValid","useTheme","history","useMediaQuery","breakpoints","down","Container","maxWidth","CssBaseline","noValidate","TextField","helperText","error","required","fullWidth","autoFocus","preventDefault","post","catch","err","mt","minHeight","InstructionsDiv","Instructions","StyledBreadcrumb","typography","fontWeightRegular","shadows","emphasize","Chip","Excel","apiName","setApiName","setUploadExcel","handleClick","info","outerText","Breadcrumbs","icon","imagefile","querySelector","files","formData","FormData","append","headers","response","alert","loader","transform","top","right","zIndex","overlay","content","left","Loader","App","exact","path","Test","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.68e30128.chunk.js","sourcesContent":["module.exports = [\r\n    {\r\n        id: 1,\r\n        label: 'What is a Computer?',\r\n        obj: {\r\n            ques: 1,\r\n            ans: 'An electronic machine',\r\n            opt1: 'An electronic machine',\r\n            opt2: 'A gabage in gabage out',\r\n            opt3: 'An electric calculator',\r\n            opt4: 'A television'\r\n        }\r\n    },\r\n    {\r\n        id: 2,\r\n        label: 'What does computer raw fact mean?',\r\n        obj: {\r\n            ques: 2,\r\n            ans: 'A data',\r\n            opt1: 'An information',\r\n            opt2: 'A piece of hardware',\r\n            opt3: 'A data',\r\n            opt4: 'A processed'\r\n        }\r\n    },\r\n    {\r\n        id: 3,\r\n        label: 'A Robot is an example of ................ generation of computer?',\r\n        obj: {\r\n            ques: 3,\r\n            ans: 'Fifth Generation',\r\n            opt1: 'First Generation',\r\n            opt2: 'Second Generation',\r\n            opt3: 'Third Generation',\r\n            opt4: 'Fifth Generation'\r\n        }\r\n    },\r\n    {\r\n        id: 4,\r\n        label: 'ATM is a Pc?',\r\n        obj: {\r\n            ques: 4,\r\n            ans: 'False',\r\n            opt1: 'True',\r\n            opt2: 'False'\r\n        }\r\n    },\r\n    {\r\n        id: 5,\r\n        label: 'Which among these is an input device?',\r\n        obj: {\r\n            ques: 5,\r\n            ans: 'Mouse',\r\n            opt1: 'Cursor',\r\n            opt2: 'Mouse',\r\n            opt3: 'Pointer',\r\n            opt4: 'Printer'\r\n        }\r\n    },\r\n    {\r\n        id: 6,\r\n        label: '_________________computers are used for counting and calculation ',\r\n        obj: {\r\n            ques: 6,\r\n            ans: 'Digital',\r\n            opt1: 'Hybrid',\r\n            opt2: 'Analogue',\r\n            opt3: 'Mainframe',\r\n            opt4: 'Digital'\r\n        }\r\n    },\r\n    {\r\n        id: 7,\r\n        label: 'Information can be obtained from _________________',\r\n        obj: {\r\n            ques: 7,\r\n            ans: 'All of the above',\r\n            opt1: 'Radio',\r\n            opt2: 'Television, newspaper ',\r\n            opt3: 'Library, chats ',\r\n            opt4: 'All of the above'\r\n        }\r\n    },\r\n    {\r\n        id: 8,\r\n        label: 'The numeric keys produce _________ in the lowercase and _________ after pressing the shift key',\r\n        obj: {\r\n            ques: 8,\r\n            ans: 'Numbers and symbols',\r\n            opt1: 'Numbers and functions',\r\n            opt2: 'Numbers and symbols',\r\n            opt3: 'Symbols and abomination',\r\n            opt4: 'None of the above'\r\n        }\r\n    },\r\n    {\r\n        id: 9,\r\n        label: 'which generation of computer made use of I.C?',\r\n        obj: {\r\n            ques: 9,\r\n            ans: 'Third Generation',\r\n            opt1: 'First Generation',\r\n            opt2: 'Second Generation',\r\n            opt3: 'Third Generation',\r\n            opt4: 'Fourth Generation'\r\n        }\r\n    },\r\n    {\r\n        id: 10,\r\n        label: 'The computer has an _________ and _________ part',\r\n        obj: {\r\n            ques: 10,\r\n            ans: 'Input, output',\r\n            opt1: 'Input, outpit',\r\n            opt2: 'Inpit, outpit',\r\n            opt3: 'Input, output',\r\n            opt4: 'All of the above'\r\n        }\r\n    },\r\n    {\r\n        id: 11,\r\n        label: 'Where can you watch football games?',\r\n        obj: {\r\n            ques: 11,\r\n            ans: 'Computer and television',\r\n            opt1: 'Disk and cassettes',\r\n            opt2: 'Computer and television',\r\n            opt3: 'Radio and television',\r\n            opt4: 'Screen and monitors'\r\n        }\r\n    },\r\n    {\r\n        id: 12,\r\n        label: 'How is printing done?',\r\n        obj: {\r\n            ques: 12,\r\n            ans: 'By placing paper in the input tray and issue a command for printing',\r\n            opt1: 'By typing on a paper ',\r\n            opt2: 'By photocoping',\r\n            opt3: 'By placing paper in the input tray and issue a command for printing',\r\n            opt4: 'None of the above '\r\n        }\r\n    },\r\n    {\r\n        id: 13,\r\n        label: '____________key makes a command to be executed or moves the cursor to the beginning of another line',\r\n        obj: {\r\n            ques: 13,\r\n            ans: 'Enter key',\r\n            opt1: 'Shift key',\r\n            opt2: 'Enter key',\r\n            opt3: 'Scroll bar key',\r\n            opt4: 'Esc key'\r\n        }\r\n    },\r\n    {\r\n        id: 14,\r\n        label: 'What is the function of the C.P.U?',\r\n        obj: {\r\n            ques: 14,\r\n            ans: 'It conducts all the computer operations',\r\n            opt1: 'It conducts all the computer operations',\r\n            opt2: 'It conducts only ALU operations',\r\n            opt3: 'It conducts only memory unit operations ',\r\n            opt4: 'None of the above '\r\n        }\r\n    },\r\n    {\r\n        id: 15,\r\n        label: 'V.G.A stands for ___________',\r\n        obj: {\r\n            ques: 15,\r\n            ans: 'Video graphic adapter',\r\n            opt1: 'Versatile graphic adapter',\r\n            opt2: 'Visual grape adapter',\r\n            opt3: 'Video graphic adapter',\r\n            opt4: 'None of the above '\r\n        }\r\n    },\r\n    {\r\n        id: 16,\r\n        label: 'Data or information is stored in the drive in ___________',\r\n        obj: {\r\n            ques: 16,\r\n            ans: 'Bytes',\r\n            opt1: 'Bets',\r\n            opt2: 'Bits',\r\n            opt3: 'Bytes',\r\n            opt4: 'Megas'\r\n        }\r\n    },\r\n    {\r\n        id: 17,\r\n        label: '__________ are used in specialised activities that are dangerous or tedious for humans',\r\n        obj: {\r\n            ques: 17,\r\n            ans: 'Robots',\r\n            opt1: 'Computers',\r\n            opt2: 'Joystick ',\r\n            opt3: 'Robots',\r\n            opt4: 'Military weapons'\r\n        }\r\n    },\r\n    {\r\n        id: 18,\r\n        label: 'What is a printer?',\r\n        obj: {\r\n            ques: 18,\r\n            ans: 'It is a device used by a computer to bring out a hard copy of printout results',\r\n            opt1: 'It is just a device',\r\n            opt2: 'It is a device used by a computer to bring out a hard copy of printout results',\r\n            opt3: 'It is a photocopier',\r\n            opt4: 'All of the above'\r\n        }\r\n    },\r\n    {\r\n        id: 19,\r\n        label: 'Where do you connect the monitor to?',\r\n        obj: {\r\n            ques: 19,\r\n            ans: 'System unit',\r\n            opt1: 'Monitor',\r\n            opt2: 'Mouse ',\r\n            opt3: 'System unit',\r\n            opt4: 'UPS'\r\n        }\r\n    },\r\n    {\r\n        id: 20,\r\n        label: 'Microprocessor chips are used by ____________',\r\n        obj: {\r\n            ques: 20,\r\n            ans: 'Micro computer',\r\n            opt1: 'Mainframe computer',\r\n            opt2: 'Personal computer',\r\n            opt3: 'Mini computer',\r\n            opt4: 'Micro computer'\r\n        }\r\n    },\r\n    {\r\n        id: 21,\r\n        label: 'The rectangular box or frame that displays the properties of an environment in the computer is ____________',\r\n        obj: {\r\n            ques: 21,\r\n            ans: 'Window',\r\n            opt1: 'Start Menu',\r\n            opt2: 'Window',\r\n            opt3: 'Task bar',\r\n            opt4: 'Desktop'\r\n        }\r\n    },\r\n    {\r\n        id: 22,\r\n        label: 'What are the parts of the computer you know?',\r\n        obj: {\r\n            ques: 22,\r\n            ans: 'A and B',\r\n            opt1: 'Mouse',\r\n            opt2: 'Monitor and system unit',\r\n            opt3: 'A and B',\r\n            opt4: 'All of the above '\r\n        }\r\n    },\r\n    {\r\n        id: 23,\r\n        label: 'What is an application software?',\r\n        obj: {\r\n            ques: 23,\r\n            ans: 'It is a software that is specially designed for one kind of activity',\r\n            opt1: 'It is a utility software',\r\n            opt2: 'It is a software that is specially designed for one kind of activity',\r\n            opt3: 'It is a program',\r\n            opt4: 'Instructions'\r\n        }\r\n    },\r\n    {\r\n        id: 24,\r\n        label: 'What is an input?',\r\n        obj: {\r\n            ques: 24,\r\n            ans: 'It is the data that is been fed into the computer',\r\n            opt1: 'It is the data that is been fed into the computer',\r\n            opt2: 'It is the gabbage given to the computer',\r\n            opt3: 'It is letters',\r\n            opt4: 'None of the above'\r\n        }\r\n    },\r\n    {\r\n        id: 25,\r\n        label: 'NDE stands for',\r\n        obj: {\r\n            ques: 25,\r\n            ans: 'National Directorate of Employment',\r\n            opt1: 'National Director of Empowerment',\r\n            opt2: 'National Director of Employment',\r\n            opt3: 'National Directorate of Empowerment',\r\n            opt4: 'National Directorate of Employment'\r\n        }\r\n    },\r\n    {\r\n        id: 26,\r\n        label: 'Computer can be used to ____________',\r\n        obj: {\r\n            ques: 26,\r\n            ans: 'All of the above',\r\n            opt1: 'Listen to music',\r\n            opt2: 'Learn',\r\n            opt3: 'Draw, type',\r\n            opt4: 'All of the above'\r\n        }\r\n    },\r\n    {\r\n        id: 27,\r\n        label: '___________ can store and retrieve data',\r\n        obj: {\r\n            ques: 27,\r\n            ans: 'Computer',\r\n            opt1: 'CPU',\r\n            opt2: 'Computer',\r\n            opt3: 'Memory unit',\r\n            opt4: 'All of the above'\r\n        }\r\n    },\r\n    {\r\n        id: 28,\r\n        label: 'All of these are importance of a computer program `Mavis Beacon` except ___________',\r\n        obj: {\r\n            ques: 28,\r\n            ans: 'It shows a game',\r\n            opt1: 'It gives typing skill',\r\n            opt2: 'It shows how to place fingers on the keyboard',\r\n            opt3: 'It increases typing speed',\r\n            opt4: 'It shows a game'\r\n        }\r\n    },\r\n    {\r\n        id: 29,\r\n        label: '___________ is used mostly in games and entertainment software',\r\n        obj: {\r\n            ques: 29,\r\n            ans: 'Joystick',\r\n            opt1: 'Mouse',\r\n            opt2: 'Mice',\r\n            opt3: 'Lice',\r\n            opt4: 'Joystick'\r\n        }\r\n    },\r\n    {\r\n        id: 30,\r\n        label: 'How does the monitor look like?',\r\n        obj: {\r\n            ques: 30,\r\n            ans: 'Television',\r\n            opt1: 'Radio',\r\n            opt2: 'Sreen',\r\n            opt3: 'Television',\r\n            opt4: 'Mirror'\r\n        }\r\n    },\r\n    {\r\n        id: 31,\r\n        label: 'The process every computer must pass through before use is ___________',\r\n        obj: {\r\n            ques: 31,\r\n            ans: 'Booting',\r\n            opt1: 'Loading',\r\n            opt2: 'Windows xp',\r\n            opt3: 'Booting',\r\n            opt4: 'Processing'\r\n        }\r\n    },\r\n    {\r\n        id: 32,\r\n        label: 'What does the term GIGO mean?',\r\n        obj: {\r\n            ques: 32,\r\n            ans: 'Gabage In Gabage Out',\r\n            opt1: 'Go In Go Out',\r\n            opt2: 'Get In Get Out',\r\n            opt3: 'Going In Going Out',\r\n            opt4: 'Gabage In Gabage Out'\r\n        }\r\n    },\r\n    {\r\n        id: 33,\r\n        label: 'What is the full meaning of USB?',\r\n        obj: {\r\n            ques: 33,\r\n            ans: 'Universal Serial Bus',\r\n            opt1: 'Universal Serial Bus',\r\n            opt2: 'Uniform Serving Bus',\r\n            opt3: 'Universe Station Bus',\r\n            opt4: 'Unity Serial Bus'\r\n        }\r\n    },\r\n    {\r\n        id: 34,\r\n        label: 'What does the term PC mean?',\r\n        obj: {\r\n            ques: 34,\r\n            ans: 'Personal Computer',\r\n            opt1: 'Peoples Computer',\r\n            opt2: 'Personal Computer',\r\n            opt3: 'Power Computer',\r\n            opt4: 'Unity Serial Bus'\r\n        }\r\n    },\r\n    {\r\n        id: 35,\r\n        label: 'What is the keyword that can be used to run Microsoft Paint?',\r\n        obj: {\r\n            ques: 35,\r\n            ans: 'Mspaint',\r\n            opt1: 'Paint',\r\n            opt2: 'Microsoft Paint',\r\n            opt3: 'Ms Paint',\r\n            opt4: 'Mspaint'\r\n        }\r\n    },\r\n    {\r\n        id: 36,\r\n        label: 'Which among these is not a version of Microsoft Windows?',\r\n        obj: {\r\n            ques: 36,\r\n            ans: 'Windows 9',\r\n            opt1: 'Windows 7',\r\n            opt2: 'Windows 8',\r\n            opt3: 'Windows 9',\r\n            opt4: 'Windows 10'\r\n        }\r\n    },\r\n    {\r\n        id: 37,\r\n        label: 'What are the small pictures that you click on to start an application called?',\r\n        obj: {\r\n            ques: 37,\r\n            ans: 'icons',\r\n            opt1: 'folders',\r\n            opt2: 'programs',\r\n            opt3: 'icons',\r\n            opt4: 'pictures'\r\n        }\r\n    },\r\n    {\r\n        id: 38,\r\n        label: 'Ctrl + Z is a command used to',\r\n        obj: {\r\n            ques: 38,\r\n            ans: 'Undo',\r\n            opt1: 'Undo',\r\n            opt2: 'Redo',\r\n            opt3: 'Copy',\r\n            opt4: 'Paste'\r\n        }\r\n    },\r\n    {\r\n        id: 39,\r\n        label: 'Ctrl + Y is a command used to',\r\n        obj: {\r\n            ques: 39,\r\n            ans: 'Redo',\r\n            opt1: 'Undo',\r\n            opt2: 'Redo',\r\n            opt3: 'Copy',\r\n            opt4: 'Paste'\r\n        }\r\n    },\r\n    {\r\n        id: 40,\r\n        label: 'The topmost bar of every window is known as the title bar.',\r\n        obj: {\r\n            ques: 40,\r\n            ans: 'True',\r\n            opt1: 'True',\r\n            opt2: 'False'\r\n        }\r\n    },\r\n    {\r\n        id: 41,\r\n        label: 'What is a Command?',\r\n        obj: {\r\n            ques: 41,\r\n            ans: 'A set of instruction given to the computer on its own language',\r\n            opt1: 'A requirement from the computer',\r\n            opt2: 'A question given to the computer',\r\n            opt3: 'A set of instrument given to the computer',\r\n            opt4: 'A set of instruction given to the computer on its own language'\r\n        }\r\n    },\r\n    {\r\n        id: 42,\r\n        label: 'A processed data is ____________',\r\n        obj: {\r\n            ques: 42,\r\n            ans: 'An information',\r\n            opt1: 'A raw material',\r\n            opt2: 'An information',\r\n            opt3: 'A command',\r\n            opt4: 'None of the above'\r\n        }\r\n    },\r\n    {\r\n        id: 43,\r\n        label: 'Scanner is an output device',\r\n        obj: {\r\n            ques: 43,\r\n            ans: 'False',\r\n            opt1: 'True',\r\n            opt2: 'False',\r\n        }\r\n    },\r\n    {\r\n        id: 44,\r\n        label: 'The physical part of the computer that we can touch, see and carry about is called?',\r\n        obj: {\r\n            ques: 44,\r\n            ans: 'Hardware',\r\n            opt1: 'Software',\r\n            opt2: 'Hardware',\r\n            opt3: 'Softcopy',\r\n            opt4: 'Hardcopy'\r\n        }\r\n    },\r\n    {\r\n        id: 45,\r\n        label: 'Warm booting is done to ______________',\r\n        obj: {\r\n            ques: 45,\r\n            ans: 'Refresh the memory of the system',\r\n            opt1: 'Power On the system',\r\n            opt2: 'Boot the system',\r\n            opt3: 'Refresh the memory of the system',\r\n            opt4: 'Process data'\r\n        }\r\n    },\r\n    {\r\n        id: 46,\r\n        label: '________ disrupts the smooth operation of the computer system',\r\n        obj: {\r\n            ques: 46,\r\n            ans: 'Virus',\r\n            opt1: 'Syphy',\r\n            opt2: 'Trokiter',\r\n            opt3: 'Virus',\r\n            opt4: 'sprokiter'\r\n        }\r\n    },\r\n    {\r\n        id: 47,\r\n        label: '___________ is not a component of the system unit',\r\n        obj: {\r\n            ques: 47,\r\n            ans: 'Connector',\r\n            opt1: 'Cd Rom',\r\n            opt2: 'Power Supply Unit',\r\n            opt3: 'Connector',\r\n            opt4: 'Harddisk'\r\n        }\r\n    },\r\n    {\r\n        id: 48,\r\n        label: '___________ is an example of a program that removes system virus',\r\n        obj: {\r\n            ques: 48,\r\n            ans: 'Avast',\r\n            opt1: 'kasperse',\r\n            opt2: 'Avast',\r\n            opt3: 'Trokiter',\r\n            opt4: 'Newton'\r\n        }\r\n    },\r\n    {\r\n        id: 49,\r\n        label: 'A.L.U is found where?',\r\n        obj: {\r\n            ques: 49,\r\n            ans: 'In the C.P.U',\r\n            opt1: 'In the G.U.I',\r\n            opt2: 'In the D.P.O',\r\n            opt3: 'In the R.P.O',\r\n            opt4: 'In the C.P.U'\r\n        }\r\n    },\r\n    {\r\n        id: 50,\r\n        label: 'what is the most busiest part of the computer system?',\r\n        obj: {\r\n            ques: 50,\r\n            ans: 'C.P.U',\r\n            opt1: 'A.L.U',\r\n            opt2: 'D.P.O',\r\n            opt3: 'R.P.O',\r\n            opt4: 'C.P.U'\r\n        }\r\n    },\r\n\r\n];","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    footer:{\r\n        padding:theme.spacing(3 , 2),\r\n        marginTop:'auto',\r\n        backgroundColor:theme.palette.grey[200]\r\n    }\r\n}));\r\n\r\nexport default  function Footer() {\r\n    const classes = useStyles();\r\n    return (\r\n       <footer className={classes.footer}>\r\n           <Container maxWidth=\"sm\">\r\n               THIS IS FOOTER\r\n           </Container>\r\n       </footer>\r\n    )\r\n}\r\n\r\n","\r\n\r\nexport const ExamReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'ADDINFO':\r\n            console.log(\"state\",state);\r\n            return {\r\n                ...state,\r\n                ...{\r\n                    hours: action.hours,\r\n                    minutes: action.minutes,\r\n                    name: action.name,\r\n                    photo: action.photo,\r\n                    candidateName: action.candidateName,\r\n                    registrationNo: action.registrationNo,\r\n                    isLoading: false,\r\n                    reset:false,\r\n                    time:{hours:action.time.hours , minutes:action.time.minutes, seconds:action.time.seconds}\r\n                }\r\n            };\r\n        case 'HANDLELOADING':\r\n            console.log(action);\r\n            return {\r\n                ...state,\r\n                ...{\r\n                    isLoading: action.isLoading\r\n                }\r\n            };\r\n\r\n        case 'ADD_FINAL_DATA':\r\n            console.log(action);\r\n            return {\r\n                ...state,\r\n                ...{\r\n                    finalData: action.finalData\r\n                }\r\n            };\r\n\r\n\r\n        case 'ADD_QUESTION_VALUES':\r\n            console.log(action);\r\n            return {\r\n                ...state,\r\n\r\n                ...{\r\n                    questions: action.questions\r\n                }\r\n            };\r\n\r\n            case 'RESET':\r\n            return {\r\n                ...state,\r\n                ...{\r\n                    reset:action.reset\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import React, { useReducer, useEffect, createContext } from 'react';\r\nimport { ExamReducer } from '../reducers/reducer';\r\nexport const ExamDataContext = createContext();\r\n\r\n\r\nconst initialState = {hours:0,minutes:0,name:\"\",photo:\"\",candidateName:\"\",registrationNo:\"\" ,\r\n isLoading:false , finalData:[] , questions:{},reset:\"\" , time:{hours:0,minutes:0,seconds:60}};\r\nconst ExamDataProvider = (props) => {\r\n\r\n    const [state,dispatch] = useReducer(ExamReducer , initialState);\r\n\r\n    return (\r\n        <ExamDataContext.Provider value={{ state, dispatch }}>\r\n            {props.children}\r\n        </ExamDataContext.Provider>\r\n    )\r\n\r\n\r\n}\r\n\r\n\r\nexport default ExamDataProvider;","import React , {useContext} from 'react';\r\nimport {\r\n    AppBar, Toolbar,\r\n    IconButton, makeStyles,\r\n    Typography, MenuItem, Menu,Avatar\r\n\r\n} from '@material-ui/core';\r\nimport { AccountCircle } from '@material-ui/icons';\r\nimport { ExamDataContext } from '../context/ExamDataContext';\r\nconst userStyles = makeStyles({\r\n    Appbar: {\r\n        background: '#2a3b64',\r\n        color: '#fff',\r\n        position: 'static'\r\n    },\r\n    RollNumber: {\r\n        flexGrow: '1',\r\n        textAlign: 'right',\r\n        fontSize: '1rem',\r\n        marginRight: 15\r\n    }\r\n})\r\n\r\nexport default function Header() {\r\n\r\n    const {state,dispatch} = useContext(ExamDataContext);\r\n    console.log(\"state,dispatch in header\" , state,dispatch);\r\n    const classes = userStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    // const classes = userStyles();\r\n    return (\r\n        <AppBar className={classes.Appbar}>\r\n\r\n            <Toolbar>\r\n                <Typography variant=\"h4\" component=\"h2\">{state.name}</Typography>\r\n                <Typography variant=\"h6\" className={classes.RollNumber}>Reg No: {state.registrationNo}</Typography> |\r\n                <Typography variant=\"h6\">\r\n                    <IconButton\r\n                        onClick={handleMenu}\r\n                        color=\"inherit\">\r\n                        <span style={{ fontSize: 18, marginRight: 4 }}>{state.candidateName}</span>\r\n                        {/* <AccountCircle /> */}\r\n                        <Avatar alt=\"Cindy Baker\" src={state.photo} />\r\n                    </IconButton>\r\n                    <Menu open={open} onClose={handleClose} anchorEl={anchorEl}\r\n                        anchorOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'right',\r\n                        }} keepMounted\r\n                    >\r\n                        <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                        <MenuItem onClick={handleClose}>My account</MenuItem>\r\n                    </Menu>\r\n                </Typography>\r\n            </Toolbar>\r\n\r\n        </AppBar>\r\n    )\r\n}\r\n","import React, { useState , useEffect,useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles,makeStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport {\r\n    FormLabel\r\n} from '@material-ui/core';\r\nimport { ExamDataContext } from './context/ExamDataContext';\r\nconst styles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        marginLeft: 2,\r\n        marginBottom: 49\r\n    },\r\n    // formControl: {\r\n    //     margin: theme.spacing.unit * 3,\r\n    //     [theme.breakpoints.only('xs')]: {\r\n    //         margin: 0\r\n    //     },\r\n    //     [theme.breakpoints.between('xs, sm')]: {\r\n    //         margin: 0\r\n    //     }\r\n    // },\r\n    formControl: {\r\n        margin: '33px 1px 4px 7px',\r\n        height: '240px',\r\n        padding: '6px',\r\n        '& legend': {\r\n            fontSize: 20,\r\n            display: 'flex',\r\n            lineHeight: '1.4',\r\n            marginBottom: 6,\r\n            color: '#000',\r\n        }\r\n    },\r\n    group: {\r\n        margin: '8px 0 0 23px',\r\n    },\r\n    quesNo: {\r\n        marginRight: '8px'\r\n    },\r\n    quesText: {\r\n        textAlign: 'left'\r\n    }\r\n}));\r\n\r\n\r\n\r\n\r\nfunction RadioButtonsGroup(props) {\r\n\r\n\r\n\r\n    const { objective,activeStep } = props;\r\n    // console.log(\" objective,activeStep\", objective,activeStep)\r\n    const [radioval, setRadio] = useState({\r\n        radio: '',\r\n        checkbox: new Map(),\r\n        reset: false\r\n    });\r\n    const { state, dispatch } = useContext(ExamDataContext);\r\n    // console.log(\"state\",state);\r\n    const classes = styles();\r\n    // let resetFlag = JSON.parse(localStorage.getItem('isReset')) || false;\r\n    // console.log(\"resetFlag\",resetFlag);\r\n    // class RadioButtonsGroup extends React.Component {\r\n    // state = {\r\n    //     radio: '',\r\n    //     checkbox: new Map(),\r\n    //     reset: false\r\n    // };\r\n\r\n\r\n    // componentDidMount() {\r\n    //     console.log(\"value\", this.state);\r\n    // }\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"objective called\");\r\n        if((objective && objective.id && objective.id.questionNo === (activeStep+1)) && state.questions[activeStep+1] !== undefined && !state.reset){\r\n            console.log(\"if callled\");\r\n            if(typeof(state.questions[activeStep+1]) === \"string\"){\r\n                setRadio(prevState => ({\r\n                    ...prevState,\r\n                    radio:  state.questions[activeStep+1]\r\n                }));\r\n            } else {\r\n                setRadio(prevState => ({\r\n                    ...prevState,\r\n                    checkbox: state.questions[activeStep+1]\r\n                }));\r\n            }\r\n           \r\n        }\r\n    },[objective]);\r\n\r\n   \r\n    useEffect(() => {\r\n        if(state.reset){\r\n            if(objective && objective.id && objective.id.questionNo === (activeStep+1)){\r\n                // if(typeof(state.questions[activeStep+1]) === \"string\"){\r\n                    let obj = {};\r\n                    if(objective.multiple === 'N'){\r\n                        setRadio(prevState => ({\r\n                            ...prevState,\r\n                            radio: \"\"\r\n                        }));\r\n                        obj = {...state.questions , ...{[objective.id.questionNo]:\"\"}};\r\n                    } else {\r\n                        let arr = new Map();\r\n                        for (let i = 0; i < 4; i++) {\r\n                            let obj = {};\r\n                            arr.set(`option${i + 1}`, false);\r\n                        }\r\n                        setRadio(prevState => ({\r\n                            ...prevState,\r\n                            checkbox: arr\r\n                        }));\r\n                        obj = {...state.questions , ...{[objective.id.questionNo]:arr}};\r\n                      \r\n                    }\r\n                   \r\n                // } else {\r\n                   \r\n                // }\r\n                let answeredQues = JSON.parse(localStorage.getItem('questionNo'));\r\n                let reviewQuestionNo = JSON.parse(localStorage.getItem('reviewQuestionNo'));\r\n                if (answeredQues !== null) {\r\n                    if (answeredQues.indexOf(activeStep + 1) > -1) {\r\n                        answeredQues.splice(answeredQues.indexOf(activeStep + 1), 1);\r\n                    }\r\n                    localStorage.setItem('questionNo', JSON.stringify(answeredQues));\r\n        \r\n                }\r\n                if (reviewQuestionNo !== null) {\r\n                    if (reviewQuestionNo.reviewU.indexOf(activeStep + 1) > -1) {\r\n                        reviewQuestionNo.reviewU.splice(reviewQuestionNo.reviewU.indexOf(activeStep + 1), 1);\r\n                    }\r\n                    if (reviewQuestionNo.reviewA.indexOf(activeStep + 1) > -1) {\r\n                        reviewQuestionNo.reviewA.splice(reviewQuestionNo.reviewA.indexOf(activeStep + 1), 1);\r\n                    }\r\n                    localStorage.setItem('reviewQuestionNo', JSON.stringify(reviewQuestionNo));\r\n                }\r\n                // dispatch({ type: 'RESET', reset: false });\r\n                dispatch({type:'ADD_QUESTION_VALUES' , questions:obj});\r\n            }\r\n            // localStorage.setItem('isReset',JSON.stringify({'reset':false}));\r\n           \r\n        }\r\n    \r\n    },[state.reset]);\r\n    \r\n    const handleChange1 = (eventval, option, objective) => {\r\n        let event = { option: option, id: objective.id.questionNo, isradio: true };\r\n        // buttonChangeHandler(event);\r\n        // console.log(\"event, option, objective\", eventval, option, objective);\r\n        setRadio(prevState => ({\r\n            ...prevState,\r\n            radio: eventval\r\n        }));\r\n        let obj = {...state.questions , ...{[objective.id.questionNo]:eventval}};\r\n         dispatch({type:'ADD_QUESTION_VALUES' , questions:obj});\r\n        // this.setState(() => ({\r\n        //     radio:event\r\n        // }))\r\n        // this.setState({ radio: event });\r\n        // console.log(\"this.state\",this.state);\r\n        // response();\r\n        updateQuestionNo(event);\r\n    }\r\n\r\n    const updateQuestionNo = (event) => {\r\n        // console.log(\"updateQuestionNo\",event.id);\r\n        if (event.id !== undefined) {\r\n            let arr = [];\r\n            const questionNo = JSON.parse(localStorage.getItem('questionNo'));\r\n            if (questionNo === null) {\r\n                arr.push(event.id);\r\n            } else {\r\n                if (questionNo.indexOf(event.id) == -1) {\r\n                    arr = questionNo.concat(event.id);\r\n                } else {\r\n                    arr = questionNo;\r\n                }\r\n\r\n            }\r\n\r\n            localStorage.setItem('questionNo', JSON.stringify(arr));\r\n        }\r\n    }\r\n\r\n    const buttonChangeHandler = (event) => {\r\n        let index = -1;\r\n        let newAns = [];\r\n        if (event.isradio) {\r\n            let resData = [...state.finalData];\r\n            // let resData = [...finalData];\r\n\r\n\r\n\r\n            for (let i = 0; i < resData.length; i++) {\r\n                if (resData[i]['id']['questionId'] == event.id) {\r\n                    // isUpdate = true;\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n            newAns.push(event.option);\r\n            let option = newAns[0].trim();\r\n            if (index === -1) {\r\n                let obj = {\r\n                    \"id\": {\r\n                        registrationNo: 2,\r\n                        questionId: event.id,\r\n                        yearOfExam: 2020\r\n                    },\r\n                    selectedAnswer: option\r\n                }\r\n                resData = [...resData, obj];\r\n            } else {\r\n                resData[index].selectedAnswer = option;\r\n            }\r\n\r\n            //  if radio is checked\r\n\r\n            // setfinalData(resData);\r\n            dispatch({ type: 'ADD_FINAL_DATA', finalData: [...state.finalData,...resData] });\r\n\r\n        } else {\r\n            //  if checkbox is checked\r\n            let resData = [...state.finalData];\r\n            for (let i = 0; i < resData.length; i++) {\r\n                if (resData[i]['id']['questionId'] == event.id) {\r\n                    // isUpdate = true;\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n            if (index === -1) {\r\n                newAns.push(event.name);\r\n                let option = newAns[0].trim();\r\n                let obj = {\r\n                    \"id\": {\r\n                        registrationNo: 2,\r\n                        questionId: event.id,\r\n                        yearOfExam: 2020\r\n                    },\r\n                    selectedAnswer: option\r\n                }\r\n                resData = [...resData, obj];\r\n                // setfinalData(resData);\r\n                dispatch({ type: 'ADD_FINAL_DATA', finalData: [...state.finalData,...resData] });\r\n            } else {\r\n                let selectedOptionObj = resData[index];\r\n                let isElemPresent = false;\r\n                let prevAns = selectedOptionObj['selectedAnswer'];\r\n                // if (prevAns === \"\") {\r\n                //     newAns.push(event.name);\r\n                // } else {\r\n                newAns = prevAns === \"\" ? [] : prevAns.split(\",\");\r\n                // }\r\n                // if (newAns.length === 0) {\r\n                //     newAns.push(event.name);\r\n                // } else {\r\n                for (let i = 0; i < newAns.length; i++) {\r\n                    if (newAns[i].trim() == event.name.trim()) {\r\n                        isElemPresent = true;\r\n                        // if checked flag is turn to false\r\n                        if (event.isChecked === false) {\r\n                            newAns.splice(i, 1);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n                if (!isElemPresent) {\r\n                    // if checked flag is turned to true\r\n                    newAns.push(event.name);\r\n                }\r\n                if (newAns.length === 0) {\r\n                    resData[index].selectedAnswer = \"\";\r\n                } else {\r\n                    // let obj = {\r\n                    //     \"id\": {\r\n                    //         registrationNo: 2,\r\n                    //         questionId: event.id,\r\n                    //         yearOfExam: 2020\r\n                    //     },\r\n                    //     selectedAnswer: (newAns.join(\",\"))\r\n                    // }\r\n                    resData[index].selectedAnswer = (newAns.join(\",\"));\r\n                    // resData = [...resData];\r\n                }\r\n\r\n                dispatch({ type: 'ADD_FINAL_DATA', finalData: [...state.finalData,...resData] });\r\n                // setfinalData(resData);\r\n                // }\r\n            }\r\n        }\r\n        if (event.id !== undefined) {\r\n            let arr = [];\r\n            const questionNo = JSON.parse(localStorage.getItem('questionNo'));\r\n            if (questionNo === null) {\r\n                arr.push(event.id);\r\n            } else {\r\n                if (questionNo.indexOf(event.id) == -1) {\r\n                    arr = questionNo.concat(event.id);\r\n                } else {\r\n                    arr = questionNo;\r\n                }\r\n\r\n            }\r\n\r\n            localStorage.setItem('questionNo', JSON.stringify(arr));\r\n        }\r\n    }\r\n\r\n\r\n    const handleChange = (isChecked, name, objective) => {\r\n\r\n\r\n        setRadio(prevState => ({\r\n            ...prevState,\r\n            checkbox: prevState.checkbox.set(name, isChecked)\r\n        }));\r\n\r\n        let arr = new Map();\r\n       if(state.questions[objective.id.questionNo] === undefined){\r\n           arr.set(name,isChecked);\r\n\r\n       }else {\r\n            arr = state.questions[objective.id.questionNo];\r\n           arr.set(name,isChecked);\r\n       }\r\n\r\n        let obj = {...state.questions , ...{[objective.id.questionNo]:arr}};\r\n        dispatch({type:'ADD_QUESTION_VALUES' , questions:obj});\r\n        // this.setState(prevState => ({\r\n        //     checkbox: prevState.checkbox.set(name, isChecked)\r\n        // }));\r\n        // let arr = JSON.parse(localStorage.getItem('questionNo'));\r\n        // console.log(\"arr\", arr)\r\n        // if (arr == null) {\r\n        //     arr = [];\r\n        //     arr.push(quesNo);\r\n        //     localStorage.setItem('questionNo', JSON.stringify(arr));\r\n        // } else {\r\n        //     if (arr.indexOf(quesNo) == -1) {\r\n        //         arr.push(quesNo);\r\n        //         localStorage.setItem('questionNo', JSON.stringify(arr));\r\n        //     }\r\n\r\n        // }\r\n        // // localStorage.setItem('questionNo', JSON.stringify(quesNo));\r\n\r\n\r\n        // if (event === ans) {\r\n            let event = { name: name, isChecked: isChecked, id: objective.id.questionNo, isradio: false };\r\n            // response();\r\n            // buttonChangeHandler(event);\r\n            updateQuestionNo(event);\r\n        // response({ name: name, isChecked: isChecked, id: objective.id.questionNo, isradio: false });\r\n        //     // this.setState({ value: '' });\r\n        // } else {\r\n        //     this.props.checkQuestionNo(quesNo);\r\n        //     // this.setState({ value: '' });\r\n        // }\r\n    }\r\n\r\n    const setCheckboxState = (objective) => {\r\n        let arr = new Map();\r\n        for (let i = 0; i < 4; i++) {\r\n            let obj = {};\r\n            arr.set(`option${i + 1}`, false);\r\n        }\r\n        setRadio(prevState => ({\r\n            ...prevState,\r\n            checkbox: arr\r\n        }));\r\n        // this.setState({ checkbox: arr });\r\n    }\r\n\r\n\r\n\r\n   const  resetValues = (resetValue) => {\r\n        console.log(\"reset called\");\r\n        if (resetValue) {\r\n            setRadio(prevState => ({\r\n                ...prevState,\r\n                radio: ''\r\n            }));\r\n            // this.setState({ radio: '' });\r\n        }\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     console.log(\"this.state\", this.state);\r\n    //     if (this.props.objective.single === \"N\") {\r\n    //         this.setCheckboxState(this.props.objective);\r\n    //     }\r\n\r\n    //     // console.log(\"this.state>>\", this.state)\r\n\r\n    // }\r\n\r\n\r\n\r\n    // render() {\r\n   \r\n    // useEffect(() => {\r\n    //     // console.log(\"activeStep\",activeStep);\r\n    //     // console.log(\"objective\",objective);\r\n    //     console.log(\"radio state\" , radio);\r\n    //     if(objective.id.questionNo === 1){\r\n    //         setRadio(prevState => ({\r\n    //             ...prevState,\r\n    //             radio: ' A- Thermal pollution'\r\n    //         }));\r\n           \r\n    //     }\r\n    //     if (objective.single === \"N\") {\r\n    //         setCheckboxState(objective);\r\n    //     }\r\n    //     if (reset === 'radio') {\r\n    //         setRadio(prevState => ({\r\n    //             ...prevState,\r\n    //             radio: ''\r\n    //         }));\r\n    //         // this.props.setReset('');\r\n    //         setReset('')\r\n    //     }\r\n    //     if (reset === 'checkbox') {\r\n    //         // this.setState(() => ({\r\n    //         //     checkbox: new Map()\r\n    //         // }));\r\n    //         setRadio(prevState => ({\r\n    //             ...prevState,\r\n    //             checkbox: new Map()\r\n    //         }));\r\n    //         // this.props.setReset('');\r\n    //         setReset('')\r\n    //     }\r\n    \r\n    // },[objective,reset]);\r\n\r\n  \r\n    // console.log(\"this.props.reset\",this.props.reset);\r\n\r\n   \r\n\r\n  \r\n    // if (isReset) {\r\n    //     this.resetState(objective);\r\n    // }\r\n    // console.log(\"isReset\", isReset)\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div>\r\n\r\n                <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                    <FormLabel component=\"legend\"><span className={classes.quesNo}>{objective && objective.id && objective.id.questionNo})</span><span className={classes.quesText}>{objective && objective.question}</span></FormLabel>\r\n                    {objective && objective.multiple === 'N' ? (<RadioGroup\r\n                        aria-label=\"Gender\"\r\n                        name=\"gender1\"\r\n                        className={classes.group}\r\n                        value={radioval.radio}\r\n                    // onChange={(e) => this.handleChange(e.target, objective)}\r\n                    >\r\n                        <FormControlLabel value={objective.option1} onChange={(e) => handleChange1(e.target.value, 'option1', objective)} control={<Radio />} label={objective.option1} />\r\n                        <FormControlLabel value={objective.option2} onChange={(e) => handleChange1(e.target.value, 'option2', objective)} control={<Radio />} label={objective.option2} />\r\n                        {objective.option3 === undefined ? null\r\n                            :\r\n                            <FormControlLabel value={objective.option3} onChange={(e) => handleChange1(e.target.value, 'option3', objective)} control={<Radio />} label={objective.option3} />}\r\n                        {objective.option4 === undefined ? null :\r\n                            <FormControlLabel value={objective.option4} onChange={(e) => handleChange1(e.target.value, 'option4', objective)} control={<Radio />} label={objective.option4}\r\n                            />}\r\n                    </RadioGroup>) : (\r\n                            <FormGroup>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={!!radioval.checkbox.get('option1')} onChange={(e) => handleChange(e.target.checked, 'option1', objective)} name={objective && objective.option1} />}\r\n                                    label={objective && objective.option1}\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={!!radioval.checkbox.get('option2')} onChange={(e) => handleChange(e.target.checked, 'option2', objective)} name={objective && objective.option2} />}\r\n                                    label={objective && objective.option2}\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={!!radioval.checkbox.get('option3')} onChange={(e) => handleChange(e.target.checked, 'option3', objective)} name={objective && objective.option3} />}\r\n                                    label={objective && objective.option3}\r\n                                />\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={!!radioval.checkbox.get('option4')} onChange={(e) => handleChange(e.target.checked, 'option4', objective)} name={objective && objective.option4} />}\r\n                                    label={objective && objective.option4}\r\n                                />\r\n                            </FormGroup>\r\n\r\n                        )}\r\n                </FormControl>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n    // }\r\n}\r\n\r\n// RadioButtonsGroup.propTypes = {\r\n//     classes: PropTypes.object.isRequired,\r\n// };\r\n\r\nexport default RadioButtonsGroup;\r\n","import React, { Component } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport { Paper, Typography, Divider, \r\n     List, ListItem, ListItemText } from '@material-ui/core';\r\n    \r\nconst useStyles = theme => ({\r\n\r\n    padding: {\r\n        padding: 10\r\n    },\r\n    timerStyle: {\r\n        display: 'grid',\r\n        gridTemplateColumns: 'repeat(3, 1fr)',\r\n        gridGap: 10,\r\n        padding: '20px 10px',\r\n        '& li': {\r\n            textAlign: 'center',\r\n            padding: 0,\r\n            '& div': {\r\n                background: '#2a3b64',\r\n                color: '#fff',\r\n                margin: 0,\r\n                borderRadius: 6,\r\n                padding: '2px 0px 10px',\r\n                '& span': {\r\n                    fontSize: '2rem'\r\n                },\r\n                '& p': {\r\n                color: '#fff',\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n});\r\nclass Timer extends Component {\r\n\r\n\r\n    state = {\r\n        minutes: 0,\r\n        seconds: 0,\r\n        hours: 0,\r\n        count: 0,\r\n        showWarning: false\r\n    }   \r\n\r\n\r\n    //  1 hr 2 min\r\n    //  1min 10 sec\r\n\r\n    componentWillUnmount(){\r\n        if(this.myInterval)\r\n        clearInterval( this.myInterval);\r\n    }\r\n\r\n\r\n    getTime(){\r\n        if (this.state.seconds > 0) {\r\n            this.setState(({ seconds , count }) => ({\r\n                seconds: seconds - 1,\r\n                count:count+1\r\n            }))\r\n            if(this.state.count == 20){\r\n                console.log(\"this.state>>>>>>>>>>>>>>>>>\" , this.state);\r\n                this.setState({\r\n                    showWarning:true\r\n                })\r\n            }\r\n        } else\r\n            // if (seconds === 0) {\r\n            if (this.state.hours == 0) {\r\n                //  1 hr scene\r\n                if (this.state.minutes === 0) {\r\n                    clearInterval(this.myInterval);\r\n                } else {\r\n                    // sec = 0 , hour = 0 , minutes reduced by 1  ,  sec 10\r\n                    this.setState(({ minutes }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }))\r\n                    // if (count === 2) {\r\n                    //     this.setState(({ showWarning }) => ({ showWarning: true }));\r\n                    // }\r\n                    // if (count == 2) {\r\n                    //     this.setState(({ hours }) => ({\r\n                    //         hours: hours - 1,\r\n                    //         count: 0,\r\n                    //         minutes: 2\r\n                    //     }))\r\n                    // }\r\n                }\r\n            } else {\r\n                // hours not 0 sec 0\r\n                //       01 hrs:00 min :00 sec\r\n                if (this.state.minutes > 0) {\r\n                    this.setState(({ minutes, count }) => ({\r\n                        minutes: minutes - 1,\r\n                        seconds: 59,\r\n                    }))\r\n\r\n                } else {\r\n                    this.setState(({ hours, count }) => ({\r\n                        hours: hours - 1,\r\n                        seconds: 59,\r\n                        minutes: 59,\r\n                    }))\r\n                }\r\n\r\n\r\n            }\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps){\r\n        console.log(\"componentDidUpdate called\" , prevProps);\r\n        const { hours,seconds,minutes } =  this.props;\r\n        console.log(\"1\",hours);\r\n        console.log(\"2\",prevProps.hours);\r\n\r\n        if(prevProps.hours !== hours){\r\n            this.setState({\r\n                seconds:seconds,\r\n                hours:hours,\r\n                minutes:minutes\r\n               });\r\n        }\r\n        // if(this.state.hours == 0 && this.state.minutes == 0  && this.state.seconds  < 30){\r\n        //     this.setState({\r\n        //         showWarning:true\r\n        //     })\r\n        // }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {hours , minutes , seconds} =  this.props;\r\n        this.myInterval = setInterval(() => {this.getTime()},1000);\r\n       \r\n    }\r\n\r\n\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    render() {\r\n        // const { minutes, hours  , seconds = 60} = this.state;\r\n        // console.log(\"this.state\", this.state);\r\n        const { classes } = this.props;\r\n        console.log(\"time in timer\",this.props);\r\n        // console.log(\"classes\",classes)\r\n        // return (\r\n        //     <div>\r\n        //         {/* { minutes === 0 && seconds === 0 */}\r\n        //         {/* ? <h1>Busted!</h1> */}\r\n        //         <h1>Time Remaining: <span className={classes.showWarningStyl}>\r\n        //             {this.state.hours < 10 ? `0${this.state.hours}hrs` : `${this.state.hours}hrs`} :{this.state.minutes < 10 ? `0${this.state.minutes}min` : `${this.state.minutes}min`}:{this.state.seconds < 10 ? `0${this.state.seconds}sec` : `${this.state.seconds}sec`}\r\n        //         </span>\r\n        //         </h1>\r\n        //         {/* } */}\r\n        //     </div>\r\n\r\n\r\n        return (\r\n            <>\r\n            <Paper elevation={3}>\r\n                <Typography variant=\"h6\" gutterBottom className={classes.padding}>\r\n                    Time Remaining :\r\n                </Typography>\r\n                <Divider />\r\n                <List className={classes.timerStyle}>\r\n                <p>{this.state.showWarning  ? true : false}</p>\r\n                    <ListItem>\r\n                        \r\n                        <ListItemText primary={this.state.hours < 10 ? `0${this.state.hours}` : `${this.state.hours}`} secondary=\"HOURS\" />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemText primary={this.state.minutes < 10 ? `0${this.state.minutes}` : `${this.state.minutes}`} secondary=\"MINUTES\" />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemText primary={this.state.seconds < 10 ? `0${this.state.seconds}` : `${this.state.seconds}`} secondary=\"SECONDS\" />\r\n                    </ListItem>\r\n                </List>\r\n            </Paper>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default withStyles(useStyles)(Timer);\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport classNames from 'classnames';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Brightness1Icon from '@material-ui/icons/Brightness1';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { green, red, grey } from '@material-ui/core/colors';\r\nimport {\r\n    Fab, Box, Typography, Divider\r\n} from '@material-ui/core';\r\nimport Timer from '../Timer';\r\nimport { ExamDataContext } from '../context/ExamDataContext';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    header: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: 50,\r\n        width: '100%',\r\n        paddingLeft: theme.spacing.unit * 5,\r\n        marginBottom: 20,\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    leftContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n\r\n    card: {\r\n        margin: '10px',\r\n        // backgroundColor: 'rgb(0,0,0,0.2)',\r\n    },\r\n    container: {\r\n        overflow: 'auto'\r\n    },\r\n    appbar: {\r\n        alignItems: 'center'\r\n    },\r\n\r\n    buttonDefault: {\r\n        margin: '12px',\r\n        borderRadius: '50%',\r\n        padding: '14px 0px',\r\n        backgroundColor: '#fff',\r\n        color: 'black',\r\n        \"&:hover\": {\r\n            backgroundColor: '#ccc',\r\n        }\r\n    },\r\n    answeredColor: {\r\n        // margin: '12px',\r\n        borderRadius: '50%',\r\n        padding: '14px 0px',\r\n        margin: '12px',\r\n        color: theme.palette.getContrastText(green[900]),\r\n        backgroundColor: green[900],\r\n        // color: '#fff',\r\n        \"&:hover\": {\r\n            backgroundColor: green[900]\r\n        }\r\n    },\r\n\r\n    reviewAnsweredColor: {\r\n        margin: '12px',\r\n        borderRadius: '50%',\r\n        padding: '14px 0px',\r\n        color: '#fff',\r\n        backgroundColor: green[400],\r\n        \"&:hover\": {\r\n            backgroundColor: green[400]\r\n        }\r\n    },\r\n    reviewUnAnsweredColor: {\r\n        margin: '12px',\r\n        borderRadius: '50%',\r\n        padding: '14px 0px',\r\n        color: '#fff',\r\n        backgroundColor: red[200],\r\n        \"&:hover\": {\r\n            backgroundColor: red[200],\r\n        }\r\n    },\r\n    unansweredColor: {\r\n        margin: '12px',\r\n        borderRadius: '50%',\r\n        padding: '14px 0px',\r\n        backgroundColor: 'red',\r\n        color: '#fff',\r\n        \"&:hover\": {\r\n            backgroundColor: 'red',\r\n        }\r\n    },\r\n\r\n    buttonContainer: {\r\n        // display: 'flex',\r\n        // width: 'calc(100% - 17%)',\r\n        // flexDirection: 'row',\r\n        // flexWrap: 'wrap',\r\n        // marginLeft: '30px',\r\n        // maxHeight: '600px',\r\n        // overflowY: 'scroll',\r\n        // boxShadow: '0px 4px 13px -1px rgba(0,0,0,0.2), 0px 1px 10px 0px rgba(0,0,0,0.14), 0px 1px 20px 0px rgba(0,0,0,0.19)',\r\n        // borderRadius: '4px',\r\n        // border: '2px solid  rgba(0,0,0,0.2)',\r\n        // padding: '11px',\r\n        // \"& button\": {\r\n        //     margin: '5px',\r\n        //     height: '43px',\r\n        //     minWidth: '41px'\r\n        // }\r\n        display: 'grid',\r\n        gridTemplateColumns: 'repeat(4, 1fr)',\r\n        placeContent: 'start',\r\n        justifyItems: 'center',\r\n        padding: '8px 15px 30px',\r\n        height: 'calc(100vh - 420px)',\r\n        overflowY: 'auto',\r\n\r\n    },\r\n    legendContainer: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        width: '100%',\r\n        marginTop: 76\r\n    },\r\n    legends: {\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        height: '40px',\r\n        boxShadow: '0px 4px 13px -1px rgba(0,0,0,0.2), 0px 1px 10px 0px rgba(0,0,0,0.14), 0px 1px 20px 0px rgba(0,0,0,0.19)',\r\n        borderRadius: '7px',\r\n        margin: '4px',\r\n        height: 'auto'\r\n\r\n    },\r\n    buttonCls: {\r\n        marginTop: '35px'\r\n    },\r\n    // answeredSample: {\r\n    //     color: theme.palette.getContrastText(green[900]),\r\n    //     backgroundColor: green[900]\r\n    // },\r\n    // unansweredSample: {\r\n    //     color: theme.palette.getContrastText(red[500]),\r\n    //     backgroundColor: red[500]\r\n    // },\r\n    // reviewansweredSample: {\r\n    //     color: theme.palette.getContrastText(green[400]),\r\n    //     backgroundColor: green[400]\r\n    // },\r\n    // reviewunansweredSample: {\r\n    //     color: theme.palette.getContrastText(red[200]),\r\n    //     backgroundColor: red[200]\r\n    // },\r\n    // unvisitedSample: {\r\n    //     color: theme.palette.getContrastText(grey[500]),\r\n    //     backgroundColor: grey[500]\r\n    // },\r\n    buttonGroupText: {\r\n        lineHeight: '12px',\r\n        fontSize: ' 12px',\r\n        fontWeight: 'bold'\r\n    },\r\n    footer: {\r\n        padding: 10,\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    }\r\n}));\r\n\r\n\r\nfunction ButtonsGroup({ arrLen, questionInfo, changeStep }) {\r\n\r\n\r\n\r\n    const classes = useStyles();\r\n    // const [itemClicked, setitemClicked] = useState(-1);\r\n    // const [answersCount, setanswersCount] = useState({ unanswered: 0, answered: 0, reviewA: 0, reviewU: 0 });\r\n    const [newArr, setnewArr] = useState({});\r\n\r\n    const { state } = useContext(ExamDataContext);\r\n    // console.log(\"ButtonsGroup*******\", arrLen, questionInfo, totalQues, changeStep);\r\n\r\n    // useEffect(() => {\r\n    //     console.log(\"ButtonsGroup called\");\r\n    // },[state.reset]);\r\n    console.log(\"questionInfo in ButtonsGroup\", questionInfo);\r\n    useEffect(() => {\r\n        console.log(\"useEffect else called\");\r\n        let tempArr = [];\r\n        if (questionInfo.id == \"\") {\r\n            const createArr = () => {\r\n                console.log(\"createArr called\");\r\n                let obj = {};\r\n                for (let i = 0; i < arrLen.length; i++) {\r\n                    obj[i + 1] = {};\r\n                    obj[i + 1]['answered'] = false;\r\n                    obj[i + 1]['default'] = true;\r\n                    obj[i + 1]['unanswered'] = false;\r\n                    obj[i + 1]['reviewA'] = false;\r\n                    obj[i + 1]['reviewU'] = false;\r\n                    obj[i + 1]['id'] = i + 1;\r\n                    // tempArr.push(obj);\r\n\r\n                }\r\n                // console.log(\"newArr123\", [...newArr, ...tempArr])\r\n                // setnewArr(prevArrValues => (...prevArrValues , ...obj));\r\n                setnewArr(prevState => ({\r\n                    ...prevState,\r\n                    ...obj\r\n                }));\r\n                // setnewArr([...newArr, ...tempArr]);\r\n            }\r\n            if (Object.keys(newArr).length == 0) {\r\n                createArr();\r\n            }\r\n\r\n        } else {\r\n            updateButtons(questionInfo);\r\n        }\r\n\r\n\r\n    }, [arrLen,questionInfo]);\r\n\r\n\r\n\r\n    const updateButtons = (questionInfo) => {\r\n      \r\n        console.log(\"questionInfo called\",questionInfo);\r\n        let buttonState = { ...newArr };\r\n        console.log(\"buttonState called\",buttonState);\r\n        // if (!buttonState[questionInfo.id][questionInfo.type] === true){\r\n            buttonState[questionInfo.id]['answered'] = false;\r\n            buttonState[questionInfo.id]['default'] = false;\r\n            buttonState[questionInfo.id]['unanswered'] = false;\r\n            buttonState[questionInfo.id]['reviewA'] = false;\r\n            buttonState[questionInfo.id]['reviewU'] = false;\r\n            buttonState[questionInfo.id][questionInfo.type] = true;\r\n        // }\r\n       \r\n\r\n\r\n        setnewArr(prevState => ({\r\n            ...prevState,\r\n            ...buttonState\r\n        }));\r\n        // setnewArr(state => {\r\n        //     const newArr = state.map(item => {\r\n        //         if (item.id == questionInfo.id) {\r\n        //             item.answered = false;\r\n        //             item.default = false;\r\n        //             item.unanswered = false;\r\n        //             item.reviewA = false;\r\n        //             item.reviewU = false;\r\n        //             item[questionInfo.type] = true;\r\n        //             item['id'] = questionInfo.id;\r\n\r\n        //         }\r\n        //         return item;\r\n        //     })\r\n        //     return newArr;\r\n        // })\r\n    };\r\n\r\n\r\n    // let unansweredQuestions = totalQues;\r\n    // let answeredQuestions = 0;\r\n    // let reviewUnQuestions = 0;\r\n    // let reviewAnQuestions = 0;\r\n    // let unvisitedQuestions = 0;\r\n\r\n    // let reviewquestionsObj = JSON.parse(localStorage.getItem('reviewQuestionNo'));\r\n    // let answeredQuestionsObj = JSON.parse(localStorage.getItem('questionNo'));\r\n    // let unvisitedQuestions = JSON.parse(localStorage.getItem('unvisitedQues')) === null ? 0 : JSON.parse(localStorage.getItem('unvisitedQues')).length;\r\n\r\n    // console.log(\"unvisitedQuestions\", unvisitedQuestions);\r\n    // console.log(\"answeredQuestionsObj\", answeredQuestionsObj);\r\n    // if (reviewquestionsObj !== null) {\r\n    //     reviewUnQuestions = reviewquestionsObj['reviewU'].length;\r\n    //     reviewAnQuestions = reviewquestionsObj['reviewA'].length;\r\n    // }\r\n    // if (answeredQuestionsObj !== null) {\r\n    //     answeredQuestions = answeredQuestionsObj.length;\r\n    // }\r\n    // unansweredQuestions = totalQues - (answeredQuestions)\r\n    // const [isAnsweredColor, setisAnsweredColor] = useState(false);\r\n    // if (id !== undefined) {\r\n    //     updateButtons(id);\r\n    // }\r\n\r\n    // console.log(\"newArr\", newArr);\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* <Grid container className={classes.container}> */}\r\n\r\n            {/* <Grid item xs={12} md={4} lg={3}> */}\r\n            {/* <Card className={classes.card}>\r\n                        {\r\n                            newArr.map((val, key) => {\r\n                                console.log(val, key);\r\n                                return (<Button key={key} className={classNames({ [classes.buttonDefault]: (itemClicked === key ? false : true), [classes.answeredColor]: (itemClicked === key ? true : false) })} onClick={(val) => clicked(val)} variant=\"contained\" color=\"primary\">\r\n                                    {val.value}\r\n                                </Button>)\r\n                            })\r\n                        }\r\n                    </Card> */}\r\n\r\n            <Timer hours={state.time.hours}  minutes={state.time.minutes}  seconds={state.time.seconds} />\r\n            {/* <div className={classes.legendContainer}>\r\n                <div className={classes.legends} style={{ width: '45%' }}>\r\n                  \r\n                    <Avatar className={classes.answeredSample}>{answeredQuestions}</Avatar>\r\n                    <span className={classes.buttonGroupText}> Answered Questions</span>\r\n                </div>\r\n                <div className={classes.legends} style={{ width: '45%' }}>\r\n                    <Avatar className={classes.unansweredSample}>{unansweredQuestions}</Avatar>\r\n                    <span className={classes.buttonGroupText}> Unanswered Questions</span>\r\n                </div>\r\n\r\n                <div className={classes.legends} style={{ width: '45%' }}>\r\n                    <Avatar className={classes.unvisitedSample}>{unvisitedQuestions}</Avatar>\r\n                    <span className={classes.buttonGroupText}> Unvisited Questions</span>\r\n                </div>\r\n\r\n                <div className={classes.legends} style={{ width: '45%' }}>\r\n                    <Avatar className={classes.reviewansweredSample}>{reviewAnQuestions}</Avatar>\r\n                    <span className={classes.buttonGroupText}> Review Answered Question</span>\r\n                </div>\r\n                <div className={classes.legends} style={{ width: '45%' }}>\r\n                    <Avatar className={classes.reviewunansweredSample}>{reviewUnQuestions}</Avatar>\r\n                    <span className={classes.buttonGroupText}> Review Unanswered Question</span>\r\n                </div>\r\n\r\n            </div> */}\r\n\r\n\r\n\r\n            {/* <div style={{ width: '100%' }}>\r\n                <h3>Question Numbers</h3>\r\n            </div> */}\r\n            {/* <div className={classes.buttonContainer}>\r\n\r\n\r\n                <br />\r\n                {\r\n                    newArr.map((val, key) => {\r\n                        return (\r\n                            <Button key={key} onClick={() => { changeStep(key) }} className={classNames({\r\n                                [classes.buttonDefault]: (val.default === true ? true : false),\r\n                                [classes.unansweredColor]: (val.unanswered === true ? true : false),\r\n                                [classes.answeredColor]: (val.answered === true ? true : false),\r\n                                [classes.reviewAnsweredColor]: (val.reviewA === true ? true : false),\r\n                                [classes.reviewUnAnsweredColor]: (val.reviewU === true ? true : false)\r\n                            })} variant=\"contained\" color=\"primary\">\r\n                                {key + 1}\r\n                            </Button>)\r\n                    })\r\n                }\r\n            </div> */}\r\n\r\n            <Paper elevation={3} className={classes.buttonCls}>\r\n                <Typography variant=\"h6\" gutterBottom className={classes.padding}>\r\n                    Question Numbers\r\n            </Typography>\r\n                <Divider />\r\n                <Box component=\"div\" className={classes.buttonContainer}>\r\n                    {\r\n                        Object.keys(newArr).map((val, key) => {\r\n                            // newArr.map((val, key) => {\r\n                            // console.log(val, key);\r\n                            return (\r\n                                <div key={key}>\r\n                                    <Fab onClick={() => { changeStep(key) }} className={classNames({\r\n                                        [classes.buttonDefault]: (newArr[val].default === true ? true : false),\r\n                                        [classes.unansweredColor]: (newArr[val].unanswered === true ? true : false),\r\n                                        [classes.answeredColor]: (newArr[val].answered === true ? true : false),\r\n                                        [classes.reviewAnsweredColor]: (newArr[val].reviewA === true ? true : false),\r\n                                        [classes.reviewUnAnsweredColor]: (newArr[val].reviewU === true ? true : false)\r\n                                    })} variant=\"contained\" color=\"primary\">\r\n                                        {key + 1}\r\n                                    </Fab>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </Box>\r\n                <Divider />\r\n                <Typography variant=\"h6\" gutterBottom className={classes.footer} >\r\n\r\n                </Typography>\r\n            </Paper>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(ButtonsGroup); \r\n","import React from 'react';\r\nimport {\r\nFab, makeStyles, \r\nBox, List, ListItem, \r\nListItemText, Typography, \r\nListItemAvatar, Divider \r\n} from '@material-ui/core';\r\n\r\nconst userStyles = makeStyles({\r\n\r\n    list: {\r\n        display: 'flex',\r\n        '& li': {\r\n            width: 'auto'\r\n        }\r\n\r\n    },\r\n    \r\n    answered: {\r\n        background: '#21a026 !important',\r\n        color: '#fff',\r\n        '&:hover': {\r\n        background: '#21a026',\r\n\r\n        }\r\n    },\r\n    unanswered: {\r\n        background: '#f44336 !important',\r\n        color: '#fff',\r\n        '&:hover': {\r\n        background: '#f44336',\r\n\r\n        }\r\n    },\r\n    reviewAnswered: {\r\n        background: '#a4db8a !important',\r\n        color: '#333',\r\n        '&:hover': {\r\n        background: '#a4db8a',\r\n\r\n        }\r\n    },\r\n    reviewUnanswered: {\r\n        background: '#e49394 !important',\r\n        color: '#333',\r\n        '&:hover': {\r\n        background: '#e49394',\r\n\r\n        }\r\n    },\r\n    unvisitedQuestion: {\r\n        background: '#fff ',\r\n        color: '#000',\r\n        '&:hover': {\r\n        background: '#fff',\r\n\r\n        }\r\n    },\r\n    padding: {\r\n        padding: 10\r\n    },\r\n})\r\n\r\nconst DisplayQuesCount = ({totalQues}) => {\r\n    const classes = userStyles();\r\n    console.log(\"DisplayQuesCount loaded\");\r\n    let unansweredQuestions = totalQues;\r\n    let answeredQuestions = 0;\r\n    let reviewUnQuestions = 0;\r\n    let reviewAnQuestions = 0;\r\n   \r\n    let reviewquestionsObj = JSON.parse(localStorage.getItem('reviewQuestionNo'));\r\n    let answeredQuestionsObj = JSON.parse(localStorage.getItem('questionNo'));\r\n    let unvisitedQuestions = JSON.parse(localStorage.getItem('unvisitedQues')) === null ? 0 : JSON.parse(localStorage.getItem('unvisitedQues')).length;\r\n\r\n   \r\n    if (reviewquestionsObj !== null) {\r\n        reviewUnQuestions = reviewquestionsObj['reviewU'].length;\r\n        reviewAnQuestions = reviewquestionsObj['reviewA'].length;\r\n    }\r\n    if (answeredQuestionsObj !== null) {\r\n        answeredQuestions = answeredQuestionsObj.length;\r\n    }\r\n    unansweredQuestions = totalQues - (answeredQuestions)\r\n    return (\r\n       \r\n        <Box component=\"div\">\r\n            <Typography variant=\"h6\" gutterBottom className={classes.padding}>\r\n                Question Hints\r\n            </Typography>\r\n            <Divider />\r\n                <List className={classes.list}>\r\n                    <ListItem>\r\n                        <ListItemAvatar>\r\n                            <Fab className={classes.answered} size=\"small\">{answeredQuestions}</Fab>\r\n                        </ListItemAvatar>\r\n                        <ListItemText>Answered </ListItemText>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemAvatar>\r\n                            <Fab className={classes.unanswered} size=\"small\">{unansweredQuestions}</Fab>\r\n                        </ListItemAvatar>\r\n                        <ListItemText>Unanswered </ListItemText>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemAvatar>\r\n                            <Fab className={classes.unvisitedQuestion} size=\"small\">{unvisitedQuestions}</Fab>\r\n                        </ListItemAvatar>\r\n                        <ListItemText>Unvisited </ListItemText>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemAvatar>\r\n                            <Fab className={classes.reviewAnswered} size=\"small\">{reviewAnQuestions}</Fab>\r\n                        </ListItemAvatar>\r\n                        <ListItemText>Review Answered </ListItemText>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemAvatar>\r\n                            <Fab className={classes.reviewUnanswered} size=\"small\">{reviewUnQuestions}</Fab>\r\n                        </ListItemAvatar>\r\n                        <ListItemText>Review Unanswered </ListItemText>\r\n                    </ListItem>\r\n                </List>\r\n               \r\n                <Divider />\r\n            </Box>\r\n  \r\n    )\r\n}\r\n\r\nexport default  DisplayQuesCount\r\n","import React, { useState, useEffect, useContext, useCallback } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport classNames from 'classnames';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Brightness1Icon from '@material-ui/icons/Brightness1';\r\nimport Questions from './Questions';\r\nimport RadioButtonsGroup from './Objective';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ButtonsGroup from './buttonsGroup/buttonsGroup';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport { ExamDataContext } from './context/ExamDataContext';\r\nimport DisplayQuesCount from './buttonsGroup/displayQuesCount';\r\nimport {\r\n    Divider,\r\n    AppBar,\r\n    Toolbar,\r\n    IconButton\r\n} from '@material-ui/core';\r\n\r\n\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    header: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: 50,\r\n        width: '100%',\r\n        marginBottom: 20,\r\n        marginTop: 25,\r\n        backgroundColor: theme.palette.background.default,\r\n        \"& p\": {\r\n            color: '#000',\r\n            fontSize: '20px',\r\n            lineHeight: '1.4'\r\n        }\r\n    },\r\n    Toolbar: {\r\n        justifyContent: 'center',\r\n        gridGap: 34\r\n    },\r\n    Footer: {\r\n        background: 'transparent',\r\n        boxShadow: 'none'\r\n    },\r\n    leftContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        background: '#fff',\r\n        borderRadius: 6,\r\n        height: ' calc(100% - 30px)'\r\n    },\r\n    mobileStepper: {\r\n        paddingLeft: theme.spacing.unit * 3,\r\n        paddingRight: theme.spacing.unit * 3\r\n    },\r\n\r\n    card: {\r\n        margin: '10px',\r\n        // backgroundColor: 'rgb(0,0,0,0.2)',\r\n    },\r\n    containerStyle: {\r\n        padding: '16px 16px 18px 16px',\r\n        background: '#e4e0f9',\r\n        justifyContent: 'space-between'\r\n    },\r\n    appbar: {\r\n        alignItems: 'center'\r\n    },\r\n    mobileStepper: {\r\n        paddingLeft: theme.spacing.unit * 3,\r\n        paddingRight: theme.spacing.unit * 3\r\n    },\r\n\r\n    buttonDefault: {\r\n        margin: '12px',\r\n        borderRadius: '50%',\r\n        padding: '14px 0px',\r\n        backgroundColor: '#fff',\r\n        color: 'black',\r\n        \"&:hover\": {\r\n            backgroundColor: '#ccc',\r\n        }\r\n    },\r\n    answeredColor: {\r\n        // margin: '12px',\r\n        borderRadius: '50%',\r\n        padding: '14px 0px',\r\n        backgroundColor: 'green',\r\n        color: '#fff',\r\n        \"&:hover\": {\r\n            backgroundColor: '#8bb58b',\r\n        }\r\n    },\r\n\r\n    reviewColor: {\r\n        margin: '12px',\r\n        borderRadius: '50%',\r\n        padding: '14px 0px',\r\n        backgroundColor: 'red',\r\n        color: '#fff',\r\n        \"&:hover\": {\r\n            backgroundColor: 'red',\r\n        }\r\n    },\r\n    buttonContainer: {\r\n        display: 'flex',\r\n        width: 'calc(100% - 17%)',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        marginLeft: '44px',\r\n        maxHeight: '600px',\r\n        overflowY: 'scroll',\r\n        boxShadow: '0px 4px 13px -1px rgba(0,0,0,0.2), 0px 1px 10px 0px rgba(0,0,0,0.14), 0px 1px 20px 0px rgba(0,0,0,0.19)',\r\n        borderRadius: '4px',\r\n        border: '2px solid  rgba(0,0,0,0.2)',\r\n        padding: '11px',\r\n        \"& button\": {\r\n            margin: '5px',\r\n\r\n            minWidth: '50px'\r\n        }\r\n    },\r\n    rightIcon: {\r\n        height: 40\r\n    },\r\n    legendContainer: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        width: '96%',\r\n        marginTop: 76,\r\n        marginLeft: 19,\r\n        boxShadow: '0px 4px 13px -1px rgb(0 0 0 / 20%), 0px 1px 10px 0px rgb(0 0 0 / 14%), 0px 1px 20px 0px rgb(0 0 0 / 19%)'\r\n    },\r\n    legends: {\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        height: '40px',\r\n        boxShadow: '0px 4px 13px -1px rgba(0,0,0,0.2), 0px 1px 10px 0px rgba(0,0,0,0.14), 0px 1px 20px 0px rgba(0,0,0,0.19)',\r\n        borderRadius: '7px',\r\n        margin: '4px'\r\n\r\n    },\r\n    swipableViews: {\r\n        position: 'relative',\r\n        width: '100%'\r\n    },\r\n    rightContainer: {\r\n        marginLeft: '24px'\r\n    },\r\n    buttonContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around'\r\n    }\r\n});\r\n\r\nfunction Test(props) {\r\n    const { state, dispatch } = useContext(ExamDataContext);\r\n    // console.log(\"state,dispatch\", state, dispatch);\r\n    const [activeStep, setactiveStep] = useState(0);\r\n    const history = useHistory();\r\n    const [currentQuestion, setCurrentQuestion] = useState({});\r\n    const [finalData, setfinalData] = useState([]);\r\n    const [maxSteps, setMaxSteps] = useState(0);\r\n    // const maxSteps = Questions.length;\r\n    const { classes, theme } = props;\r\n    let quesNo = '';\r\n    var hidden, visibilityChange;\r\n    const [logout, setLogout] = useState(false);\r\n    const [question, setquestion] = useState(0);\r\n    const [questionList, setquestionList] = useState([]);\r\n    const [resetData, setResetData] = useState('');\r\n    const [questionNo, setquestionNo] = useState({ id: '', type: 'unanswered' });\r\n    console.log(\"Tets component loaded\");\r\n    useEffect(() => {\r\n        console.log(\"test getting called\");\r\n        dispatch({ type: 'HANDLELOADING', isLoading: true });\r\n        let keys = {};\r\n        axios.get('cbt/student/getQuestions/1').then(res => {\r\n            let arr = [];\r\n            let unvisitedArr = [];\r\n\r\n            for (let i = 0; i < res.data.questionList.Questions.length; i++) {\r\n                unvisitedArr.push(i);\r\n                arr.push(res.data.questionList.Questions[i]);\r\n                if (i === 30) {\r\n                    break\r\n                }\r\n            }\r\n            // console.log(\"res.data.questionList.Questions\",res.data.questionList.Questions);\r\n            setquestionList(arr);\r\n            // console.log(\"arr.length\", arr.length);\r\n            setMaxSteps(arr.length);\r\n            setCurrentQuestion(res.data.questionList.Questions[activeStep]);\r\n            // setquestionList(arr);\r\n            dispatch({\r\n                type: 'ADDINFO', hours: res.data.durationHr, minutes: res.data.durationMin, photo: res.data.photo, name: res.data.instituteName,\r\n                candidateName: res.data.candidateName, registrationNo: res.data.registrationNo, isLoading: false,time:{hours:res.data.durationHr,minutes:res.data.durationMin,seconds:60}\r\n            });\r\n            // populateResultSet();\r\n            localStorage.setItem('unvisitedQues', JSON.stringify(unvisitedArr));\r\n        });\r\n\r\n\r\n        if (typeof document.hidden !== \"undefined\") { // Opera 12.10 and Firefox 18 and later support\r\n            hidden = \"hidden\";\r\n            visibilityChange = \"visibilitychange\";\r\n        } else if (typeof document.msHidden !== \"undefined\") {\r\n            hidden = \"msHidden\";\r\n            visibilityChange = \"msvisibilitychange\";\r\n        } else if (typeof document.webkitHidden !== \"undefined\") {\r\n            hidden = \"webkitHidden\";\r\n            visibilityChange = \"webkitvisibilitychange\";\r\n        }\r\n        // alert(visibilityChange)\r\n\r\n\r\n\r\n\r\n        // window.onbeforeunload = (event) => {\r\n        //     console.log(\"onbeforeunload called\");\r\n        //     const e = event || window.event;\r\n        //     // Cancel the event\r\n        //     var msg = '';\r\n        //     e = e || window.event;\r\n        //     e.preventDefault();\r\n        //     if (e) {\r\n        //         e.returnValue = msg; // Legacy method for cross browser support\r\n        //     }\r\n        //     return msg; // Legacy method for cross browser support\r\n        //     // return \"Are you sure you want to navigate away?\";\r\n        // };\r\n\r\n        document.addEventListener(visibilityChange, handleVisibilityChange, false);\r\n\r\n        // document.addEventListener('keydown', (e) => {\r\n        //     console.log(e.which);\r\n        //     // if (e.which === 91 || e.key === \"Tab\")\r\n        //     keys[e.which] = true;\r\n        //     if (e.keyCode === 18) e.preventDefault()\r\n        //     e.preventDefault();\r\n\r\n        // });\r\n\r\n\r\n        // document.addEventListener('contextmenu', (e) => {\r\n        //     console.log(e.which);\r\n\r\n        //     e.preventDefault();\r\n        // });\r\n    }, []);\r\n\r\n\r\n    // useEffect(() => {\r\n    //     const unblock = history.block((location, action) => {\r\n    //         // if (checkBlockingCondition) {\r\n    //         alert(\"called\");\r\n    //         return window.confirm(\"Navigate Back?\");\r\n    //         // }\r\n    //         // return true;\r\n    //     });\r\n    //     return () => {\r\n    //         unblock();\r\n    //     }\r\n    // }, [])\r\n\r\n    // useEffect(() => {\r\n    //     const unblock = history.block((location, action) => {\r\n\r\n    //         return window.confirm(\"Navigate Back?\");\r\n\r\n    //         // return true;\r\n    //     });\r\n\r\n    //     return () => {\r\n    //         unblock();\r\n    //     };\r\n    // }, [])\r\n\r\n\r\n\r\n    const handleVisibilityChange = () => {\r\n        // console.log(\"called\");\r\n        // if (document[hidden]) {\r\n        //     setLogout(true);\r\n        // } else {\r\n        //     history.push('/login');\r\n        // }\r\n\r\n        // window.reload();\r\n        // setLogout(true);\r\n        //  \r\n\r\n    }\r\n\r\n    // const saveQuestion = (e) => {\r\n    //     console.log(e);\r\n    //     console.log(\"quesNo\", quesNo);\r\n    //     // if (e == \"save\")\r\n    //     //     setquestionNo({ id: 1, type: 'answered' });\r\n    //     // else {\r\n    //     //     if (JSON.parse(localStorage.getItem('questionNo')) === null)\r\n    //     //         setquestionNo({ id: 1, type: 'reviewU' });\r\n    //     //     else\r\n    //     //         setquestionNo({ id: 1, type: 'reviewA' });\r\n    //     // }\r\n\r\n    //     if (JSON.parse(localStorage.getItem('questionNo')) === null) {\r\n    //         if (e == \"save\") {\r\n    //             setquestionNo({ id: 1, type: 'unanswered' });\r\n    //         } else {\r\n    //             setquestionNo({ id: 1, type: 'reviewU' });\r\n    //         }\r\n    //     } else {\r\n    //         if (e == \"save\") {\r\n    //             setquestionNo({ id: 1, type: 'answered' });\r\n    //         } else {\r\n    //             setquestionNo({ id: 1, type: 'reviewA' });\r\n    //         }\r\n\r\n    //     }\r\n\r\n\r\n\r\n    // }\r\n\r\n\r\n    const submitAnswers = () => {\r\n        // for(let i = 1 ; i < questionList.length;i++){\r\n        //     if(finalData() questionList[i])\r\n        // }\r\n        console.log(JSON.stringify(finalData));\r\n        let obj = { registrationNo: 2, resp: finalData };\r\n        axios.put('/student/submitExam', obj).then(res => {\r\n            console.log(\"res\", res);\r\n        })\r\n        console.log(\"obj\", obj);\r\n    }\r\n\r\n    // const reviewQuestion = () => {\r\n    //     let reviewquestions;\r\n    //     if ((JSON.parse(localStorage.getItem('reviewQuestionNo'))) === null) {\r\n\r\n    //         localStorage.setItem('reviewQuestionNo', JSON.stringify({ 'reviewU': [], 'reviewA': [] }));\r\n    //     }\r\n    //     reviewquestions = JSON.parse(localStorage.getItem('reviewQuestionNo'));\r\n\r\n    //     console.log(\"activeStep\", activeStep)\r\n    //     let activeQues = activeStep + 1;\r\n    //     let questions = JSON.parse(localStorage.getItem('questionNo'));\r\n    //     console.log(\"reviewquestions\", reviewquestions);\r\n    //     if (questions && questions.indexOf(activeQues) > -1) {\r\n    //         // if (JSON.parse(localStorage.getItem('questionNo')) === question) {\r\n    //         if (reviewquestions && reviewquestions['reviewA'].indexOf(activeQues) == -1) {\r\n\r\n    //             reviewquestions['reviewA'].push(activeQues);\r\n    //             if (reviewquestions['reviewU'].indexOf(activeQues) > -1) {\r\n    //                 reviewquestions['reviewU'].splice(reviewquestions['reviewU'].indexOf(activeQues), 1);\r\n    //             }\r\n    //         }\r\n\r\n\r\n    //         setquestionNo({ id: activeQues, type: 'reviewA' });\r\n    //     } else {\r\n    //         if (reviewquestions && reviewquestions['reviewU'].indexOf(activeQues) == -1) {\r\n    //             reviewquestions['reviewU'].push(activeQues);\r\n    //             if (reviewquestions['reviewA'].indexOf(activeQues) > -1) {\r\n    //                 reviewquestions['reviewA'].splice(reviewquestions['reviewA'].indexOf(activeQues), 1);\r\n    //             }\r\n    //         }\r\n\r\n\r\n    //         setquestionNo({ id: activeQues, type: 'reviewU' });\r\n    //     }\r\n    //     localStorage.setItem('reviewQuestionNo', JSON.stringify(reviewquestions));\r\n    //     setactiveStep(activeStep + 1);\r\n    // }\r\n\r\n\r\n\r\n    const checkVisitedQues = (key) => {\r\n        let unvisitedQues = JSON.parse(localStorage.getItem('unvisitedQues'));\r\n        if (unvisitedQues !== null) {\r\n            if (unvisitedQues.indexOf(key + 1) > -1) {\r\n                unvisitedQues.splice(unvisitedQues.indexOf(key + 1), 1);\r\n            }\r\n            localStorage.setItem('unvisitedQues', JSON.stringify(unvisitedQues));\r\n        }\r\n\r\n    }\r\n\r\n    const changeActiveStep = (key) => {\r\n        // console.log(\"key\", key);\r\n        checkVisitedQues(key);\r\n        setCurrentQuestion(questionList[key]);\r\n        setactiveStep(key);\r\n    }\r\n\r\n    const reviewAndNext = useCallback(() => {\r\n        let activeQues = activeStep + 1;\r\n        checkVisitedQues(activeStep);\r\n        let questions = JSON.parse(localStorage.getItem('questionNo'));\r\n        let obj;\r\n        if (questions === null || (questions.indexOf(activeQues) === -1)) {\r\n            let reviewQues = JSON.parse(localStorage.getItem('reviewQuestionNo'));\r\n            if (reviewQues === null) {\r\n                obj = { reviewU: [activeQues], reviewA: [] };\r\n            } else {\r\n                obj = reviewQues;\r\n                if (obj.reviewU.indexOf(activeQues) === -1) {\r\n                    obj.reviewU = obj.reviewU.concat(activeQues);\r\n                }\r\n                if (obj.reviewA.indexOf(activeQues) > -1) {\r\n                    obj.reviewA.splice(obj.reviewA.indexOf(activeQues), 1);\r\n                }\r\n            }\r\n            setquestionNo({ id: activeQues, type: 'reviewU' });\r\n            localStorage.setItem('reviewQuestionNo', JSON.stringify(obj));\r\n\r\n        } else {\r\n            if (questions.indexOf(activeQues) > -1) {\r\n                let reviewQues = JSON.parse(localStorage.getItem('reviewQuestionNo'));\r\n                if (reviewQues === null) {\r\n                    let obj = { reviewU: [], reviewA: [activeQues] };\r\n                    setquestionNo({ id: activeQues, type: 'reviewA' });\r\n                    localStorage.setItem('reviewQuestionNo', JSON.stringify(obj));\r\n                } else {\r\n                    let obj = reviewQues;\r\n                    if (obj.reviewA.indexOf(activeQues) === -1) {\r\n                        obj.reviewA = obj.reviewA.concat(activeQues);\r\n                    }\r\n                    if (obj.reviewU.indexOf(activeQues) > -1) {\r\n                        obj.reviewU.splice(obj.reviewU.indexOf(activeQues), 1);\r\n                    }\r\n                    setquestionNo({ id: activeQues, type: 'reviewA' });\r\n                    localStorage.setItem('reviewQuestionNo', JSON.stringify(obj));\r\n                }\r\n            }\r\n            // else {\r\n            //     let reviewQues = JSON.parse(localStorage.getItem('reviewQuestionNo'));\r\n            //     if(reviewQues === null){\r\n            //         let obj = {reviewU:[activeQues] , reviewA:[]};\r\n            //         localStorage.setItem('reviewQuestionNo', JSON.stringify(obj));\r\n            //           setquestionNo({ id: activeQues, type: 'reviewU' });\r\n            //     } else {\r\n            //         let obj = reviewQues;\r\n            //         obj.reviewU = obj.reviewU.concat(activeQues);\r\n            //         obj.reviewA.splice( obj.reviewA.indexOf(activeQues) , 1);\r\n            //         localStorage.setItem('reviewQuestionNo', JSON.stringify(obj));\r\n            //         setquestionNo({ id: activeQues, type: 'reviewU' });\r\n            //     }\r\n            // }\r\n            // }\r\n        }\r\n        setCurrentQuestion(questionList[(activeStep + 1)]);\r\n        setactiveStep(activeStep + 1);\r\n\r\n    }, [activeStep]);\r\n    // () => {\r\n\r\n    // }\r\n\r\n\r\n    // const saveAndNext =  useCallback(() => {\r\n    //     let activeQues = activeStep + 1;\r\n    //     checkVisitedQues(activeStep);\r\n    //     setCurrentQuestion(questionList[activeQues]);\r\n    //     let questions = JSON.parse(localStorage.getItem('questionNo'));\r\n    //     let reviewQues = JSON.parse(localStorage.getItem('reviewQuestionNo'));\r\n    //     if (questions && questions.indexOf(activeQues) > -1) {\r\n    //         setquestionNo({ id: activeQues, type: 'answered' });\r\n    //     }\r\n    //     if (reviewQues !== null) {\r\n    //         let obj = reviewQues;\r\n    //         if (obj.reviewA.indexOf(activeQues) > -1) {\r\n    //             obj.reviewA.splice(obj.reviewA.indexOf(activeQues), 1);\r\n    //         }\r\n\r\n    //         if (obj.reviewU.indexOf(activeQues) > -1) {\r\n    //             obj.reviewU.splice(obj.reviewU.indexOf(activeQues), 1);\r\n    //         }\r\n\r\n    //         console.log(\"obj\", obj);\r\n    //         localStorage.setItem('reviewQuestionNo', JSON.stringify(obj));\r\n    //     }\r\n    //     setactiveStep(activeStep + 1);\r\n    // },[activeStep]);\r\n\r\n    const saveAndNext = () => {\r\n        let activeQues = activeStep + 1;\r\n        checkVisitedQues(activeStep);\r\n        let questions = JSON.parse(localStorage.getItem('questionNo'));\r\n        let reviewQues = JSON.parse(localStorage.getItem('reviewQuestionNo'));\r\n        if (questions && questions.indexOf(activeQues) > -1) {\r\n            setquestionNo({ id: activeQues, type: 'answered' });\r\n        }\r\n        if (reviewQues !== null) {\r\n            let obj = reviewQues;\r\n            if (obj.reviewA.indexOf(activeQues) > -1) {\r\n                obj.reviewA.splice(obj.reviewA.indexOf(activeQues), 1);\r\n            }\r\n\r\n            if (obj.reviewU.indexOf(activeQues) > -1) {\r\n                obj.reviewU.splice(obj.reviewU.indexOf(activeQues), 1);\r\n            }\r\n\r\n            console.log(\"obj\", obj);\r\n            localStorage.setItem('reviewQuestionNo', JSON.stringify(obj));\r\n        }\r\n        setCurrentQuestion(questionList[(activeStep + 1)]);\r\n        setactiveStep(activeStep + 1);\r\n    }\r\n\r\n    const handleNext = () => {\r\n        checkVisitedQues(activeStep);\r\n        setCurrentQuestion(questionList[(activeStep + 1)]);\r\n        setactiveStep(activeStep + 1);\r\n    };\r\n\r\n\r\n    const resetoption = () => {\r\n\r\n        // dispatch({type:'RESET',reset:true});\r\n        \r\n        localStorage.setItem('isReset', JSON.stringify({ 'reset': true }));\r\n\r\n        // for (let i = 0; i < questionList.length; i++) {\r\n        //     if (questionList[i].id.questionNo === (activeStep + 1)) {\r\n        //         if (questionList[i].multiple === 'N') {\r\n        //             setResetData('radio');\r\n        //         } else {\r\n        //             setResetData('checkbox');\r\n        //         }\r\n        //     }\r\n        // }\r\n        let answeredQues = JSON.parse(localStorage.getItem('questionNo'));\r\n        let reviewQuestionNo = JSON.parse(localStorage.getItem('reviewQuestionNo'));\r\n        if (answeredQues !== null) {\r\n            if (answeredQues.indexOf(activeStep + 1) > -1) {\r\n                answeredQues.splice(answeredQues.indexOf(activeStep + 1), 1);\r\n            }\r\n            localStorage.setItem('questionNo', JSON.stringify(answeredQues));\r\n\r\n        }\r\n        if (reviewQuestionNo !== null) {\r\n            if (reviewQuestionNo.reviewU.indexOf(activeStep + 1) > -1) {\r\n                reviewQuestionNo.reviewU.splice(reviewQuestionNo.reviewU.indexOf(activeStep + 1), 1);\r\n            }\r\n            if (reviewQuestionNo.reviewA.indexOf(activeStep + 1) > -1) {\r\n                reviewQuestionNo.reviewA.splice(reviewQuestionNo.reviewA.indexOf(activeStep + 1), 1);\r\n            }\r\n            localStorage.setItem('reviewQuestionNo', JSON.stringify(reviewQuestionNo));\r\n        }\r\n        setquestionNo({ id: (activeStep + 1), type: 'default' });\r\n        setactiveStep(activeStep);\r\n        dispatch({ type: 'RESET', reset: true });\r\n    }\r\n\r\n    const handleBack = () => {\r\n        setactiveStep(activeStep - 1);\r\n        setCurrentQuestion(questionList[(activeStep - 1)]);\r\n    };\r\n\r\n\r\n    const handleStepChange = activeStep => {\r\n        setactiveStep(activeStep);\r\n    };\r\n\r\n\r\n\r\n    const response = (event) => {\r\n        let index = -1;\r\n        let newAns = [];\r\n        if (event.isradio) {\r\n            let resData = [...state.finalData];\r\n            // let resData = [...finalData];\r\n\r\n\r\n\r\n            for (let i = 0; i < resData.length; i++) {\r\n                if (resData[i]['id']['questionId'] == event.id) {\r\n                    // isUpdate = true;\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n            newAns.push(event.option);\r\n            let option = newAns[0].trim();\r\n            if (index === -1) {\r\n                let obj = {\r\n                    \"id\": {\r\n                        registrationNo: 2,\r\n                        questionId: event.id,\r\n                        yearOfExam: 2020\r\n                    },\r\n                    selectedAnswer: option\r\n                }\r\n                resData = [...resData, obj];\r\n            } else {\r\n                resData[index].selectedAnswer = option;\r\n            }\r\n\r\n            //  if radio is checked\r\n\r\n            // setfinalData(resData);\r\n            dispatch({ type: 'ADD_FINAL_DATA', finalData: resData });\r\n\r\n        } else {\r\n            //  if checkbox is checked\r\n            let resData = [...state.finalData];\r\n            for (let i = 0; i < resData.length; i++) {\r\n                if (resData[i]['id']['questionId'] == event.id) {\r\n                    // isUpdate = true;\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n            if (index === -1) {\r\n                newAns.push(event.name);\r\n                let option = newAns[0].trim();\r\n                let obj = {\r\n                    \"id\": {\r\n                        registrationNo: 2,\r\n                        questionId: event.id,\r\n                        yearOfExam: 2020\r\n                    },\r\n                    selectedAnswer: option\r\n                }\r\n                resData = [...resData, obj];\r\n                // setfinalData(resData);\r\n                dispatch({ type: 'ADD_FINAL_DATA', finalData: resData });\r\n            } else {\r\n                let selectedOptionObj = resData[index];\r\n                let isElemPresent = false;\r\n                let prevAns = selectedOptionObj['selectedAnswer'];\r\n                // if (prevAns === \"\") {\r\n                //     newAns.push(event.name);\r\n                // } else {\r\n                newAns = prevAns === \"\" ? [] : prevAns.split(\",\");\r\n                // }\r\n                // if (newAns.length === 0) {\r\n                //     newAns.push(event.name);\r\n                // } else {\r\n                for (let i = 0; i < newAns.length; i++) {\r\n                    if (newAns[i].trim() == event.name.trim()) {\r\n                        isElemPresent = true;\r\n                        // if checked flag is turn to false\r\n                        if (event.isChecked === false) {\r\n                            newAns.splice(i, 1);\r\n                            i--;\r\n                        }\r\n                    }\r\n                }\r\n                if (!isElemPresent) {\r\n                    // if checked flag is turned to true\r\n                    newAns.push(event.name);\r\n                }\r\n                if (newAns.length === 0) {\r\n                    resData[index].selectedAnswer = \"\";\r\n                } else {\r\n                    // let obj = {\r\n                    //     \"id\": {\r\n                    //         registrationNo: 2,\r\n                    //         questionId: event.id,\r\n                    //         yearOfExam: 2020\r\n                    //     },\r\n                    //     selectedAnswer: (newAns.join(\",\"))\r\n                    // }\r\n                    resData[index].selectedAnswer = (newAns.join(\",\"));\r\n                    // resData = [...resData];\r\n                }\r\n\r\n                dispatch({ type: 'ADD_FINAL_DATA', finalData: resData });\r\n                // setfinalData(resData);\r\n                // }\r\n            }\r\n        }\r\n        if (event.id !== undefined) {\r\n            let arr = [];\r\n            const questionNo = JSON.parse(localStorage.getItem('questionNo'));\r\n            if (questionNo === null) {\r\n                arr.push(event.id);\r\n            } else {\r\n                if (questionNo.indexOf(event.id) == -1) {\r\n                    arr = questionNo.concat(event.id);\r\n                } else {\r\n                    arr = questionNo;\r\n                }\r\n\r\n            }\r\n\r\n            localStorage.setItem('questionNo', JSON.stringify(arr));\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    const resetValue = (flag) => {\r\n        setResetData(flag);\r\n    }\r\n\r\n    const checkQuestionNo = (quesNo) => {\r\n        console.log(\"quesNo\", quesNo);\r\n        // localStorage.setItem('questionNo', JSON.stringify(quesNo));\r\n        quesNo = quesNo;\r\n        setquestion(quesNo);\r\n        //setquestionNo({ id: quesNo, type: 'answered' });\r\n        // setquestionNo(quesNo);\r\n        // quesNo = String(quesNo);\r\n        // const questionNo = JSON.parse(localStorage.getItem('questionNo'));\r\n        // const result = questionNo.includes(quesNo);\r\n\r\n        // if (result === true) {\r\n        //     const questionNos = questionNo.filter((questionNumber) => {\r\n        //         return questionNumber !== quesNo;\r\n        //     });\r\n\r\n        //     localStorage.setItem('questionNo', JSON.stringify(questionNos));\r\n        //     localStorage.setItem('candidateScore', String(questionNos.length));\r\n        // }\r\n    }\r\n    return (\r\n        <>\r\n\r\n            <Grid container className={classes.containerStyle}>\r\n                <Grid container xs={12} md={8} lg={8} className={classes.leftContainer}>\r\n                    <DisplayQuesCount totalQues={questionList.length} />\r\n                    {/* <Paper square elevation={0} className={classes.header}>\r\n                       <span>\r\n                       <Typography>{questionList && questionList[activeStep] && questionList[activeStep].id && questionList[activeStep].id.questionNo} {questionList && questionList[activeStep] && questionList[activeStep].question}</Typography>\r\n                       </span> \r\n                    </Paper> */}\r\n                    {/* <Prompt  message=\"Are you sure you want to logout ?\" /> */}\r\n                    {/* {Questions.map(question => ( */}\r\n\r\n\r\n\r\n                    <div>\r\n\r\n                        {questionList && (<div>\r\n                            <RadioButtonsGroup\r\n                                // isReset={resetData}\r\n                                activeStep={activeStep}\r\n                                objective={currentQuestion}\r\n                            // setReset={(isReset) => { resetValue(isReset) }}\r\n                            // reset={resetData}\r\n\r\n                            // response={(event) => response(event)}\r\n                            // checkQuestionNo={(quesNo) => checkQuestionNo(quesNo)}\r\n                            />\r\n                        </div>)}\r\n\r\n                    </div>\r\n                    {/* <div className={classes.swipableViews}>\r\n                        <SwipeableViews\r\n                            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                            index={activeStep}\r\n                            key={activeStep}\r\n                            onChangeIndex={handleStepChange}\r\n                            enableMouseEvents\r\n                        >                           \r\n                            {questionList && questionList.map(question => (\r\n                                <div key={question.id.questionNo}>\r\n                                     <RadioButtonsGroup\r\n                                    activeStep={activeStep}\r\n                                    objective={question}\r\n                                     />\r\n                                </div>\r\n                               \r\n                            ))}\r\n\r\n                        </SwipeableViews>\r\n                    </div> */}\r\n\r\n                    {/* ))} */}\r\n                    {/* <MobileStepper\r\n                        steps={maxSteps}\r\n                        position=\"static\"\r\n                        variant=\"progress\"\r\n                        activeStep={activeStep}\r\n                        className={classes.mobileStepper}\r\n                        nextButton={\r\n                            <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\r\n                                Save & Next\r\n              {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n                            </Button>\r\n                        }\r\n                        backButton={\r\n                            <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n                                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n                  Back\r\n            </Button>\r\n\r\n                        }\r\n                    /> */}\r\n                    <Divider />\r\n                    <AppBar position=\"static\" className={classes.Footer}>\r\n                        <Toolbar className={classes.Toolbar}>\r\n                            <IconButton aria-label=\"left arrow\" disabled={activeStep === 0} onClick={handleBack}>\r\n                                <ArrowBackIosIcon></ArrowBackIosIcon>\r\n                            </IconButton>\r\n                            {/* <Button variant=\"outlined\" onClick={handleBack} endIcon={<ArrowBackIosIcon></ArrowBackIosIcon>} disabled={activeStep === 0}></Button> */}\r\n\r\n                            <Button variant=\"outlined\" onClick={resetoption} color=\"secondary\">Reset</Button>\r\n\r\n                            <Button type=\"button\" variant=\"outlined\" color=\"primary\" onClick={reviewAndNext} disabled={activeStep === maxSteps - 1}>\r\n                                Review & Next\r\n                    </Button>\r\n                            <Button type=\"button\" variant=\"outlined\" color=\"primary\" onClick={saveAndNext} disabled={activeStep === maxSteps - 1}>\r\n                                Save & Next\r\n                    </Button>\r\n                            <Button color=\"primary\" variant=\"contained\" onClick={submitAnswers}>Submit</Button>\r\n                            {/* <Button color=\"primary\" className={classes.rightIcon} onClick={handleNext} endIcon={<ArrowForwardIosIcon></ArrowForwardIosIcon>} disabled={activeStep === maxSteps - 1} variant=\"contained\"></Button> */}\r\n                            <IconButton aria-label=\"right arrow\" disabled={activeStep === maxSteps - 1} onClick={handleNext}>\r\n                                <ArrowForwardIosIcon></ArrowForwardIosIcon>\r\n                            </IconButton>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n\r\n                    {/* <div className={classes.buttonContainer}>\r\n\r\n                        <div>\r\n                            <Button size=\"small\" onClick={handleBack} endIcon={<ArrowBackIosIcon></ArrowBackIosIcon>} disabled={activeStep === 0}>\r\n                            </Button>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div>\r\n                            <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={resetoption} >\r\n\r\n                                Reset\r\n                            </Button>\r\n\r\n                            <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={submitAnswers} >\r\n\r\n                                Submit\r\n                            </Button>\r\n\r\n\r\n                            <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={reviewAndNext} disabled={activeStep === maxSteps - 1}>\r\n\r\n                                Review & Next\r\n                            </Button>\r\n\r\n\r\n                            <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={saveAndNext} disabled={activeStep === maxSteps - 1}>\r\n\r\n                                Save & Next\r\n                            </Button>\r\n                        </div>\r\n\r\n\r\n                        <div>\r\n                            <Button size=\"small\" onClick={handleNext} endIcon={<ArrowForwardIosIcon></ArrowForwardIosIcon>} disabled={activeStep === maxSteps - 1}>\r\n                            </Button>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    {/* <Button onClick={() => { saveQuestion('save') }} value=\"save\" variant=\"contained\">Save & Next</Button>\r\n                    <Button onClick={() => { saveQuestion('review') }} onClick={saveQuestion} variant=\"contained\" color=\"primary\">\r\n                        Review\r\n                    </Button> */}\r\n                </Grid>\r\n                <Grid item xs={12} md={4} lg={3} className={classes.rightContainer}>\r\n\r\n                    <ButtonsGroup arrLen={questionList} questionInfo={questionNo} changeStep={changeActiveStep} />\r\n\r\n\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default withStyles(useStyles, { withTheme: true })(Test);\r\n// export default Test\r\n","import React, { useState, useEffect,useContext } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Footer from '../footer/footer';\r\nimport Header from '../header/header';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Test from '../Test'; import Modal from '@material-ui/core/Modal';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { ExamDataContext } from '../context/ExamDataContext';\r\n// import {login} from '../../login.png';\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    backgroundImage:`url(login.jpg)`,\r\n\r\n    backgroundSize:'cover',\r\n    backgroundRepeat:'no-repeat'\r\n  },\r\n\r\n  paper: {\r\n    marginTop: theme.spacing(15),\r\n    background:'#fff',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    boxShadow: 'rgba(0, 0, 0, 0.2) 0px 3px 3px -2px, rgba(0, 0, 0, 0.14) 0px 3px 4px 0px, rgba(0, 0, 0, 0.12) 0px 1px 8px 0px',\r\n    padding: '3em'\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.dark,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\nfunction Copyright() {\r\n\r\n  return (\r\n    <Typography variant=\"body1\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"primary\" href=\"https://www.unicsolutons.edu\">\r\n        www.unicsolutons.edu\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default function Login() {\r\n  const {state,dispatch} = useContext(ExamDataContext);\r\n  console.log(\"state,dispatch in header\" , state,dispatch);\r\n  const classes = useStyles();\r\n  const [regNo, setregNo] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [regNoErr, setregNoErr] = useState(\"\");\r\n  const [passwordErr, setpasswordErr] = useState(\"\");\r\n  const [isregValid, setisRegValid] = useState(true)\r\n  const [ispassValid, setisPassValid] = useState(true);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('lg'));\r\n  const history = useHistory();\r\n  // useEffect(() => {\r\n\r\n  //   axios.get('/student/checkStatus', {\r\n  //     headers: {\r\n  //       'Access-Control-Allow-Origin': '*',\r\n  //     },\r\n  //   }).then(res => {\r\n  //     console.log(res);\r\n  //   })\r\n  // }, []);\r\n\r\n\r\n  const onSubmit = (e) => {\r\n    console.group(e.value);\r\n  };\r\n\r\n  const regNoChangeEvent = (e) => {\r\n\r\n    if (e.target.value == \"\") {\r\n      setregNoErr(\"Empty Registration Number\");\r\n      setisRegValid(true);\r\n    } else {\r\n      setisRegValid(false);\r\n\r\n    }\r\n  setregNo(e.target.value);\r\n    \r\n    // if (e.target.value.trim() !== \"123\") {\r\n    //   setregNoErr(\"Incorrect Registration Number\");\r\n    //   setisRegValid(false)\r\n    //   return;\r\n    // }\r\n    // setisRegValid(true)\r\n  \r\n    // setregNoErr(\"\");\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n  const submitLoginForm = (e) => {\r\n    dispatch({type:'HANDLELOADING' ,isLoading:true});\r\n    e.preventDefault();\r\n    console.log(regNo, password);\r\n    let obj = {\r\n      registrationNo: regNo,\r\n      password: password\r\n    };\r\n    let obj1 = {\r\n      \"registrationNo\": 2,\r\n      \"resp\": [\r\n        {\r\n          \"id\": {\r\n            \"registrationNo\": 2,\r\n            \"questionId\": 2,\r\n            \"yearOfExam\": 2020\r\n          },\r\n          \"selectedAnswer\": \"option1,option2\"\r\n        }\r\n      ]\r\n    };\r\n   \r\n     axios.post('cbt/student/login', obj).then(res => {\r\n      //  console.log(\"res\", res);\r\n      //  if (res.status === 200) {\r\n    //  window.open('/instructions', \"_blank\", 'height=600,width=400,menubar=no,resizable=no,scrollbars=no,status=no,location=no');\r\n    //  history.push('/test');\r\n\r\n    //  setOpen(true);\r\n    //  let popup = window.open(\"/test\", \"popup\", \"fullscreen\");\r\n    // if (popup.outerWidth < window.screen.availWidth || popup.outerHeight < window.screen.availHeight)\r\n    // {\r\n    //   popup.moveTo(0,0);\r\n    //   popup.resizeTo(window.screen.availWidth, window.screen.availHeight);\r\n    // }\r\n\r\n      history.push('/test');\r\n     dispatch({type:'HANDLELOADING' ,isLoading:false});\r\n     }).catch(err => {\r\n       console.log(\"error in login \" , err);\r\n       dispatch({type:'HANDLELOADING' ,isLoading:false});\r\n       setpasswordErr(\"Either wrong username or password\");\r\n       setregNoErr(\"Either wrong username or password\");\r\n     })\r\n    // window.open(\"/instructions\", \"_blank\", 'menubar=no,width=1000,height=1000,resizable=no,scrollbars,status,toolbar=yes');\r\n    //  }\r\n    //  })\r\n    // var popup = window.open(\"/test\", \"popup\", \"fullscreen\");\r\n    // if (popup.outerWidth < window.screen.availWidth || popup.outerHeight < window.screen.availHeight)\r\n    // {\r\n    //   popup.moveTo(0,0);\r\n    //   popup.resizeTo(window.screen.availWidth, window.screen.availHeight);\r\n    // }\r\n\r\n  // if (popup.outerWidth < screen.width || popup.outerHeight < screen.height)\r\n  // {\r\n  //   popup.moveTo(0,0);\r\n  //   popup.resizeTo(screen.width, screen.height);\r\n  // }\r\n  }\r\n\r\n\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  }\r\n\r\n  const passChangeEvent = (e) => {\r\n\r\n    if (e.target.value == \"\") {\r\n      setpasswordErr(\"Empty Password\");\r\n      setisPassValid(true);\r\n    } else {\r\n      setisPassValid(false);\r\n      \r\n    }\r\n    setpassword(e.target.value);\r\n    // if (e.target.value.trim() !== \"123\") {\r\n    //   setpasswordErr(\"Incorrect Password\");\r\n    //   setisPassValid(false)\r\n    //   return;\r\n    // }\r\n    // setisPassValid(true)\r\n    \r\n    // setpasswordErr(\"\");\r\n\r\n\r\n  };\r\n\r\n  return (\r\n\r\n\r\n\r\n    <div className={classes.root}>\r\n\r\n     \r\n\r\n      {/* header start */}\r\n      {/* <Header/> */}\r\n      {/*  header end */}\r\n      <Container component=\"div\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n        </Typography>\r\n\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              helperText={regNoErr !== \"\" ? regNoErr : \"\"}\r\n              error={regNoErr !== \"\"}\r\n              onChange={regNoChangeEvent}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"regNo\"\r\n              label=\"Registration Number\"\r\n              name=\"regNo\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              helperText={passwordErr !== \"\" ? passwordErr : \"\"}\r\n              error={passwordErr !== \"\"}\r\n              onChange={passChangeEvent}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              disabled={(isregValid === false && ispassValid === false)  ? false : true}\r\n              fullWidth\r\n              onClick={submitLoginForm}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n          </Button>\r\n            {/* <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body1\">\r\n                  Forgot password?\r\n              </Link>\r\n              </Grid>\r\n\r\n            </Grid> */}\r\n            {/* <Alert severity=\"error\">This is an error alert — check it out!</Alert> */}\r\n\r\n          </form>\r\n        </div>\r\n\r\n        {/* <Dialog fullScreen={fullScreen} onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n          <Test />\r\n        </Dialog> */}\r\n\r\n\r\n\r\n\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n      {/* <Footer /> */}\r\n    </div>\r\n\r\n  )\r\n\r\n}","import React, { useState } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ButtonsGroup from '../buttonsGroup/buttonsGroup';\r\nimport Header from '../header/header';\r\n\r\n\r\n// import image from '../../public/'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        minHeight: '40vh',\r\n        display: 'flex'\r\n    },\r\n    InstructionsDiv: {\r\n        padding: '9px',\r\n        boxShadow: '0px 3px 8px 6px #ccc',\r\n        // lineHeight: '4rem'\r\n    },\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    img1: {\r\n        width: '100px',\r\n        height: '100px'\r\n    }\r\n}));\r\n\r\n\r\nfunction Instructions() {\r\n    const classes = useStyles();\r\n    let buttonVal = null;\r\n    const [questionId, setquestionId] = useState({ id: '', type: '' })\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Header />\r\n            <Typography variant=\"h4\" color=\"textSecondary\" align=\"left\">\r\n                Instructions\r\n            </Typography>\r\n            <ButtonsGroup arrLen={200} buttonValue={1} questionInfo={questionId} />\r\n            <Grid container>\r\n\r\n                <Grid item xs={12} md={9} >\r\n                    <button onClick={() => {\r\n                        setquestionId({ id: 1, type: 'answered' });\r\n                    }}>click me </button>\r\n                    <button onClick={() => {\r\n                        setquestionId({ id: 2, type: 'answered' });\r\n                    }}>click me </button>\r\n                    <button onClick={() => {\r\n                        setquestionId({ id: 2, type: 'review' });\r\n                    }}>Review </button>\r\n                    <button onClick={() => {\r\n\r\n                        setquestionId({ id: 2, type: 'unanswered' });\r\n                    }}>unanswered </button>\r\n                    {/* <Paper elevation={3}>\r\n                        <p className={classes.InstructionsDiv}>\r\n                            <h4>\r\n                                1. After login, the candidate shall be able to see the detailed instructions for the\r\n                                examination. Candidates are advised to go through the instructions carefully regarding the type\r\n                                of questions, marking scheme, procedure to mark & change answer etc. At the designated time\r\n                                of start of the examination, the candidates will be able to proceed and see the questions on the\r\n                                computer screen?\r\n                            </h4>\r\n                            <br />\r\n\r\n                            <h4>\r\n                                2.  After login, the candidate shall be able to see the detailed instructions for the\r\n                                examination. Candidates are advised to go through the instructions carefully regarding the type\r\n                                of questions, marking scheme, procedure to mark & change answer etc. At the designated time\r\n                                of start of the examination, the candidates will be able to proceed and see the questions on the\r\n                                computer screen?\r\n                            </h4>\r\n\r\n\r\n\r\n                            <br />\r\n                            <h4>\r\n                                3.  After login, the candidate shall be able to see the detailed instructions for the\r\n                                examination. Candidates are advised to go through the instructions carefully regarding the type\r\n                                of questions, marking scheme, procedure to mark & change answer etc. At the designated time\r\n                                of start of the examination, the candidates will be able to proceed and see the questions on the\r\n                                computer screen?\r\n                            </h4>\r\n\r\n                            <br />\r\n\r\n                            <h4>\r\n                                4.  After login, the candidate shall be able to see the detailed instructions for the\r\n                                examination. Candidates are advised to go through the instructions carefully regarding the type\r\n                                of questions, marking scheme, procedure to mark & change answer etc. At the designated time\r\n                                of start of the examination, the candidates will be able to proceed and see the questions on the\r\n                                computer screen?\r\n                            </h4>\r\n\r\n\r\n                        </p>\r\n                    </Paper> */}\r\n\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={3} >\r\n                    <Divider orientation=\"vertical\" flexItem />\r\n                    {/* <Avatar alt=\"Remy Sharp\" className={classes.img1} src=\"image1.jpg\" />\r\n                    Name: Harsh Yadav */}\r\n                </Grid>\r\n            </Grid>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Instructions\r\n","import React, { useState, useEffect } from 'react';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Button from '@material-ui/core/Button';\r\nimport { emphasize, withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\nimport { useSnackbar } from \"notistack\";\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        marginTop: '60px'\r\n    },\r\n    buttonContainer:{\r\n        display:'flex',\r\n        marginTop: '20px',\r\n        justifyContent: 'space-evenly'\r\n    }\r\n\r\n}));\r\nconst StyledBreadcrumb = withStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.grey[100],\r\n        height: theme.spacing(3),\r\n        color: theme.palette.grey[800],\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        '&:hover, &:focus': {\r\n            backgroundColor: theme.palette.grey[300],\r\n        },\r\n        '&:active': {\r\n            boxShadow: theme.shadows[1],\r\n            backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n        },\r\n    },\r\n    container: {\r\n        marginTop: '63px',\r\n        width: '100%'\r\n    }\r\n}))(Chip);\r\n\r\n\r\n\r\n\r\n\r\nexport default function Excel(props) {\r\n    const classes = useStyles();\r\n    let endPoint = \"\";\r\n    // const { enqueueSnackbar } = useSnackbar();\r\n    let [apiName, setApiName] = useState(\"\");\r\n    let [uploadExcelButton, setUploadExcel] = useState(true);\r\n    // const {  error, success } = props;\r\n    // console.log(enqueueSnackbar,error,success)\r\n\r\n    function handleClick(event) {\r\n        event.preventDefault();\r\n        console.info('You clicked a breadcrumb.', event.target.outerText);\r\n        setApiName(event.target.outerText);     \r\n        console.log(\"endPoint\", endPoint)\r\n    }\r\n\r\n\r\n    // function onChanges(e){\r\n    //     setUploadExcel(false);\r\n    //     let files = e.target.files;\r\n    //     let reader = new FileReader();\r\n    //     reader.readAsDataURL(files[0]);\r\n    //     reader.onload = (e) => {\r\n    //         console.log(e);\r\n    //     }\r\n    // }\r\n\r\n    function uploadExcel() {\r\n     \r\n\r\n        let imagefile = document.querySelector('#file').files[0];\r\n        console.log(\"imagefile\",imagefile)\r\n        if (imagefile && imagefile.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet') {\r\n            let formData = new FormData();\r\n            console.log(\"imagefile\", imagefile)\r\n            formData.append(\"file\", imagefile);\r\n            // console.log(\"endPoint\",endPoint);\r\n            axios.post(`cbt/upload${apiName}`, formData, {\r\n                headers: {\r\n                    'Content-Type': imagefile.type\r\n                }\r\n            }).then(response => {\r\n                alert(\"excel file uploaded successfully\");\r\n                console.log(\"response excel\" , response);\r\n            }).catch(error => {\r\n                alert(\"There is error in upload the excel kindly select the file and upload again\");\r\n                console.log(\"error in excel\" , error);\r\n            })\r\n            // document.querySelector('#file').files = \"\";document.querySelector('#file')\r\n            document.querySelector('#file').value = \"\";\r\n            setApiName(\"\");\r\n          \r\n            // enqueueSnackbar({\r\n            //     variant: \"success\",\r\n            //     anchorOrigin: {\r\n            //       vertical: \"bottom\",\r\n            //       horizontal: \"right\",\r\n            //     },\r\n\r\n            //   });\r\n        } else {\r\n            setUploadExcel(false);\r\n            // enqueueSnackbar({\r\n            //     variant: \"error\",\r\n            //     anchorOrigin: {\r\n            //       vertical: \"bottom\",\r\n            //       horizontal: \"right\",\r\n            //     },\r\n\r\n            //   });\r\n            alert(\"Either you have not selected the file or the file type is not excel \");\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <div>\r\n                <h3>Admin Functions</h3>\r\n                <hr />\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                    <StyledBreadcrumb\r\n                        component=\"a\"\r\n                        href=\"#\"\r\n                        label=\"/importQuestionMasterData\"\r\n                        icon={<HomeIcon fontSize=\"small\" />}\r\n                        onClick={handleClick}\r\n                    />\r\n\r\n                    <StyledBreadcrumb\r\n                        component=\"a\"\r\n                        href=\"#\"\r\n                        label=\"/importInstitutionMasterData\"\r\n                        icon={<HomeIcon fontSize=\"small\" />}\r\n                        onClick={handleClick}\r\n                    />\r\n\r\n                    <StyledBreadcrumb\r\n                        component=\"a\"\r\n                        href=\"#\"\r\n                        label=\"/importExamYearMasterData\"\r\n                        icon={<HomeIcon fontSize=\"small\" />}\r\n                        onClick={handleClick}\r\n                    />\r\n\r\n                    <StyledBreadcrumb\r\n                        component=\"a\"\r\n                        href=\"#\"\r\n                        label=\"/importConfigData\"\r\n                        icon={<HomeIcon fontSize=\"small\" />}\r\n                        onClick={handleClick}\r\n                    />\r\n                    <StyledBreadcrumb\r\n                        component=\"a\"\r\n                        href=\"#\"\r\n                        label=\"/importCandidateMasterData\"\r\n                        icon={<HomeIcon fontSize=\"small\" />}\r\n                        onClick={handleClick}\r\n                    />\r\n\r\n                </Breadcrumbs>\r\n                <div className={classes.buttonContainer}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={apiName === \"\" ? true : false}\r\n                        component=\"label\"\r\n                    >\r\n                        Upload File\r\n                    <input id='file'\r\n                            type=\"file\"\r\n                            hidden\r\n                        />\r\n                    </Button>\r\n                    <Button color=\"secondary\"  variant=\"contained\" onClick={uploadExcel}>Upload</Button>\r\n                </div>\r\n\r\n\r\n               \r\n            </div>\r\n            <div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useContext } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ExamDataContext } from './context/ExamDataContext';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    loader: {\r\n        width: 263,\r\n        height: 227,\r\n        backgroundImage: `url(loader_static.png)`,\r\n        position: 'absolute',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: '50% 50%',\r\n        transform: 'translate(50%,-50%)',\r\n        top:'61%',\r\n        right:'47%',\r\n        zIndex:'99999'\r\n    },\r\n    overlay: {\r\n        content: \"\",\r\n        display: 'block',\r\n        height: '100%',\r\n        position: 'absolute',\r\n        top: '0',\r\n        left: '0',\r\n        width: '100%',\r\n        backgroundColor: 'rgb(93 90 90 / 80%)',\r\n        zIndex:'9999'\r\n    }\r\n\r\n}));\r\n\r\n\r\nexport default function Loader() {\r\n    const { state, dispatch } = useContext(ExamDataContext);\r\n    let isLoading = state.isLoading;\r\n    console.log(\"state,dispatch\", state, dispatch);\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            {isLoading && (\r\n                <div>\r\n                    <div className={classes.loader}>\r\n                    </div>\r\n                    <div className={classes.overlay}>\r\n                    </div>\r\n                </div>\r\n\r\n            )}\r\n        </>\r\n\r\n    )\r\n\r\n}","import logo from './logo.svg';\r\nimport './App.css';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Login from './login/login';\r\nimport Instructions from './instructions/instructions';\r\n// import Header from './header/header';\r\nimport Test from './Test';\r\nimport Header from './header/header';\r\nimport Excel from './excel';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport ExamDataProvider from './context/ExamDataContext';\r\nimport Loader from './Loader';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <BrowserRouter>\r\n        <ExamDataProvider>\r\n          {/* <MuiThemeProvider theme={theme}> */}\r\n          <Loader/>\r\n          {/* <div className=\"App\"> */}\r\n          <Header />\r\n\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Login} />\r\n            <Route exact path=\"/test\" component={Test} />\r\n            <Route exact path=\"/uploadExcel\" component={Excel} />\r\n\r\n          </Switch>\r\n\r\n          {/* <Footer /> */}\r\n          {/* </div> */}\r\n\r\n          {/* </MuiThemeProvider> */}\r\n        </ExamDataProvider>\r\n      </BrowserRouter>\r\n\r\n      {/* <Login/> */}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}