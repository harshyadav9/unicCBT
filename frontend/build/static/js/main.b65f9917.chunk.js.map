{"version":3,"sources":["logo.svg","footer/footer.js","header/header.js","login/login.js","buttonsGroup/buttonsGroup.js","instructions/instructions.js","Objective.js","Test.js","App.js","reportWebVitals.js","index.js","Questions.js"],"names":["useStyles","makeStyles","theme","footer","padding","spacing","marginTop","backgroundColor","palette","grey","Footer","classes","className","Container","maxWidth","root","height","flexGrow","appbar","alignItems","display","justifyContent","Header","flexDirection","minHeight","paper","boxShadow","avatar","margin","secondary","dark","form","width","submit","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","Login","useState","regNo","setregNo","password","setpassword","regNoErr","setregNoErr","passwordErr","setpasswordErr","isregValid","setisRegValid","ispassValid","setisPassValid","component","CssBaseline","Avatar","noValidate","TextField","helperText","error","onChange","e","target","value","trim","required","fullWidth","id","label","name","autoFocus","type","Button","disabled","onClick","preventDefault","console","log","Grid","container","item","xs","Box","mt","header","paddingLeft","unit","marginBottom","background","default","leftContainer","card","overflow","buttonDefault","borderRadius","answeredColor","reviewAnsweredColor","reviewUnAnsweredColor","unansweredColor","buttonContainer","flexWrap","marginLeft","maxHeight","overflowY","border","minWidth","legendContainer","legends","ButtonsGroup","arrLen","questionInfo","useEffect","tempArr","i","obj","push","setnewArr","newArr","createArr","updateButtons","state","map","answered","unanswered","reviewA","reviewU","style","val","key","classNames","InstructionsDiv","Instructions","RadioButtonsGroup","handleChange","event","ans","quesNo","setState","props","response","checkQuestionNo","this","objective","FormControl","formControl","RadioGroup","aria-label","group","ques","FormControlLabel","opt1","control","Radio","opt2","undefined","opt3","opt4","React","Component","withStyles","breakpoints","only","between","mobileStepper","paddingRight","reviewColor","withTheme","questionNo","setquestionNo","saveQuestion","JSON","parse","localStorage","getItem","md","lg","Paper","square","elevation","Questions","Objective","setItem","stringify","App","exact","path","Test","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2NAAe,I,wICITA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,OAAO,CACHC,QAAQF,EAAMG,QAAQ,EAAI,GAC1BC,UAAU,OACVC,gBAAgBL,EAAMM,QAAQC,KAAK,UAI3B,SAASC,IACrB,IAAMC,EAAUX,IAChB,OACG,wBAAQY,UAAWD,EAAQR,OAA3B,SACI,cAACU,EAAA,EAAD,CAAWC,SAAS,KAApB,8B,oBCTOb,aAAW,SAACC,GAAD,MAAY,CACrCa,KAAM,CACFC,OAAQ,MACRC,SAAU,GAEdC,OAAQ,CACJC,WAAY,SACZC,QAAS,OACTC,eAAgB,qBA0CTC,ICzCTtB,EAAYC,aAAW,SAACC,GAAD,MAAY,CAEvCa,KAAM,CACJK,QAAS,OACTG,cAAe,SACfC,UAAW,SAGbC,MAAO,CACLnB,UAAWJ,EAAMG,QAAQ,IACzBe,QAAS,OACTG,cAAe,SACfJ,WAAY,SACZO,UAAW,gHACXtB,QAAS,OAEXuB,OAAQ,CACNC,OAAQ1B,EAAMG,QAAQ,GACtBE,gBAAiBL,EAAMM,QAAQqB,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACP1B,UAAWJ,EAAMG,QAAQ,IAE3B4B,OAAQ,CACNL,OAAQ1B,EAAMG,QAAQ,EAAG,EAAG,QAKhC,SAAS6B,IAEP,OACE,eAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,SAAxD,UACG,kBACD,cAACC,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,+BAA3B,kCAEQ,KACP,IAAIC,MAAOC,cACX,OAMQ,SAASC,IACtB,IAAMhC,EAAUX,IADc,EAEJ4C,mBAAS,IAFL,mBAEvBC,EAFuB,KAEhBC,EAFgB,OAGEF,mBAAS,IAHX,mBAGvBG,EAHuB,KAGbC,EAHa,OAKEJ,mBAAS,IALX,mBAKvBK,EALuB,KAKbC,EALa,OAMQN,mBAAS,IANjB,mBAMvBO,EANuB,KAMVC,EANU,OAOMR,oBAAS,GAPf,mBAOvBS,EAPuB,KAOXC,EAPW,OAQQV,oBAAS,GARjB,mBAQvBW,EARuB,KAQVC,EARU,KA2D9B,OAIE,sBAAK5C,UAAWD,EAAQI,KAAxB,UAIE,eAACF,EAAA,EAAD,CAAW4C,UAAU,MAAM3C,SAAS,KAApC,UACE,cAAC4C,EAAA,EAAD,IACA,sBAAK9C,UAAWD,EAAQc,MAAxB,UACE,cAACkC,EAAA,EAAD,CAAQ/C,UAAWD,EAAQgB,OAA3B,SACE,cAAC,IAAD,MAEF,cAACQ,EAAA,EAAD,CAAYsB,UAAU,KAAKrB,QAAQ,KAAnC,qBAKA,uBAAMxB,UAAWD,EAAQoB,KAAM6B,YAAU,EAAzC,UACE,cAACC,EAAA,EAAD,CACEC,WAAyB,KAAbb,EAAkBA,EAAW,GACzCc,MAAoB,KAAbd,EACPe,SAnEa,SAACC,GAExB,MAAsB,IAAlBA,EAAEC,OAAOC,OACXjB,EAAY,kCACZI,GAAc,IAGc,QAA1BW,EAAEC,OAAOC,MAAMC,QACjBlB,EAAY,sCACZI,GAAc,KAGhBA,GAAc,GACdR,EAASmB,EAAEC,OAAOC,YAClBjB,EAAY,MAsDFd,QAAQ,WACRR,OAAO,SACPyC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,sBACNC,KAAK,QACLC,WAAS,IAEX,cAACb,EAAA,EAAD,CACEC,WAA4B,KAAhBX,EAAqBA,EAAc,GAC/CY,MAAuB,KAAhBZ,EACPa,SAvDY,SAACC,GAEvB,MAAsB,IAAlBA,EAAEC,OAAOC,OACXf,EAAe,uBACfI,GAAe,IAGa,QAA1BS,EAAEC,OAAOC,MAAMC,QACjBhB,EAAe,2BACfI,GAAe,KAGjBA,GAAe,GACfR,EAAYiB,EAAEC,OAAOC,YACrBf,EAAe,MA0CLhB,QAAQ,WACRR,OAAO,SACPyC,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNG,KAAK,WACLJ,GAAG,aAEL,cAACK,EAAA,EAAD,CACED,KAAK,SACLE,UAA4D,MAAlC,IAAfxB,IAAuC,IAAhBE,GAClCe,WAAS,EACTQ,QA1EY,SAACb,GACvBA,EAAEc,iBACFC,QAAQC,IAAIpC,EAAOE,IAyETX,QAAQ,YACRC,MAAM,UACNzB,UAAWD,EAAQsB,OAPrB,qBAWA,cAACiD,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,EAAb,SACE,cAAC9C,EAAA,EAAD,CAAMC,KAAK,IAAIJ,QAAQ,QAAvB,wCASR,cAACkD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAACrD,EAAD,SAGJ,cAACxB,EAAD,O,+DCrLAV,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCa,KAAM,CACFE,SAAU,GAEduE,OAAQ,CACJpE,QAAS,OACTD,WAAY,SACZH,OAAQ,GACRgB,MAAO,OACPyD,YAAkC,EAArBvF,EAAMG,QAAQqF,KAC3BC,aAAc,GACdpF,gBAAiBL,EAAMM,QAAQoF,WAAWC,SAE9CC,cAAe,CACX1E,QAAS,OACTG,cAAe,UAGnBwE,KAAM,CACFnE,OAAQ,QAGZuD,UAAW,CACPa,SAAU,QAEd9E,OAAQ,CACJC,WAAY,UAGhB8E,cAAe,CACXrE,OAAQ,OACRsE,aAAc,MACd9F,QAAS,WACTG,gBAAiB,OACjB8B,MAAO,QACP,UAAW,CACP9B,gBAAiB,SAGzB4F,cAAe,CAEXD,aAAc,MACd9F,QAAS,WACTG,gBAAiB,UACjB8B,MAAO,OACP,UAAW,CACP9B,gBAAiB,YAIzB6F,oBAAqB,CACjBxE,OAAQ,OACRsE,aAAc,MACd9F,QAAS,WACTG,gBAAiB,MACjB8B,MAAO,OACP,UAAW,CACP9B,gBAAiB,QAGzB8F,sBAAuB,CACnBzE,OAAQ,OACRsE,aAAc,MACd9F,QAAS,WACTG,gBAAiB,mBACjB8B,MAAO,OACP,UAAW,CACP9B,gBAAiB,sBAGzB+F,gBAAiB,CACb1E,OAAQ,OACRsE,aAAc,MACd9F,QAAS,WACTG,gBAAiB,MACjB8B,MAAO,OACP,UAAW,CACP9B,gBAAiB,QAIzBgG,gBAAiB,CACbnF,QAAS,OACTY,MAAO,mBACPT,cAAe,MACfiF,SAAU,OACVC,WAAY,OACZC,UAAW,QACXC,UAAW,SACXjF,UAAW,0GACXwE,aAAc,MACdU,OAAQ,6BACRxG,QAAS,OACT,WAAY,CACRwB,OAAQ,MAERiF,SAAU,SAGlBC,gBAAiB,CACb1F,QAAS,OACToF,SAAU,OACVxE,MAAO,QAEX+E,QAAS,CACL5F,WAAY,SACZC,QAAS,OACTJ,OAAQ,OACRU,UAAW,0GACXwE,aAAc,MACdtE,OAAQ,WAqKDoF,MA/Jf,YAAiD,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,aAG5BlC,QAAQC,IAAIgC,EAAQC,GAEpBC,qBAAU,WACNnC,QAAQC,IAAI,aACZ,IAAImC,EAAU,GACd,GAAwB,KAApBF,EAAa3C,GAAW,EACN,WACd,IAAK,IAAI8C,EAAI,EAAGA,EAAIJ,EAAQI,IAAK,CAC7B,IAAIC,EAAM,CACVA,UAAkB,EAClBA,SAAiB,EACjBA,YAAoB,EACpBA,SAAiB,EACjBA,SAAiB,GACjBA,EAAG,GAASD,EAAI,EAChBD,EAAQG,KAAKD,GAGjBE,EAAU,GAAD,mBAAKC,GAAWL,IACzBpC,QAAQC,IAAI,YAAawC,GAE7BC,QAEAC,EAAcT,KAInB,CAACA,IAIJ,IAAMS,EAAgB,SAACT,GAenBM,GAAU,SAAAI,GAeN,OAdA5C,QAAQC,IAAI,QAAS2C,GACNA,EAAMC,KAAI,SAAAzC,GAWrB,OAVIA,EAAKb,IAAM2C,EAAa3C,KACxBa,EAAK0C,UAAW,EAChB1C,EAAKS,SAAU,EACfT,EAAK2C,YAAa,EAClB3C,EAAK4C,SAAU,EACf5C,EAAK6C,SAAU,EACf7C,EAAK8B,EAAavC,OAAQ,EAC1BS,EAAI,GAAS8B,EAAa3C,IAGvBa,SAObzE,EAAUX,IArE4B,EAsEN4C,oBAAU,GAtEJ,gCAuEJA,mBAAS,CAAEmF,WAAY,EAAGD,SAAU,EAAGE,QAAS,EAAGC,QAAS,KAvExD,gCAwEhBrF,mBAAS,KAxEO,mBAwErC6E,EAxEqC,KAwE7BD,EAxE6B,OA4EE5E,oBAAS,GA5EX,mBAuF5C,OAvF4C,UAiF5CoC,QAAQC,IAAI,SAAUwC,GAOlB,qCAcI,sBAAK7G,UAAWD,EAAQmG,gBAAxB,UACI,sBAAKlG,UAAWD,EAAQoG,QAASmB,MAAO,CAAElG,MAAO,OAAjD,UACI,cAAC,IAAD,CAAiBkG,MAAO,CAAE7F,MAAO,WACjC,0DAEJ,sBAAKzB,UAAWD,EAAQoG,QAASmB,MAAO,CAAElG,MAAO,OAAjD,UACI,cAAC,IAAD,CAAiBkG,MAAO,CAAE7F,MAAO,SACjC,4DAEJ,sBAAKzB,UAAWD,EAAQoG,QAASmB,MAAO,CAAElG,MAAO,OAAjD,UACI,cAAC,IAAD,CAAiBkG,MAAO,CAAE7F,MAAO,SACjC,gEAEJ,sBAAKzB,UAAWD,EAAQoG,QAASmB,MAAO,CAAElG,MAAO,OAAjD,UACI,cAAC,IAAD,CAAiBkG,MAAO,CAAE7F,MAAO,sBACjC,qEAOR,qBAAK6F,MAAO,CAAElG,MAAO,QAArB,SACI,oDAEJ,sBAAKpB,UAAWD,EAAQ4F,gBAAxB,UAGI,uBAGIkB,EAAOI,KAAI,SAACM,EAAKC,GAAS,IAAD,EAErB,OACI,cAACxD,EAAA,EAAD,CAAkBhE,UAAWyH,KAAU,mBAClC1H,EAAQsF,eAAiC,IAAhBkC,EAAItC,SADK,cAElClF,EAAQ2F,iBAAsC,IAAnB6B,EAAIJ,YAFG,cAGlCpH,EAAQwF,eAAkC,IAAjBgC,EAAIL,UAHK,cAIlCnH,EAAQyF,qBAAuC,IAAhB+B,EAAIH,SAJD,cAKlCrH,EAAQ0F,uBAAyC,IAAhB8B,EAAIF,SALH,IAMnC7F,QAAQ,YAAYC,MAAM,UAN9B,SAOK+F,EAAM,GAPEA,aC5PvBnI,aAAW,SAACC,GAAD,gBACzBa,KAAM,CACFS,UAAW,OACXJ,QAAS,QAEbkH,gBAAiB,CACblI,QAAS,MACTsB,UAAW,yBAPU,qBAUnB,CACFT,SAAU,IAXW,qBAanB,CACFe,MAAO,QACPhB,OAAQ,UAfa,KA2GduH,I,4FC3FTC,E,4MACFZ,MAAQ,CACJzD,MAAO,I,EAGXsE,aAAe,SAACC,EAAOC,EAAKC,GACxB5D,QAAQC,IAAIyD,EAAOC,EAAKC,GACxB,EAAKC,SAAS,CAAE1E,MAAOuE,IAEnBA,IAAUC,EACV,EAAKG,MAAMC,SAASH,GAGpB,EAAKE,MAAME,gBAAgBJ,I,uDAKzB,IAAD,SAC0BK,KAAKH,MAA5BnI,EADH,EACGA,QAASuI,EADZ,EACYA,UACjB,OACI,qBAAKtI,UAAWD,EAAQI,KAAxB,SACI,cAACoI,EAAA,EAAD,CAAa1F,UAAU,WAAW7C,UAAWD,EAAQyI,YAArD,SACI,eAACC,EAAA,EAAD,CACIC,aAAW,SACX7E,KAAK,UACL7D,UAAWD,EAAQ4I,MACnBpF,MAAO8E,KAAKrB,MAAMzD,MAClBH,SAAU,SAACC,GAAD,OAAO,EAAKwE,aAAaxE,EAAEC,OAAOC,MAAO+E,EAAUP,IAAKO,EAAUM,OALhF,UAOI,cAACC,EAAA,EAAD,CAAkBtF,MAAO+E,EAAUQ,KAAMC,QAAS,cAACC,EAAA,EAAD,IAAWpF,MAAO0E,EAAUQ,OAC9E,cAACD,EAAA,EAAD,CAAkBtF,MAAO+E,EAAUW,KAAMF,QAAS,cAACC,EAAA,EAAD,IAAWpF,MAAO0E,EAAUW,YAC1DC,IAAnBZ,EAAUa,KAAqB,KAE5B,cAACN,EAAA,EAAD,CAAkBtF,MAAO+E,EAAUa,KAAMJ,QAAS,cAACC,EAAA,EAAD,IAAWpF,MAAO0E,EAAUa,YAC9DD,IAAnBZ,EAAUc,KAAqB,KAC5B,cAACP,EAAA,EAAD,CAAkBtF,MAAO+E,EAAUc,KAAML,QAAS,cAACC,EAAA,EAAD,IAAWpF,MAAO0E,EAAUc,kB,GApC1EC,IAAMC,WAiDvBC,eApEA,SAAAjK,GAAK,YAAK,CACrBa,KAAM,CACFK,QAAS,OACTqF,WAAY,IAEhB2C,aAAW,GACPxH,OAA6B,EAArB1B,EAAMG,QAAQqF,MADf,cAENxF,EAAMkK,YAAYC,KAAK,MAAQ,CAC5BzI,OAAQ,IAHL,cAKN1B,EAAMkK,YAAYE,QAAQ,UAAY,CACnC1I,OAAQ,IANL,GASX2H,MAAO,CACH3H,OAAO,GAAD,OAAK1B,EAAMG,QAAQqF,KAAnB,YAqDCyE,CAAmB3B,G,SC8InB2B,mBAzMG,SAAAjK,GAAK,MAAK,CACxBa,KAAM,CACFE,SAAU,GAEduE,OAAQ,CACJpE,QAAS,OACTD,WAAY,SACZH,OAAQ,GACRgB,MAAO,OACPyD,YAAkC,EAArBvF,EAAMG,QAAQqF,KAC3BC,aAAc,GACdpF,gBAAiBL,EAAMM,QAAQoF,WAAWC,SAE9CC,cAAe,CACX1E,QAAS,OACTG,cAAe,UAEnBgJ,cAAe,CACX9E,YAAkC,EAArBvF,EAAMG,QAAQqF,KAC3B8E,aAAmC,EAArBtK,EAAMG,QAAQqF,MAGhCK,KAAM,CACFnE,OAAQ,QAGZuD,UAAW,CACPa,SAAU,QAEd9E,OAAQ,CACJC,WAAY,UAGhB8E,cAAe,CACXrE,OAAQ,OACRsE,aAAc,MACd9F,QAAS,WACTG,gBAAiB,OACjB8B,MAAO,QACP,UAAW,CACP9B,gBAAiB,SAGzB4F,cAAe,CAEXD,aAAc,MACd9F,QAAS,WACTG,gBAAiB,QACjB8B,MAAO,OACP,UAAW,CACP9B,gBAAiB,YAIzBkK,YAAa,CACT7I,OAAQ,OACRsE,aAAc,MACd9F,QAAS,WACTG,gBAAiB,MACjB8B,MAAO,OACP,UAAW,CACP9B,gBAAiB,QAGzBgG,gBAAiB,CACbnF,QAAS,OACTY,MAAO,mBACPT,cAAe,MACfiF,SAAU,OACVC,WAAY,OACZC,UAAW,QACXC,UAAW,SACXjF,UAAW,0GACXwE,aAAc,MACdU,OAAQ,6BACRxG,QAAS,OACT,WAAY,CACRwB,OAAQ,MAERiF,SAAU,SAGlBC,gBAAiB,CACb1F,QAAS,OACToF,SAAU,OACVxE,MAAO,QAEX+E,QAAS,CACL5F,WAAY,SACZC,QAAS,OACTJ,OAAQ,OACRU,UAAW,0GACXwE,aAAc,MACdtE,OAAQ,UA4GqB,CAAE8I,WAAW,GAAnCP,EAvGf,SAAcrB,GAAQ,IAAD,EAETnI,EAAmBmI,EAAnBnI,QAFS,GAEUmI,EAAV5I,MAEmB0C,mBAAS,CAAE2B,GAAI,GAAII,KAAM,gBAJ5C,mBAIVgG,EAJU,KAIEC,EAJF,KAKXC,EAAe,SAAC5G,GAClBe,QAAQC,IAAIhB,GACZe,QAAQC,IAAI,SAJH,IAc8C,OAAnD6F,KAAKC,MAAMC,aAAaC,QAAQ,eAE5BL,EADK,QAAL3G,EACc,CAAEM,GAAI,EAAGI,KAAM,cAEf,CAAEJ,GAAI,EAAGI,KAAM,YAI7BiG,EADK,QAAL3G,EACc,CAAEM,GAAI,EAAGI,KAAM,YAEf,CAAEJ,GAAI,EAAGI,KAAM,aA4CzC,OACI,mCACI,eAACO,EAAA,EAAD,CAAMC,WAAS,EAACvE,UAAWD,EAAQwE,UAAnC,UACI,eAACD,EAAA,EAAD,CAAMC,WAAS,EAACE,GAAI,GAAI6F,GAAI,EAAGC,GAAI,EAAGvK,UAAWD,EAAQmF,cAAzD,UACI,cAACsF,EAAA,EAAD,CAAOC,QAAM,EAACC,UAAW,EAAG1K,UAAWD,EAAQ6E,OAA/C,SACI,eAACrD,EAAA,EAAD,WAAaoJ,IAAU,GAAGhH,GAA1B,IAA+BgH,IAAU,GAAG/G,WAIhD,cAACgH,EAAD,CACItC,UAAWqC,IAAU,GAAGjE,IAExByB,SAAU,SAACH,GAAD,OAhDb,SAACA,GACd5D,QAAQC,IAAI,SAAU2D,GACtBA,EAASA,EACToC,aAAaS,QAAQ,aAAcX,KAAKY,UAAU9C,IA6CZG,CAASH,IAC/BI,gBAAiB,SAACJ,GAAD,OA/Bb,SAACA,GACrB5D,QAAQC,IAAI,SAAU2D,GACtBoC,aAAaS,QAAQ,aAAcX,KAAKY,UAAU9C,IAClDA,EAASA,EA4BoCI,CAAgBJ,KAFxC2C,IAAU,GAAGhH,IAKtB,cAACK,EAAA,EAAD,CAAQE,QAAS,WAAQ+F,EAAa,SAAW1G,MAAM,OAAO/B,QAAQ,YAAtE,yBACA,cAACwC,EAAA,GAAD,GAAQE,QAAS,WAAQ+F,EAAa,YAAtC,wBAA4DA,GAA5D,wBAAkF,aAAlF,sBAAoG,WAApG,0CAIJ,cAAC3F,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAI6F,GAAI,EAAGC,GAAI,EAA9B,SAEI,cAAC,EAAD,CAAclE,OAAQ,GAAIC,aAAcyD,cCpL7CgB,MAtBf,WACE,OACE,qBAAK/K,UAAU,MAAf,SAEE,cAAC,IAAD,UAIE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgL,OAAK,EAACC,KAAK,IAAIpI,UAAWd,IACjC,cAAC,IAAD,CAAOkJ,KAAK,gBAAgBpI,UAAWqI,YCLlCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,iBChBAc,EAAOC,QAAU,CACb,CACIvI,GAAI,EACJC,MAAO,sBACP8C,IAAK,CACDkC,KAAM,EACNb,IAAK,wBACLe,KAAM,wBACNG,KAAM,yBACNE,KAAM,yBACNC,KAAM,iBAGd,CACIzF,GAAI,EACJC,MAAO,oCACP8C,IAAK,CACDkC,KAAM,EACNb,IAAK,SACLe,KAAM,iBACNG,KAAM,sBACNE,KAAM,SACNC,KAAM,gBAGd,CACIzF,GAAI,EACJC,MAAO,oEACP8C,IAAK,CACDkC,KAAM,EACNb,IAAK,mBACLe,KAAM,mBACNG,KAAM,oBACNE,KAAM,mBACNC,KAAM,qBAGd,CACIzF,GAAI,EACJC,MAAO,eACP8C,IAAK,CACDkC,KAAM,EACNb,IAAK,QACLe,KAAM,OACNG,KAAM,UAGd,CACItF,GAAI,EACJC,MAAO,wCACP8C,IAAK,CACDkC,KAAM,EACNb,IAAK,QACLe,KAAM,SACNG,KAAM,QACNE,KAAM,UACNC,KAAM,YAGd,CACIzF,GAAI,EACJC,MAAO,oEACP8C,IAAK,CACDkC,KAAM,EACNb,IAAK,UACLe,KAAM,SACNG,KAAM,WACNE,KAAM,YACNC,KAAM,YAGd,CACIzF,GAAI,EACJC,MAAO,qDACP8C,IAAK,CACDkC,KAAM,EACNb,IAAK,mBACLe,KAAM,QACNG,KAAM,yBACNE,KAAM,kBACNC,KAAM,qBAGd,CACIzF,GAAI,EACJC,MAAO,iGACP8C,IAAK,CACDkC,KAAM,EACNb,IAAK,sBACLe,KAAM,wBACNG,KAAM,sBACNE,KAAM,0BACNC,KAAM,sBAGd,CACIzF,GAAI,EACJC,MAAO,gDACP8C,IAAK,CACDkC,KAAM,EACNb,IAAK,mBACLe,KAAM,mBACNG,KAAM,oBACNE,KAAM,mBACNC,KAAM,sBAGd,CACIzF,GAAI,GACJC,MAAO,mDACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,gBACLe,KAAM,gBACNG,KAAM,gBACNE,KAAM,gBACNC,KAAM,qBAGd,CACIzF,GAAI,GACJC,MAAO,sCACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,0BACLe,KAAM,qBACNG,KAAM,0BACNE,KAAM,uBACNC,KAAM,wBAGd,CACIzF,GAAI,GACJC,MAAO,wBACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,sEACLe,KAAM,wBACNG,KAAM,iBACNE,KAAM,sEACNC,KAAM,uBAGd,CACIzF,GAAI,GACJC,MAAO,sGACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,YACLe,KAAM,YACNG,KAAM,YACNE,KAAM,iBACNC,KAAM,YAGd,CACIzF,GAAI,GACJC,MAAO,qCACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,0CACLe,KAAM,0CACNG,KAAM,kCACNE,KAAM,2CACNC,KAAM,uBAGd,CACIzF,GAAI,GACJC,MAAO,+BACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,wBACLe,KAAM,4BACNG,KAAM,uBACNE,KAAM,wBACNC,KAAM,uBAGd,CACIzF,GAAI,GACJC,MAAO,4DACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,QACLe,KAAM,OACNG,KAAM,OACNE,KAAM,QACNC,KAAM,UAGd,CACIzF,GAAI,GACJC,MAAO,yFACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,SACLe,KAAM,YACNG,KAAM,YACNE,KAAM,SACNC,KAAM,qBAGd,CACIzF,GAAI,GACJC,MAAO,qBACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,iFACLe,KAAM,sBACNG,KAAM,iFACNE,KAAM,sBACNC,KAAM,qBAGd,CACIzF,GAAI,GACJC,MAAO,uCACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,cACLe,KAAM,UACNG,KAAM,SACNE,KAAM,cACNC,KAAM,QAGd,CACIzF,GAAI,GACJC,MAAO,gDACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,iBACLe,KAAM,qBACNG,KAAM,oBACNE,KAAM,gBACNC,KAAM,mBAGd,CACIzF,GAAI,GACJC,MAAO,8GACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,SACLe,KAAM,aACNG,KAAM,SACNE,KAAM,WACNC,KAAM,YAGd,CACIzF,GAAI,GACJC,MAAO,+CACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,UACLe,KAAM,QACNG,KAAM,0BACNE,KAAM,UACNC,KAAM,sBAGd,CACIzF,GAAI,GACJC,MAAO,mCACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,uEACLe,KAAM,2BACNG,KAAM,uEACNE,KAAM,kBACNC,KAAM,iBAGd,CACIzF,GAAI,GACJC,MAAO,oBACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,oDACLe,KAAM,oDACNG,KAAM,0CACNE,KAAM,gBACNC,KAAM,sBAGd,CACIzF,GAAI,GACJC,MAAO,iBACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,qCACLe,KAAM,mCACNG,KAAM,kCACNE,KAAM,sCACNC,KAAM,uCAGd,CACIzF,GAAI,GACJC,MAAO,uCACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,mBACLe,KAAM,kBACNG,KAAM,QACNE,KAAM,aACNC,KAAM,qBAGd,CACIzF,GAAI,GACJC,MAAO,0CACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,WACLe,KAAM,MACNG,KAAM,WACNE,KAAM,cACNC,KAAM,qBAGd,CACIzF,GAAI,GACJC,MAAO,sFACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,kBACLe,KAAM,wBACNG,KAAM,gDACNE,KAAM,4BACNC,KAAM,oBAGd,CACIzF,GAAI,GACJC,MAAO,iEACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,WACLe,KAAM,QACNG,KAAM,OACNE,KAAM,OACNC,KAAM,aAGd,CACIzF,GAAI,GACJC,MAAO,kCACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,aACLe,KAAM,QACNG,KAAM,QACNE,KAAM,aACNC,KAAM,WAGd,CACIzF,GAAI,GACJC,MAAO,yEACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,UACLe,KAAM,UACNG,KAAM,aACNE,KAAM,UACNC,KAAM,eAGd,CACIzF,GAAI,GACJC,MAAO,gCACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,uBACLe,KAAM,eACNG,KAAM,iBACNE,KAAM,qBACNC,KAAM,yBAGd,CACIzF,GAAI,GACJC,MAAO,mCACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,uBACLe,KAAM,uBACNG,KAAM,sBACNE,KAAM,uBACNC,KAAM,qBAGd,CACIzF,GAAI,GACJC,MAAO,8BACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,oBACLe,KAAM,mBACNG,KAAM,oBACNE,KAAM,iBACNC,KAAM,qBAGd,CACIzF,GAAI,GACJC,MAAO,+DACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,UACLe,KAAM,QACNG,KAAM,kBACNE,KAAM,WACNC,KAAM,YAGd,CACIzF,GAAI,GACJC,MAAO,2DACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,YACLe,KAAM,YACNG,KAAM,YACNE,KAAM,YACNC,KAAM,eAGd,CACIzF,GAAI,GACJC,MAAO,gFACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,QACLe,KAAM,UACNG,KAAM,WACNE,KAAM,QACNC,KAAM,aAGd,CACIzF,GAAI,GACJC,MAAO,gCACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,OACLe,KAAM,OACNG,KAAM,OACNE,KAAM,OACNC,KAAM,UAGd,CACIzF,GAAI,GACJC,MAAO,gCACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,OACLe,KAAM,OACNG,KAAM,OACNE,KAAM,OACNC,KAAM,UAGd,CACIzF,GAAI,GACJC,MAAO,6DACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,OACLe,KAAM,OACNG,KAAM,UAGd,CACItF,GAAI,GACJC,MAAO,qBACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,iEACLe,KAAM,kCACNG,KAAM,mCACNE,KAAM,4CACNC,KAAM,mEAGd,CACIzF,GAAI,GACJC,MAAO,mCACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,iBACLe,KAAM,iBACNG,KAAM,iBACNE,KAAM,YACNC,KAAM,sBAGd,CACIzF,GAAI,GACJC,MAAO,8BACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,QACLe,KAAM,OACNG,KAAM,UAGd,CACItF,GAAI,GACJC,MAAO,sFACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,WACLe,KAAM,WACNG,KAAM,WACNE,KAAM,WACNC,KAAM,aAGd,CACIzF,GAAI,GACJC,MAAO,yCACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,mCACLe,KAAM,sBACNG,KAAM,kBACNE,KAAM,mCACNC,KAAM,iBAGd,CACIzF,GAAI,GACJC,MAAO,gEACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,QACLe,KAAM,QACNG,KAAM,WACNE,KAAM,QACNC,KAAM,cAGd,CACIzF,GAAI,GACJC,MAAO,oDACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,YACLe,KAAM,SACNG,KAAM,oBACNE,KAAM,YACNC,KAAM,aAGd,CACIzF,GAAI,GACJC,MAAO,mEACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,QACLe,KAAM,WACNG,KAAM,QACNE,KAAM,WACNC,KAAM,WAGd,CACIzF,GAAI,GACJC,MAAO,wBACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,eACLe,KAAM,eACNG,KAAM,eACNE,KAAM,eACNC,KAAM,iBAGd,CACIzF,GAAI,GACJC,MAAO,wDACP8C,IAAK,CACDkC,KAAM,GACNb,IAAK,QACLe,KAAM,QACNG,KAAM,QACNE,KAAM,QACNC,KAAM,a","file":"static/js/main.b65f9917.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles((theme) => ({\n    footer:{\n        padding:theme.spacing(3 , 2),\n        marginTop:'auto',\n        backgroundColor:theme.palette.grey[200]\n    }\n}));\n\nexport default  function Footer() {\n    const classes = useStyles();\n    return (\n       <footer className={classes.footer}>\n           <Container maxWidth=\"sm\">\n               THIS IS FOOTER\n           </Container>\n       </footer>\n    )\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '3em',\n        flexGrow: 1,\n    },\n    appbar: {\n        alignItems: 'center',\n        display: \"flex\",\n        justifyContent: \"space-between\"\n\n    },\n}));\n\nfunction Header() {\n    const classes = useStyles();\n    const childrenFunc = ({ remainingTime }) => {\n        const minutes = Math.floor(remainingTime / 60);\n        const seconds = remainingTime % 60;\n\n        if (seconds === 0) {\n            // return <div className=\"timer\">Your time is over...</div>;\n        } else return `${minutes}:${seconds}`;\n    };\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"fixed\" color=\"grey\">\n                <Toolbar className={classes.appbar}>\n                    <Typography variant=\"h6\">\n                        CBT-Exam\n                </Typography>\n                    <div className=\"timer-wrapper\">\n                        <CountdownCircleTimer\n                            isPlaying\n                            duration={115}\n                            size={100}\n                            colors={[[\"#004777\", 0.33], [\"#F7B801\", 0.33], [\"#A30000\"]]}\n                            onComplete={() => [false, 10]}\n                        >\n                            {childrenFunc}\n                        </CountdownCircleTimer>\n                    </div>\n\n                    {/* <Typography color=\"inherit\" >Time: 123 </Typography> */}\n                </Toolbar>\n\n            </AppBar>\n        </div>\n    )\n}\n\nexport default Header\n","import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Footer from '../footer/footer';\nimport Header from '../header/header';\nconst useStyles = makeStyles((theme) => ({\n\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh'\n  },\n\n  paper: {\n    marginTop: theme.spacing(15),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    boxShadow: 'rgba(0, 0, 0, 0.2) 0px 3px 3px -2px, rgba(0, 0, 0, 0.14) 0px 3px 4px 0px, rgba(0, 0, 0, 0.12) 0px 1px 8px 0px',\n    padding: '3em'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.dark,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nfunction Copyright() {\n\n  return (\n    <Typography variant=\"body1\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://www.unicsolutons.edu\">\n        www.unicsolutons.edu\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n\n  )\n}\n\nexport default function Login() {\n  const classes = useStyles();\n  const [regNo, setregNo] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n\n  const [regNoErr, setregNoErr] = useState(\"\");\n  const [passwordErr, setpasswordErr] = useState(\"\");\n  const [isregValid, setisRegValid] = useState(false)\n  const [ispassValid, setisPassValid] = useState(false)\n\n\n  const onSubmit = (e) => {\n    console.group(e.value);\n  };\n\n  const regNoChangeEvent = (e) => {\n\n    if (e.target.value == \"\") {\n      setregNoErr(\"Empty Registration Number\");\n      setisRegValid(false)\n      return;\n    }\n    if (e.target.value.trim() !== \"123\") {\n      setregNoErr(\"Incorrect Registration Number\");\n      setisRegValid(false)\n      return;\n    }\n    setisRegValid(true)\n    setregNo(e.target.value);\n    setregNoErr(\"\");\n\n\n  };\n\n\n  const submitLoginForm = (e) => {\n    e.preventDefault();\n    console.log(regNo, password);\n  }\n\n  const passChangeEvent = (e) => {\n\n    if (e.target.value == \"\") {\n      setpasswordErr(\"Empty Password\");\n      setisPassValid(false)\n      return;\n    }\n    if (e.target.value.trim() !== \"123\") {\n      setpasswordErr(\"Incorrect Password\");\n      setisPassValid(false)\n      return;\n    }\n    setisPassValid(true)\n    setpassword(e.target.value);\n    setpasswordErr(\"\");\n\n\n  };\n\n  return (\n\n\n\n    <div className={classes.root}>\n      {/* header start */}\n      {/* <Header/> */}\n      {/*  header end */}\n      <Container component=\"div\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n        </Typography>\n\n\n          <form className={classes.form} noValidate>\n            <TextField\n              helperText={regNoErr !== \"\" ? regNoErr : \"\"}\n              error={regNoErr !== \"\"}\n              onChange={regNoChangeEvent}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"regNo\"\n              label=\"Registration Number\"\n              name=\"regNo\"\n              autoFocus\n            />\n            <TextField\n              helperText={passwordErr !== \"\" ? passwordErr : \"\"}\n              error={passwordErr !== \"\"}\n              onChange={passChangeEvent}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n            />\n            <Button\n              type=\"submit\"\n              disabled={(isregValid === true && ispassValid === true) === true ? false : true}\n              fullWidth\n              onClick={submitLoginForm}\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign In\n          </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body1\">\n                  Forgot password?\n              </Link>\n              </Grid>\n\n            </Grid>\n          </form>\n        </div>\n\n        <Box mt={8}>\n          <Copyright />\n        </Box>\n      </Container>\n      <Footer />\n    </div>\n\n  )\n\n}","import React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport classNames from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Brightness1Icon from '@material-ui/icons/Brightness1';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1\n    },\n    header: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 50,\n        width: '100%',\n        paddingLeft: theme.spacing.unit * 5,\n        marginBottom: 20,\n        backgroundColor: theme.palette.background.default,\n    },\n    leftContainer: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n\n    card: {\n        margin: '10px',\n        // backgroundColor: 'rgb(0,0,0,0.2)',\n    },\n    container: {\n        overflow: 'auto'\n    },\n    appbar: {\n        alignItems: 'center'\n    },\n\n    buttonDefault: {\n        margin: '12px',\n        borderRadius: '50%',\n        padding: '14px 0px',\n        backgroundColor: '#fff',\n        color: 'black',\n        \"&:hover\": {\n            backgroundColor: '#ccc',\n        }\n    },\n    answeredColor: {\n        // margin: '12px',\n        borderRadius: '50%',\n        padding: '14px 0px',\n        backgroundColor: '#8bb58b',\n        color: '#fff',\n        \"&:hover\": {\n            backgroundColor: '#8bb58b',\n        }\n    },\n\n    reviewAnsweredColor: {\n        margin: '12px',\n        borderRadius: '50%',\n        padding: '14px 0px',\n        backgroundColor: 'red',\n        color: '#fff',\n        \"&:hover\": {\n            backgroundColor: 'red',\n        }\n    },\n    reviewUnAnsweredColor: {\n        margin: '12px',\n        borderRadius: '50%',\n        padding: '14px 0px',\n        backgroundColor: 'rgb(239 180 180)',\n        color: '#fff',\n        \"&:hover\": {\n            backgroundColor: '#rgb(239 180 180)',\n        }\n    },\n    unansweredColor: {\n        margin: '12px',\n        borderRadius: '50%',\n        padding: '14px 0px',\n        backgroundColor: 'red',\n        color: '#fff',\n        \"&:hover\": {\n            backgroundColor: 'red',\n        }\n    },\n\n    buttonContainer: {\n        display: 'flex',\n        width: 'calc(100% - 17%)',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        marginLeft: '44px',\n        maxHeight: '600px',\n        overflowY: 'scroll',\n        boxShadow: '0px 4px 13px -1px rgba(0,0,0,0.2), 0px 1px 10px 0px rgba(0,0,0,0.14), 0px 1px 20px 0px rgba(0,0,0,0.19)',\n        borderRadius: '4px',\n        border: '2px solid  rgba(0,0,0,0.2)',\n        padding: '11px',\n        \"& button\": {\n            margin: '5px',\n\n            minWidth: '50px'\n        }\n    },\n    legendContainer: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        width: '100%'\n    },\n    legends: {\n        alignItems: 'center',\n        display: 'flex',\n        height: '40px',\n        boxShadow: '0px 4px 13px -1px rgba(0,0,0,0.2), 0px 1px 10px 0px rgba(0,0,0,0.14), 0px 1px 20px 0px rgba(0,0,0,0.19)',\n        borderRadius: '7px',\n        margin: '4px'\n\n    }\n}));\n\n\nfunction ButtonsGroup({ arrLen, questionInfo }) {\n\n\n    console.log(arrLen, questionInfo);\n\n    useEffect(() => {\n        console.log(\"useEffect\");\n        let tempArr = [];\n        if (questionInfo.id === \"\") {\n            const createArr = () => {\n                for (let i = 0; i < arrLen; i++) {\n                    let obj = {};\n                    obj['answered'] = false;\n                    obj['default'] = true;\n                    obj['unanswered'] = false;\n                    obj['reviewA'] = false;\n                    obj['reviewU'] = false;\n                    obj['id'] = i + 1;\n                    tempArr.push(obj);\n\n                }\n                setnewArr([...newArr, ...tempArr]);\n                console.log(\"newArr123\", newArr)\n            }\n            createArr();\n        } else {\n            updateButtons(questionInfo);\n        }\n\n\n    }, [questionInfo]);\n\n\n\n    const updateButtons = (questionInfo) => {\n        let obj = {};\n        // for (let i = 0; i < newArr.length; i++) {\n        //     if (newArr[i]['id'] == id) {\n\n        //         obj['answered'] = true;\n        //         obj['unanswered'] = false;\n        //         obj['review'] = false;\n        //         obj['id'] = id;\n\n        //     }\n\n        //     // tempArr.push(obj);\n\n        // }\n        setnewArr(state => {\n            console.log(\"state\", state);\n            const newArr = state.map(item => {\n                if (item.id == questionInfo.id) {\n                    item.answered = false;\n                    item.default = false;\n                    item.unanswered = false;\n                    item.reviewA = false;\n                    item.reviewU = false;\n                    item[questionInfo.type] = true;\n                    item['id'] = questionInfo.id;\n\n                }\n                return item;\n            })\n            return newArr;\n        })\n        // setnewArr([...newArr, obj]);\n    };\n\n    const classes = useStyles();\n    const [itemClicked, setitemClicked] = useState(-1);\n    const [answersCount, setanswersCount] = useState({ unanswered: 0, answered: 0, reviewA: 0, reviewU: 0 });\n    const [newArr, setnewArr] = useState([]);\n\n\n\n    const [isAnsweredColor, setisAnsweredColor] = useState(false);\n    // if (id !== undefined) {\n    //     updateButtons(id);\n    // }\n\n    console.log(\"newArr\", newArr);\n\n    const clicked = (val) => {\n        let clickedVal = parseInt(val.target.innerText.trim() - 1);\n        setitemClicked(clickedVal);\n    }\n    return (\n        <>\n            {/* <Grid container className={classes.container}> */}\n\n            {/* <Grid item xs={12} md={4} lg={3}> */}\n            {/* <Card className={classes.card}>\n                        {\n                            newArr.map((val, key) => {\n                                console.log(val, key);\n                                return (<Button key={key} className={classNames({ [classes.buttonDefault]: (itemClicked === key ? false : true), [classes.answeredColor]: (itemClicked === key ? true : false) })} onClick={(val) => clicked(val)} variant=\"contained\" color=\"primary\">\n                                    {val.value}\n                                </Button>)\n                            })\n                        }\n                    </Card> */}\n            <div className={classes.legendContainer}>\n                <div className={classes.legends} style={{ width: '50%' }}>\n                    <Brightness1Icon style={{ color: 'green' }} />\n                    <span> Answered Questions</span>\n                </div>\n                <div className={classes.legends} style={{ width: '44%' }}>\n                    <Brightness1Icon style={{ color: 'red' }} />\n                    <span> Unanswered Questions</span>\n                </div>\n                <div className={classes.legends} style={{ width: '50%' }}>\n                    <Brightness1Icon style={{ color: 'red' }} />\n                    <span> Review Answered Question</span>\n                </div>\n                <div className={classes.legends} style={{ width: '50%' }}>\n                    <Brightness1Icon style={{ color: 'rgb(239 180 180)' }} />\n                    <span> Review Unanswered Question</span>\n                </div>\n\n            </div>\n\n\n\n            <div style={{ width: '100%' }}>\n                <h3>Question Numbers</h3>\n            </div>\n            <div className={classes.buttonContainer}>\n\n\n                <br />\n                {/* <Card className={classes.card}> */}\n                {\n                    newArr.map((val, key) => {\n                        // console.log(val, key);\n                        return (\n                            <Button key={key} className={classNames({\n                                [classes.buttonDefault]: (val.default === true ? true : false),\n                                [classes.unansweredColor]: (val.unanswered === true ? true : false),\n                                [classes.answeredColor]: (val.answered === true ? true : false),\n                                [classes.reviewAnsweredColor]: (val.reviewA === true ? true : false),\n                                [classes.reviewUnAnsweredColor]: (val.reviewU === true ? true : false)\n                            })} variant=\"contained\" color=\"primary\">\n                                {key + 1}\n                            </Button>)\n                    })\n                }\n                {/* </Card> */}\n            </div>\n\n\n\n            {/* </Grid> */}\n            {/* </Grid> */}\n\n        </>\n    )\n}\n\nexport default ButtonsGroup\n","import React, { useState } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport ButtonsGroup from '../buttonsGroup/buttonsGroup';\nimport Header from '../header/header';\n\n// import image from '../../public/'\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minHeight: '40vh',\n        display: 'flex'\n    },\n    InstructionsDiv: {\n        padding: '9px',\n        boxShadow: '0px 3px 8px 6px #ccc',\n        // lineHeight: '4rem'\n    },\n    root: {\n        flexGrow: 1\n    },\n    img1: {\n        width: '100px',\n        height: '100px'\n    }\n}));\n\n\nfunction Instructions() {\n    const classes = useStyles();\n    let buttonVal = null;\n    const [questionId, setquestionId] = useState({ id: '', type: '' })\n\n    return (\n        <div className={classes.root}>\n            <Header />\n            <Typography variant=\"h4\" color=\"textSecondary\" align=\"left\">\n                Instructions\n            </Typography>\n            <ButtonsGroup arrLen={200} buttonValue={1} questionInfo={questionId} />\n            <Grid container>\n\n                <Grid item xs={12} md={9} >\n                    <button onClick={() => {\n                        setquestionId({ id: 1, type: 'answered' });\n                    }}>click me </button>\n                    <button onClick={() => {\n                        setquestionId({ id: 2, type: 'answered' });\n                    }}>click me </button>\n                    <button onClick={() => {\n                        setquestionId({ id: 2, type: 'review' });\n                    }}>Review </button>\n                    <button onClick={() => {\n\n                        setquestionId({ id: 2, type: 'unanswered' });\n                    }}>unanswered </button>\n                    {/* <Paper elevation={3}>\n                        <p className={classes.InstructionsDiv}>\n                            <h4>\n                                1. After login, the candidate shall be able to see the detailed instructions for the\n                                examination. Candidates are advised to go through the instructions carefully regarding the type\n                                of questions, marking scheme, procedure to mark & change answer etc. At the designated time\n                                of start of the examination, the candidates will be able to proceed and see the questions on the\n                                computer screen?\n                            </h4>\n                            <br />\n\n                            <h4>\n                                2.  After login, the candidate shall be able to see the detailed instructions for the\n                                examination. Candidates are advised to go through the instructions carefully regarding the type\n                                of questions, marking scheme, procedure to mark & change answer etc. At the designated time\n                                of start of the examination, the candidates will be able to proceed and see the questions on the\n                                computer screen?\n                            </h4>\n\n\n\n                            <br />\n                            <h4>\n                                3.  After login, the candidate shall be able to see the detailed instructions for the\n                                examination. Candidates are advised to go through the instructions carefully regarding the type\n                                of questions, marking scheme, procedure to mark & change answer etc. At the designated time\n                                of start of the examination, the candidates will be able to proceed and see the questions on the\n                                computer screen?\n                            </h4>\n\n                            <br />\n\n                            <h4>\n                                4.  After login, the candidate shall be able to see the detailed instructions for the\n                                examination. Candidates are advised to go through the instructions carefully regarding the type\n                                of questions, marking scheme, procedure to mark & change answer etc. At the designated time\n                                of start of the examination, the candidates will be able to proceed and see the questions on the\n                                computer screen?\n                            </h4>\n\n\n                        </p>\n                    </Paper> */}\n\n                </Grid>\n\n                <Grid item xs={12} md={3} >\n                    <Divider orientation=\"vertical\" flexItem />\n                    {/* <Avatar alt=\"Remy Sharp\" className={classes.img1} src=\"image1.jpg\" />\n                    Name: Harsh Yadav */}\n                </Grid>\n            </Grid>\n\n\n\n        </div>\n    )\n}\n\nexport default Instructions\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        marginLeft: 50\n    },\n    formControl: {\n        margin: theme.spacing.unit * 3,\n        [theme.breakpoints.only('xs')]: {\n            margin: 0\n        },\n        [theme.breakpoints.between('xs, sm')]: {\n            margin: 0\n        }\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`,\n    },\n});\n\nclass RadioButtonsGroup extends React.Component {\n    state = {\n        value: ''\n    };\n\n    handleChange = (event, ans, quesNo) => {\n        console.log(event, ans, quesNo);\n        this.setState({ value: event });\n\n        if (event === ans) {\n            this.props.response(quesNo);\n            // this.setState({ value: '' });\n        } else {\n            this.props.checkQuestionNo(quesNo);\n            // this.setState({ value: '' });\n        }\n    }\n\n    render() {\n        const { classes, objective } = this.props;\n        return (\n            <div className={classes.root}>\n                <FormControl component=\"fieldset\" className={classes.formControl}>\n                    <RadioGroup\n                        aria-label=\"Gender\"\n                        name=\"gender1\"\n                        className={classes.group}\n                        value={this.state.value}\n                        onChange={(e) => this.handleChange(e.target.value, objective.ans, objective.ques)}\n                    >\n                        <FormControlLabel value={objective.opt1} control={<Radio />} label={objective.opt1} />\n                        <FormControlLabel value={objective.opt2} control={<Radio />} label={objective.opt2} />\n                        {objective.opt3 === undefined ? null\n                            :\n                            <FormControlLabel value={objective.opt3} control={<Radio />} label={objective.opt3} />}\n                        {objective.opt4 === undefined ? null :\n                            <FormControlLabel value={objective.opt4} control={<Radio />} label={objective.opt4}\n                            />}\n                    </RadioGroup>\n                </FormControl>\n            </div>\n        );\n    }\n}\n\nRadioButtonsGroup.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(RadioButtonsGroup);\n","import React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport classNames from 'classnames';\n// import { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Brightness1Icon from '@material-ui/icons/Brightness1';\nimport Questions from './Questions';\nimport Objective from './Objective';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport ButtonsGroup from './buttonsGroup/buttonsGroup';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\n\nconst useStyles = theme => ({\n    root: {\n        flexGrow: 1\n    },\n    header: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 50,\n        width: '100%',\n        paddingLeft: theme.spacing.unit * 5,\n        marginBottom: 20,\n        backgroundColor: theme.palette.background.default,\n    },\n    leftContainer: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    mobileStepper: {\n        paddingLeft: theme.spacing.unit * 3,\n        paddingRight: theme.spacing.unit * 3\n    },\n\n    card: {\n        margin: '10px',\n        // backgroundColor: 'rgb(0,0,0,0.2)',\n    },\n    container: {\n        overflow: 'auto'\n    },\n    appbar: {\n        alignItems: 'center'\n    },\n\n    buttonDefault: {\n        margin: '12px',\n        borderRadius: '50%',\n        padding: '14px 0px',\n        backgroundColor: '#fff',\n        color: 'black',\n        \"&:hover\": {\n            backgroundColor: '#ccc',\n        }\n    },\n    answeredColor: {\n        // margin: '12px',\n        borderRadius: '50%',\n        padding: '14px 0px',\n        backgroundColor: 'green',\n        color: '#fff',\n        \"&:hover\": {\n            backgroundColor: '#8bb58b',\n        }\n    },\n\n    reviewColor: {\n        margin: '12px',\n        borderRadius: '50%',\n        padding: '14px 0px',\n        backgroundColor: 'red',\n        color: '#fff',\n        \"&:hover\": {\n            backgroundColor: 'red',\n        }\n    },\n    buttonContainer: {\n        display: 'flex',\n        width: 'calc(100% - 17%)',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        marginLeft: '44px',\n        maxHeight: '600px',\n        overflowY: 'scroll',\n        boxShadow: '0px 4px 13px -1px rgba(0,0,0,0.2), 0px 1px 10px 0px rgba(0,0,0,0.14), 0px 1px 20px 0px rgba(0,0,0,0.19)',\n        borderRadius: '4px',\n        border: '2px solid  rgba(0,0,0,0.2)',\n        padding: '11px',\n        \"& button\": {\n            margin: '5px',\n\n            minWidth: '50px'\n        }\n    },\n    legendContainer: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        width: '100%'\n    },\n    legends: {\n        alignItems: 'center',\n        display: 'flex',\n        height: '40px',\n        boxShadow: '0px 4px 13px -1px rgba(0,0,0,0.2), 0px 1px 10px 0px rgba(0,0,0,0.14), 0px 1px 20px 0px rgba(0,0,0,0.19)',\n        borderRadius: '7px',\n        margin: '4px'\n\n    }\n});\n\nfunction Test(props) {\n    // const classes = useStyles();\n    const { classes, theme } = props;\n    let quesNo = '';\n    const [questionNo, setquestionNo] = useState({ id: '', type: 'unanswered' });\n    const saveQuestion = (e) => {\n        console.log(e);\n        console.log(\"quesNo\", quesNo);\n        // if (e == \"save\")\n        //     setquestionNo({ id: 1, type: 'answered' });\n        // else {\n        //     if (JSON.parse(localStorage.getItem('questionNo')) === null)\n        //         setquestionNo({ id: 1, type: 'reviewU' });\n        //     else\n        //         setquestionNo({ id: 1, type: 'reviewA' });\n        // }\n\n        if (JSON.parse(localStorage.getItem('questionNo')) === null) {\n            if (e == \"save\") {\n                setquestionNo({ id: 1, type: 'unanswered' });\n            } else {\n                setquestionNo({ id: 1, type: 'reviewU' });\n            }\n        } else {\n            if (e == \"save\") {\n                setquestionNo({ id: 1, type: 'answered' });\n            } else {\n                setquestionNo({ id: 1, type: 'reviewA' });\n            }\n\n        }\n\n\n\n    }\n    const response = (quesNo) => {\n        console.log(\"quesNo\", quesNo);\n        quesNo = quesNo;\n        localStorage.setItem('questionNo', JSON.stringify(quesNo));\n        // setquestionNo(quesNo);\n        // quesNo = String(quesNo);\n        // const questionNo = JSON.parse(localStorage.getItem('questionNo'));\n        // const result = questionNo.includes(quesNo);\n\n        // if (result === false) {\n        //     localStorage.setItem('questionNo', JSON.stringify(questionNo.concat(quesNo)));\n        // }\n\n        // const questionNos = JSON.parse(localStorage.getItem('questionNo'));\n        // localStorage.setItem('candidateScore', String(questionNos.length));\n    };\n\n\n    const checkQuestionNo = (quesNo) => {\n        console.log(\"quesNo\", quesNo);\n        localStorage.setItem('questionNo', JSON.stringify(quesNo));\n        quesNo = quesNo;\n        // setquestionNo(quesNo);\n        // quesNo = String(quesNo);\n        // const questionNo = JSON.parse(localStorage.getItem('questionNo'));\n        // const result = questionNo.includes(quesNo);\n\n        // if (result === true) {\n        //     const questionNos = questionNo.filter((questionNumber) => {\n        //         return questionNumber !== quesNo;\n        //     });\n\n        //     localStorage.setItem('questionNo', JSON.stringify(questionNos));\n        //     localStorage.setItem('candidateScore', String(questionNos.length));\n        // }\n    }\n    return (\n        <>\n            <Grid container className={classes.container}>\n                <Grid container xs={12} md={8} lg={9} className={classes.leftContainer}>\n                    <Paper square elevation={0} className={classes.header}>\n                        <Typography>{Questions[1].id} {Questions[1].label}</Typography>\n                    </Paper>\n\n                    {/* {Questions.map(question => ( */}\n                    <Objective\n                        objective={Questions[1].obj}\n                        key={Questions[1].id}\n                        response={(quesNo) => response(quesNo)}\n                        checkQuestionNo={(quesNo) => checkQuestionNo(quesNo)} />\n                    {/* ))} */}\n\n                    <Button onClick={() => { saveQuestion('save') }} value=\"save\" variant=\"contained\">Save & Next</Button>\n                    <Button onClick={() => { saveQuestion('review') }} onClick={saveQuestion} variant=\"contained\" color=\"primary\">\n                        Review\n                    </Button>\n                </Grid>\n                <Grid item xs={12} md={4} lg={3}>\n\n                    <ButtonsGroup arrLen={50} questionInfo={questionNo} />\n\n\n                </Grid>\n            </Grid>\n\n        </>\n    )\n}\nexport default withStyles(useStyles, { withTheme: true })(Test);\n// export default Test\n","import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Login from './login/login';\nimport Instructions from './instructions/instructions';\n// import Header from './header/header';\nimport Test from './Test';\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <BrowserRouter>\n        {/* <MuiThemeProvider theme={theme}> */}\n\n        {/* <div className=\"App\"> */}\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route path=\"/instructions\" component={Test} />\n        </Switch>\n        {/* <Footer /> */}\n        {/* </div> */}\n\n        {/* </MuiThemeProvider> */}\n      </BrowserRouter>\n      {/* <Login/> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = [\n    {\n        id: 1,\n        label: 'What is a Computer?',\n        obj: {\n            ques: 1,\n            ans: 'An electronic machine',\n            opt1: 'An electronic machine',\n            opt2: 'A gabage in gabage out',\n            opt3: 'An electric calculator',\n            opt4: 'A television'\n        }\n    },\n    {\n        id: 2,\n        label: 'What does computer raw fact mean?',\n        obj: {\n            ques: 2,\n            ans: 'A data',\n            opt1: 'An information',\n            opt2: 'A piece of hardware',\n            opt3: 'A data',\n            opt4: 'A processed'\n        }\n    },\n    {\n        id: 3,\n        label: 'A Robot is an example of ................ generation of computer?',\n        obj: {\n            ques: 3,\n            ans: 'Fifth Generation',\n            opt1: 'First Generation',\n            opt2: 'Second Generation',\n            opt3: 'Third Generation',\n            opt4: 'Fifth Generation'\n        }\n    },\n    {\n        id: 4,\n        label: 'ATM is a Pc?',\n        obj: {\n            ques: 4,\n            ans: 'False',\n            opt1: 'True',\n            opt2: 'False'\n        }\n    },\n    {\n        id: 5,\n        label: 'Which among these is an input device?',\n        obj: {\n            ques: 5,\n            ans: 'Mouse',\n            opt1: 'Cursor',\n            opt2: 'Mouse',\n            opt3: 'Pointer',\n            opt4: 'Printer'\n        }\n    },\n    {\n        id: 6,\n        label: '_________________computers are used for counting and calculation ',\n        obj: {\n            ques: 6,\n            ans: 'Digital',\n            opt1: 'Hybrid',\n            opt2: 'Analogue',\n            opt3: 'Mainframe',\n            opt4: 'Digital'\n        }\n    },\n    {\n        id: 7,\n        label: 'Information can be obtained from _________________',\n        obj: {\n            ques: 7,\n            ans: 'All of the above',\n            opt1: 'Radio',\n            opt2: 'Television, newspaper ',\n            opt3: 'Library, chats ',\n            opt4: 'All of the above'\n        }\n    },\n    {\n        id: 8,\n        label: 'The numeric keys produce _________ in the lowercase and _________ after pressing the shift key',\n        obj: {\n            ques: 8,\n            ans: 'Numbers and symbols',\n            opt1: 'Numbers and functions',\n            opt2: 'Numbers and symbols',\n            opt3: 'Symbols and abomination',\n            opt4: 'None of the above'\n        }\n    },\n    {\n        id: 9,\n        label: 'which generation of computer made use of I.C?',\n        obj: {\n            ques: 9,\n            ans: 'Third Generation',\n            opt1: 'First Generation',\n            opt2: 'Second Generation',\n            opt3: 'Third Generation',\n            opt4: 'Fourth Generation'\n        }\n    },\n    {\n        id: 10,\n        label: 'The computer has an _________ and _________ part',\n        obj: {\n            ques: 10,\n            ans: 'Input, output',\n            opt1: 'Input, outpit',\n            opt2: 'Inpit, outpit',\n            opt3: 'Input, output',\n            opt4: 'All of the above'\n        }\n    },\n    {\n        id: 11,\n        label: 'Where can you watch football games?',\n        obj: {\n            ques: 11,\n            ans: 'Computer and television',\n            opt1: 'Disk and cassettes',\n            opt2: 'Computer and television',\n            opt3: 'Radio and television',\n            opt4: 'Screen and monitors'\n        }\n    },\n    {\n        id: 12,\n        label: 'How is printing done?',\n        obj: {\n            ques: 12,\n            ans: 'By placing paper in the input tray and issue a command for printing',\n            opt1: 'By typing on a paper ',\n            opt2: 'By photocoping',\n            opt3: 'By placing paper in the input tray and issue a command for printing',\n            opt4: 'None of the above '\n        }\n    },\n    {\n        id: 13,\n        label: '____________key makes a command to be executed or moves the cursor to the beginning of another line',\n        obj: {\n            ques: 13,\n            ans: 'Enter key',\n            opt1: 'Shift key',\n            opt2: 'Enter key',\n            opt3: 'Scroll bar key',\n            opt4: 'Esc key'\n        }\n    },\n    {\n        id: 14,\n        label: 'What is the function of the C.P.U?',\n        obj: {\n            ques: 14,\n            ans: 'It conducts all the computer operations',\n            opt1: 'It conducts all the computer operations',\n            opt2: 'It conducts only ALU operations',\n            opt3: 'It conducts only memory unit operations ',\n            opt4: 'None of the above '\n        }\n    },\n    {\n        id: 15,\n        label: 'V.G.A stands for ___________',\n        obj: {\n            ques: 15,\n            ans: 'Video graphic adapter',\n            opt1: 'Versatile graphic adapter',\n            opt2: 'Visual grape adapter',\n            opt3: 'Video graphic adapter',\n            opt4: 'None of the above '\n        }\n    },\n    {\n        id: 16,\n        label: 'Data or information is stored in the drive in ___________',\n        obj: {\n            ques: 16,\n            ans: 'Bytes',\n            opt1: 'Bets',\n            opt2: 'Bits',\n            opt3: 'Bytes',\n            opt4: 'Megas'\n        }\n    },\n    {\n        id: 17,\n        label: '__________ are used in specialised activities that are dangerous or tedious for humans',\n        obj: {\n            ques: 17,\n            ans: 'Robots',\n            opt1: 'Computers',\n            opt2: 'Joystick ',\n            opt3: 'Robots',\n            opt4: 'Military weapons'\n        }\n    },\n    {\n        id: 18,\n        label: 'What is a printer?',\n        obj: {\n            ques: 18,\n            ans: 'It is a device used by a computer to bring out a hard copy of printout results',\n            opt1: 'It is just a device',\n            opt2: 'It is a device used by a computer to bring out a hard copy of printout results',\n            opt3: 'It is a photocopier',\n            opt4: 'All of the above'\n        }\n    },\n    {\n        id: 19,\n        label: 'Where do you connect the monitor to?',\n        obj: {\n            ques: 19,\n            ans: 'System unit',\n            opt1: 'Monitor',\n            opt2: 'Mouse ',\n            opt3: 'System unit',\n            opt4: 'UPS'\n        }\n    },\n    {\n        id: 20,\n        label: 'Microprocessor chips are used by ____________',\n        obj: {\n            ques: 20,\n            ans: 'Micro computer',\n            opt1: 'Mainframe computer',\n            opt2: 'Personal computer',\n            opt3: 'Mini computer',\n            opt4: 'Micro computer'\n        }\n    },\n    {\n        id: 21,\n        label: 'The rectangular box or frame that displays the properties of an environment in the computer is ____________',\n        obj: {\n            ques: 21,\n            ans: 'Window',\n            opt1: 'Start Menu',\n            opt2: 'Window',\n            opt3: 'Task bar',\n            opt4: 'Desktop'\n        }\n    },\n    {\n        id: 22,\n        label: 'What are the parts of the computer you know?',\n        obj: {\n            ques: 22,\n            ans: 'A and B',\n            opt1: 'Mouse',\n            opt2: 'Monitor and system unit',\n            opt3: 'A and B',\n            opt4: 'All of the above '\n        }\n    },\n    {\n        id: 23,\n        label: 'What is an application software?',\n        obj: {\n            ques: 23,\n            ans: 'It is a software that is specially designed for one kind of activity',\n            opt1: 'It is a utility software',\n            opt2: 'It is a software that is specially designed for one kind of activity',\n            opt3: 'It is a program',\n            opt4: 'Instructions'\n        }\n    },\n    {\n        id: 24,\n        label: 'What is an input?',\n        obj: {\n            ques: 24,\n            ans: 'It is the data that is been fed into the computer',\n            opt1: 'It is the data that is been fed into the computer',\n            opt2: 'It is the gabbage given to the computer',\n            opt3: 'It is letters',\n            opt4: 'None of the above'\n        }\n    },\n    {\n        id: 25,\n        label: 'NDE stands for',\n        obj: {\n            ques: 25,\n            ans: 'National Directorate of Employment',\n            opt1: 'National Director of Empowerment',\n            opt2: 'National Director of Employment',\n            opt3: 'National Directorate of Empowerment',\n            opt4: 'National Directorate of Employment'\n        }\n    },\n    {\n        id: 26,\n        label: 'Computer can be used to ____________',\n        obj: {\n            ques: 26,\n            ans: 'All of the above',\n            opt1: 'Listen to music',\n            opt2: 'Learn',\n            opt3: 'Draw, type',\n            opt4: 'All of the above'\n        }\n    },\n    {\n        id: 27,\n        label: '___________ can store and retrieve data',\n        obj: {\n            ques: 27,\n            ans: 'Computer',\n            opt1: 'CPU',\n            opt2: 'Computer',\n            opt3: 'Memory unit',\n            opt4: 'All of the above'\n        }\n    },\n    {\n        id: 28,\n        label: 'All of these are importance of a computer program `Mavis Beacon` except ___________',\n        obj: {\n            ques: 28,\n            ans: 'It shows a game',\n            opt1: 'It gives typing skill',\n            opt2: 'It shows how to place fingers on the keyboard',\n            opt3: 'It increases typing speed',\n            opt4: 'It shows a game'\n        }\n    },\n    {\n        id: 29,\n        label: '___________ is used mostly in games and entertainment software',\n        obj: {\n            ques: 29,\n            ans: 'Joystick',\n            opt1: 'Mouse',\n            opt2: 'Mice',\n            opt3: 'Lice',\n            opt4: 'Joystick'\n        }\n    },\n    {\n        id: 30,\n        label: 'How does the monitor look like?',\n        obj: {\n            ques: 30,\n            ans: 'Television',\n            opt1: 'Radio',\n            opt2: 'Sreen',\n            opt3: 'Television',\n            opt4: 'Mirror'\n        }\n    },\n    {\n        id: 31,\n        label: 'The process every computer must pass through before use is ___________',\n        obj: {\n            ques: 31,\n            ans: 'Booting',\n            opt1: 'Loading',\n            opt2: 'Windows xp',\n            opt3: 'Booting',\n            opt4: 'Processing'\n        }\n    },\n    {\n        id: 32,\n        label: 'What does the term GIGO mean?',\n        obj: {\n            ques: 32,\n            ans: 'Gabage In Gabage Out',\n            opt1: 'Go In Go Out',\n            opt2: 'Get In Get Out',\n            opt3: 'Going In Going Out',\n            opt4: 'Gabage In Gabage Out'\n        }\n    },\n    {\n        id: 33,\n        label: 'What is the full meaning of USB?',\n        obj: {\n            ques: 33,\n            ans: 'Universal Serial Bus',\n            opt1: 'Universal Serial Bus',\n            opt2: 'Uniform Serving Bus',\n            opt3: 'Universe Station Bus',\n            opt4: 'Unity Serial Bus'\n        }\n    },\n    {\n        id: 34,\n        label: 'What does the term PC mean?',\n        obj: {\n            ques: 34,\n            ans: 'Personal Computer',\n            opt1: 'Peoples Computer',\n            opt2: 'Personal Computer',\n            opt3: 'Power Computer',\n            opt4: 'Unity Serial Bus'\n        }\n    },\n    {\n        id: 35,\n        label: 'What is the keyword that can be used to run Microsoft Paint?',\n        obj: {\n            ques: 35,\n            ans: 'Mspaint',\n            opt1: 'Paint',\n            opt2: 'Microsoft Paint',\n            opt3: 'Ms Paint',\n            opt4: 'Mspaint'\n        }\n    },\n    {\n        id: 36,\n        label: 'Which among these is not a version of Microsoft Windows?',\n        obj: {\n            ques: 36,\n            ans: 'Windows 9',\n            opt1: 'Windows 7',\n            opt2: 'Windows 8',\n            opt3: 'Windows 9',\n            opt4: 'Windows 10'\n        }\n    },\n    {\n        id: 37,\n        label: 'What are the small pictures that you click on to start an application called?',\n        obj: {\n            ques: 37,\n            ans: 'icons',\n            opt1: 'folders',\n            opt2: 'programs',\n            opt3: 'icons',\n            opt4: 'pictures'\n        }\n    },\n    {\n        id: 38,\n        label: 'Ctrl + Z is a command used to',\n        obj: {\n            ques: 38,\n            ans: 'Undo',\n            opt1: 'Undo',\n            opt2: 'Redo',\n            opt3: 'Copy',\n            opt4: 'Paste'\n        }\n    },\n    {\n        id: 39,\n        label: 'Ctrl + Y is a command used to',\n        obj: {\n            ques: 39,\n            ans: 'Redo',\n            opt1: 'Undo',\n            opt2: 'Redo',\n            opt3: 'Copy',\n            opt4: 'Paste'\n        }\n    },\n    {\n        id: 40,\n        label: 'The topmost bar of every window is known as the title bar.',\n        obj: {\n            ques: 40,\n            ans: 'True',\n            opt1: 'True',\n            opt2: 'False'\n        }\n    },\n    {\n        id: 41,\n        label: 'What is a Command?',\n        obj: {\n            ques: 41,\n            ans: 'A set of instruction given to the computer on its own language',\n            opt1: 'A requirement from the computer',\n            opt2: 'A question given to the computer',\n            opt3: 'A set of instrument given to the computer',\n            opt4: 'A set of instruction given to the computer on its own language'\n        }\n    },\n    {\n        id: 42,\n        label: 'A processed data is ____________',\n        obj: {\n            ques: 42,\n            ans: 'An information',\n            opt1: 'A raw material',\n            opt2: 'An information',\n            opt3: 'A command',\n            opt4: 'None of the above'\n        }\n    },\n    {\n        id: 43,\n        label: 'Scanner is an output device',\n        obj: {\n            ques: 43,\n            ans: 'False',\n            opt1: 'True',\n            opt2: 'False',\n        }\n    },\n    {\n        id: 44,\n        label: 'The physical part of the computer that we can touch, see and carry about is called?',\n        obj: {\n            ques: 44,\n            ans: 'Hardware',\n            opt1: 'Software',\n            opt2: 'Hardware',\n            opt3: 'Softcopy',\n            opt4: 'Hardcopy'\n        }\n    },\n    {\n        id: 45,\n        label: 'Warm booting is done to ______________',\n        obj: {\n            ques: 45,\n            ans: 'Refresh the memory of the system',\n            opt1: 'Power On the system',\n            opt2: 'Boot the system',\n            opt3: 'Refresh the memory of the system',\n            opt4: 'Process data'\n        }\n    },\n    {\n        id: 46,\n        label: '________ disrupts the smooth operation of the computer system',\n        obj: {\n            ques: 46,\n            ans: 'Virus',\n            opt1: 'Syphy',\n            opt2: 'Trokiter',\n            opt3: 'Virus',\n            opt4: 'sprokiter'\n        }\n    },\n    {\n        id: 47,\n        label: '___________ is not a component of the system unit',\n        obj: {\n            ques: 47,\n            ans: 'Connector',\n            opt1: 'Cd Rom',\n            opt2: 'Power Supply Unit',\n            opt3: 'Connector',\n            opt4: 'Harddisk'\n        }\n    },\n    {\n        id: 48,\n        label: '___________ is an example of a program that removes system virus',\n        obj: {\n            ques: 48,\n            ans: 'Avast',\n            opt1: 'kasperse',\n            opt2: 'Avast',\n            opt3: 'Trokiter',\n            opt4: 'Newton'\n        }\n    },\n    {\n        id: 49,\n        label: 'A.L.U is found where?',\n        obj: {\n            ques: 49,\n            ans: 'In the C.P.U',\n            opt1: 'In the G.U.I',\n            opt2: 'In the D.P.O',\n            opt3: 'In the R.P.O',\n            opt4: 'In the C.P.U'\n        }\n    },\n    {\n        id: 50,\n        label: 'what is the most busiest part of the computer system?',\n        obj: {\n            ques: 50,\n            ans: 'C.P.U',\n            opt1: 'A.L.U',\n            opt2: 'D.P.O',\n            opt3: 'R.P.O',\n            opt4: 'C.P.U'\n        }\n    },\n\n];"],"sourceRoot":""}