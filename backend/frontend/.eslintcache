[{"C:\\Users\\sudhisin\\eclipse-workspace\\unicCBT\\backend\\frontend\\src\\Questions.js":"1","C:\\Users\\sudhisin\\eclipse-workspace\\unicCBT\\backend\\frontend\\src\\login\\login.js":"2","C:\\Users\\sudhisin\\eclipse-workspace\\unicCBT\\backend\\frontend\\src\\buttonsGroup\\buttonsGroup.js":"3","C:\\Users\\sudhisin\\eclipse-workspace\\unicCBT\\backend\\frontend\\src\\Objective.js":"4","C:\\Users\\sudhisin\\eclipse-workspace\\unicCBT\\backend\\frontend\\src\\index.js":"5","C:\\Users\\sudhisin\\eclipse-workspace\\unicCBT\\backend\\frontend\\src\\header\\header.js":"6","C:\\Users\\sudhisin\\eclipse-workspace\\unicCBT\\backend\\frontend\\src\\reportWebVitals.js":"7","C:\\Users\\sudhisin\\eclipse-workspace\\unicCBT\\backend\\frontend\\src\\footer\\footer.js":"8","C:\\Users\\sudhisin\\eclipse-workspace\\unicCBT\\backend\\frontend\\src\\Test.js":"9"},{"size":16610,"mtime":1609687315444,"results":"10","hashOfConfig":"11"},{"size":5286,"mtime":1609687315455,"results":"12","hashOfConfig":"11"},{"size":9046,"mtime":1609687315447,"results":"13","hashOfConfig":"11"},{"size":2690,"mtime":1609687315426,"results":"14","hashOfConfig":"11"},{"size":517,"mtime":1609687315453,"results":"15","hashOfConfig":"11"},{"size":1903,"mtime":1609687315451,"results":"16","hashOfConfig":"11"},{"size":375,"mtime":1609687315458,"results":"17","hashOfConfig":"11"},{"size":581,"mtime":1609687315449,"results":"18","hashOfConfig":"11"},{"size":7291,"mtime":1609687315446,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"o903ls",{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},"C:\\Users\\sudhisin\\eclipse-workspace\\unicCBT\\backend\\frontend\\src\\Questions.js",[],["45","46"],"C:\\Users\\sudhisin\\eclipse-workspace\\unicCBT\\backend\\frontend\\src\\login\\login.js",["47","48","49","50","51"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Footer from '../footer/footer';\r\nimport Header from '../header/header';\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    minHeight: '100vh'\r\n  },\r\n\r\n  paper: {\r\n    marginTop: theme.spacing(15),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    boxShadow: 'rgba(0, 0, 0, 0.2) 0px 3px 3px -2px, rgba(0, 0, 0, 0.14) 0px 3px 4px 0px, rgba(0, 0, 0, 0.12) 0px 1px 8px 0px',\r\n    padding: '3em'\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.dark,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\nfunction Copyright() {\r\n\r\n  return (\r\n    <Typography variant=\"body1\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"https://www.unicsolutons.edu\">\r\n        www.unicsolutons.edu\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n\r\n  )\r\n}\r\n\r\nexport default function Login() {\r\n  const classes = useStyles();\r\n  const [regNo, setregNo] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n\r\n  const [regNoErr, setregNoErr] = useState(\"\");\r\n  const [passwordErr, setpasswordErr] = useState(\"\");\r\n  const [isregValid, setisRegValid] = useState(false)\r\n  const [ispassValid, setisPassValid] = useState(false)\r\n\r\n\r\n  const onSubmit = (e) => {\r\n    console.group(e.value);\r\n  };\r\n\r\n  const regNoChangeEvent = (e) => {\r\n\r\n    if (e.target.value == \"\") {\r\n      setregNoErr(\"Empty Registration Number\");\r\n      setisRegValid(false)\r\n      return;\r\n    }\r\n    if (e.target.value.trim() !== \"123\") {\r\n      setregNoErr(\"Incorrect Registration Number\");\r\n      setisRegValid(false)\r\n      return;\r\n    }\r\n    setisRegValid(true)\r\n    setregNo(e.target.value);\r\n    setregNoErr(\"\");\r\n\r\n\r\n  };\r\n\r\n\r\n  const submitLoginForm = (e) => {\r\n    e.preventDefault();\r\n    console.log(regNo, password);\r\n  }\r\n\r\n  const passChangeEvent = (e) => {\r\n\r\n    if (e.target.value == \"\") {\r\n      setpasswordErr(\"Empty Password\");\r\n      setisPassValid(false)\r\n      return;\r\n    }\r\n    if (e.target.value.trim() !== \"123\") {\r\n      setpasswordErr(\"Incorrect Password\");\r\n      setisPassValid(false)\r\n      return;\r\n    }\r\n    setisPassValid(true)\r\n    setpassword(e.target.value);\r\n    setpasswordErr(\"\");\r\n\r\n\r\n  };\r\n\r\n  return (\r\n\r\n\r\n\r\n    <div className={classes.root}>\r\n      {/* header start */}\r\n      {/* <Header/> */}\r\n      {/*  header end */}\r\n      <Container component=\"div\" maxWidth=\"xs\">\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n        </Typography>\r\n\r\n\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              helperText={regNoErr !== \"\" ? regNoErr : \"\"}\r\n              error={regNoErr !== \"\"}\r\n              onChange={regNoChangeEvent}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"regNo\"\r\n              label=\"Registration Number\"\r\n              name=\"regNo\"\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              helperText={passwordErr !== \"\" ? passwordErr : \"\"}\r\n              error={passwordErr !== \"\"}\r\n              onChange={passChangeEvent}\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              disabled={(isregValid === true && ispassValid === true) === true ? false : true}\r\n              fullWidth\r\n              onClick={submitLoginForm}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n          </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body1\">\r\n                  Forgot password?\r\n              </Link>\r\n              </Grid>\r\n\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n\r\n        <Box mt={8}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n      <Footer />\r\n    </div>\r\n\r\n  )\r\n\r\n}",["52","53"],"C:\\Users\\sudhisin\\eclipse-workspace\\unicCBT\\backend\\frontend\\src\\buttonsGroup\\buttonsGroup.js",["54","55","56","57","58","59","60","61","62","63","64","65","66"],"import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport classNames from 'classnames';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Brightness1Icon from '@material-ui/icons/Brightness1';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    header: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: 50,\r\n        width: '100%',\r\n        paddingLeft: theme.spacing.unit * 5,\r\n        marginBottom: 20,\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    leftContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n\r\n    card: {\r\n        margin: '10px',\r\n        // backgroundColor: 'rgb(0,0,0,0.2)',\r\n    },\r\n    container: {\r\n        overflow: 'auto'\r\n    },\r\n    appbar: {\r\n        alignItems: 'center'\r\n    },\r\n\r\n    buttonDefault: {\r\n        margin: '12px',\r\n        borderRadius: '50%',\r\n        padding: '14px 0px',\r\n        backgroundColor: '#fff',\r\n        color: 'black',\r\n        \"&:hover\": {\r\n            backgroundColor: '#ccc',\r\n        }\r\n    },\r\n    answeredColor: {\r\n        // margin: '12px',\r\n        borderRadius: '50%',\r\n        padding: '14px 0px',\r\n        backgroundColor: '#8bb58b',\r\n        color: '#fff',\r\n        \"&:hover\": {\r\n            backgroundColor: '#8bb58b',\r\n        }\r\n    },\r\n\r\n    reviewAnsweredColor: {\r\n        margin: '12px',\r\n        borderRadius: '50%',\r\n        padding: '14px 0px',\r\n        backgroundColor: 'red',\r\n        color: '#fff',\r\n        \"&:hover\": {\r\n            backgroundColor: 'red',\r\n        }\r\n    },\r\n    reviewUnAnsweredColor: {\r\n        margin: '12px',\r\n        borderRadius: '50%',\r\n        padding: '14px 0px',\r\n        backgroundColor: 'rgb(239 180 180)',\r\n        color: '#fff',\r\n        \"&:hover\": {\r\n            backgroundColor: '#rgb(239 180 180)',\r\n        }\r\n    },\r\n    unansweredColor: {\r\n        margin: '12px',\r\n        borderRadius: '50%',\r\n        padding: '14px 0px',\r\n        backgroundColor: 'red',\r\n        color: '#fff',\r\n        \"&:hover\": {\r\n            backgroundColor: 'red',\r\n        }\r\n    },\r\n\r\n    buttonContainer: {\r\n        display: 'flex',\r\n        width: 'calc(100% - 17%)',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        marginLeft: '44px',\r\n        maxHeight: '600px',\r\n        overflowY: 'scroll',\r\n        boxShadow: '0px 4px 13px -1px rgba(0,0,0,0.2), 0px 1px 10px 0px rgba(0,0,0,0.14), 0px 1px 20px 0px rgba(0,0,0,0.19)',\r\n        borderRadius: '4px',\r\n        border: '2px solid  rgba(0,0,0,0.2)',\r\n        padding: '11px',\r\n        \"& button\": {\r\n            margin: '5px',\r\n\r\n            minWidth: '50px'\r\n        }\r\n    },\r\n    legendContainer: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        width: '100%'\r\n    },\r\n    legends: {\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        height: '40px',\r\n        boxShadow: '0px 4px 13px -1px rgba(0,0,0,0.2), 0px 1px 10px 0px rgba(0,0,0,0.14), 0px 1px 20px 0px rgba(0,0,0,0.19)',\r\n        borderRadius: '7px',\r\n        margin: '4px'\r\n\r\n    }\r\n}));\r\n\r\n\r\nfunction ButtonsGroup({ arrLen, questionInfo }) {\r\n\r\n\r\n    console.log(arrLen, questionInfo);\r\n\r\n    useEffect(() => {\r\n        console.log(\"useEffect\");\r\n        let tempArr = [];\r\n        if (questionInfo.id === \"\") {\r\n            const createArr = () => {\r\n                for (let i = 0; i < arrLen; i++) {\r\n                    let obj = {};\r\n                    obj['answered'] = false;\r\n                    obj['default'] = true;\r\n                    obj['unanswered'] = false;\r\n                    obj['reviewA'] = false;\r\n                    obj['reviewU'] = false;\r\n                    obj['id'] = i + 1;\r\n                    tempArr.push(obj);\r\n\r\n                }\r\n                setnewArr([...newArr, ...tempArr]);\r\n                console.log(\"newArr123\", newArr)\r\n            }\r\n            createArr();\r\n        } else {\r\n            updateButtons(questionInfo);\r\n        }\r\n\r\n\r\n    }, [questionInfo]);\r\n\r\n\r\n\r\n    const updateButtons = (questionInfo) => {\r\n        let obj = {};\r\n        // for (let i = 0; i < newArr.length; i++) {\r\n        //     if (newArr[i]['id'] == id) {\r\n\r\n        //         obj['answered'] = true;\r\n        //         obj['unanswered'] = false;\r\n        //         obj['review'] = false;\r\n        //         obj['id'] = id;\r\n\r\n        //     }\r\n\r\n        //     // tempArr.push(obj);\r\n\r\n        // }\r\n        setnewArr(state => {\r\n            console.log(\"state\", state);\r\n            const newArr = state.map(item => {\r\n                if (item.id == questionInfo.id) {\r\n                    item.answered = false;\r\n                    item.default = false;\r\n                    item.unanswered = false;\r\n                    item.reviewA = false;\r\n                    item.reviewU = false;\r\n                    item[questionInfo.type] = true;\r\n                    item['id'] = questionInfo.id;\r\n\r\n                }\r\n                return item;\r\n            })\r\n            return newArr;\r\n        })\r\n        // setnewArr([...newArr, obj]);\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const [itemClicked, setitemClicked] = useState(-1);\r\n    const [answersCount, setanswersCount] = useState({ unanswered: 0, answered: 0, reviewA: 0, reviewU: 0 });\r\n    const [newArr, setnewArr] = useState([]);\r\n\r\n\r\n\r\n    const [isAnsweredColor, setisAnsweredColor] = useState(false);\r\n    // if (id !== undefined) {\r\n    //     updateButtons(id);\r\n    // }\r\n\r\n    console.log(\"newArr\", newArr);\r\n\r\n    const clicked = (val) => {\r\n        let clickedVal = parseInt(val.target.innerText.trim() - 1);\r\n        setitemClicked(clickedVal);\r\n    }\r\n    return (\r\n        <>\r\n            {/* <Grid container className={classes.container}> */}\r\n\r\n            {/* <Grid item xs={12} md={4} lg={3}> */}\r\n            {/* <Card className={classes.card}>\r\n                        {\r\n                            newArr.map((val, key) => {\r\n                                console.log(val, key);\r\n                                return (<Button key={key} className={classNames({ [classes.buttonDefault]: (itemClicked === key ? false : true), [classes.answeredColor]: (itemClicked === key ? true : false) })} onClick={(val) => clicked(val)} variant=\"contained\" color=\"primary\">\r\n                                    {val.value}\r\n                                </Button>)\r\n                            })\r\n                        }\r\n                    </Card> */}\r\n            <div className={classes.legendContainer}>\r\n                <div className={classes.legends} style={{ width: '50%' }}>\r\n                    <Brightness1Icon style={{ color: 'green' }} />\r\n                    <span> Answered Questions</span>\r\n                </div>\r\n                <div className={classes.legends} style={{ width: '44%' }}>\r\n                    <Brightness1Icon style={{ color: 'red' }} />\r\n                    <span> Unanswered Questions</span>\r\n                </div>\r\n                <div className={classes.legends} style={{ width: '50%' }}>\r\n                    <Brightness1Icon style={{ color: 'red' }} />\r\n                    <span> Review Answered Question</span>\r\n                </div>\r\n                <div className={classes.legends} style={{ width: '50%' }}>\r\n                    <Brightness1Icon style={{ color: 'rgb(239 180 180)' }} />\r\n                    <span> Review Unanswered Question</span>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n            <div style={{ width: '100%' }}>\r\n                <h3>Question Numbers</h3>\r\n            </div>\r\n            <div className={classes.buttonContainer}>\r\n\r\n\r\n                <br />\r\n                {/* <Card className={classes.card}> */}\r\n                {\r\n                    newArr.map((val, key) => {\r\n                        // console.log(val, key);\r\n                        return (\r\n                            <Button key={key} className={classNames({\r\n                                [classes.buttonDefault]: (val.default === true ? true : false),\r\n                                [classes.unansweredColor]: (val.unanswered === true ? true : false),\r\n                                [classes.answeredColor]: (val.answered === true ? true : false),\r\n                                [classes.reviewAnsweredColor]: (val.reviewA === true ? true : false),\r\n                                [classes.reviewUnAnsweredColor]: (val.reviewU === true ? true : false)\r\n                            })} variant=\"contained\" color=\"primary\">\r\n                                {key + 1}\r\n                            </Button>)\r\n                    })\r\n                }\r\n                {/* </Card> */}\r\n            </div>\r\n\r\n\r\n\r\n            {/* </Grid> */}\r\n            {/* </Grid> */}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ButtonsGroup\r\n","C:\\Users\\sudhisin\\eclipse-workspace\\unicCBT\\backend\\frontend\\src\\Objective.js",[],"C:\\Users\\sudhisin\\eclipse-workspace\\unicCBT\\backend\\frontend\\src\\index.js",[],["67","68"],"C:\\Users\\sudhisin\\eclipse-workspace\\unicCBT\\backend\\frontend\\src\\header\\header.js",[],"C:\\Users\\sudhisin\\eclipse-workspace\\unicCBT\\backend\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\sudhisin\\eclipse-workspace\\unicCBT\\backend\\frontend\\src\\footer\\footer.js",[],"C:\\Users\\sudhisin\\eclipse-workspace\\unicCBT\\backend\\frontend\\src\\Test.js",["69","70","71","72","73","74","75","76","77","78","79","80","81"],"import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport Button from '@material-ui/core/Button';\r\nimport classNames from 'classnames';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Brightness1Icon from '@material-ui/icons/Brightness1';\r\nimport Questions from './Questions';\r\nimport Objective from './Objective';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ButtonsGroup from './buttonsGroup/buttonsGroup';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    header: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: 50,\r\n        width: '100%',\r\n        paddingLeft: theme.spacing.unit * 5,\r\n        marginBottom: 20,\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    leftContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    mobileStepper: {\r\n        paddingLeft: theme.spacing.unit * 3,\r\n        paddingRight: theme.spacing.unit * 3\r\n    },\r\n\r\n    card: {\r\n        margin: '10px',\r\n        // backgroundColor: 'rgb(0,0,0,0.2)',\r\n    },\r\n    container: {\r\n        overflow: 'auto'\r\n    },\r\n    appbar: {\r\n        alignItems: 'center'\r\n    },\r\n\r\n    buttonDefault: {\r\n        margin: '12px',\r\n        borderRadius: '50%',\r\n        padding: '14px 0px',\r\n        backgroundColor: '#fff',\r\n        color: 'black',\r\n        \"&:hover\": {\r\n            backgroundColor: '#ccc',\r\n        }\r\n    },\r\n    answeredColor: {\r\n        // margin: '12px',\r\n        borderRadius: '50%',\r\n        padding: '14px 0px',\r\n        backgroundColor: 'green',\r\n        color: '#fff',\r\n        \"&:hover\": {\r\n            backgroundColor: '#8bb58b',\r\n        }\r\n    },\r\n\r\n    reviewColor: {\r\n        margin: '12px',\r\n        borderRadius: '50%',\r\n        padding: '14px 0px',\r\n        backgroundColor: 'red',\r\n        color: '#fff',\r\n        \"&:hover\": {\r\n            backgroundColor: 'red',\r\n        }\r\n    },\r\n    buttonContainer: {\r\n        display: 'flex',\r\n        width: 'calc(100% - 17%)',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        marginLeft: '44px',\r\n        maxHeight: '600px',\r\n        overflowY: 'scroll',\r\n        boxShadow: '0px 4px 13px -1px rgba(0,0,0,0.2), 0px 1px 10px 0px rgba(0,0,0,0.14), 0px 1px 20px 0px rgba(0,0,0,0.19)',\r\n        borderRadius: '4px',\r\n        border: '2px solid  rgba(0,0,0,0.2)',\r\n        padding: '11px',\r\n        \"& button\": {\r\n            margin: '5px',\r\n\r\n            minWidth: '50px'\r\n        }\r\n    },\r\n    legendContainer: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        width: '100%'\r\n    },\r\n    legends: {\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        height: '40px',\r\n        boxShadow: '0px 4px 13px -1px rgba(0,0,0,0.2), 0px 1px 10px 0px rgba(0,0,0,0.14), 0px 1px 20px 0px rgba(0,0,0,0.19)',\r\n        borderRadius: '7px',\r\n        margin: '4px'\r\n\r\n    }\r\n});\r\n\r\nfunction Test(props) {\r\n    // const classes = useStyles();\r\n    const { classes, theme } = props;\r\n    let quesNo = '';\r\n    const [questionNo, setquestionNo] = useState({ id: '', type: 'unanswered' });\r\n    const saveQuestion = (e) => {\r\n        console.log(e);\r\n        console.log(\"quesNo\", quesNo);\r\n        // if (e == \"save\")\r\n        //     setquestionNo({ id: 1, type: 'answered' });\r\n        // else {\r\n        //     if (JSON.parse(localStorage.getItem('questionNo')) === null)\r\n        //         setquestionNo({ id: 1, type: 'reviewU' });\r\n        //     else\r\n        //         setquestionNo({ id: 1, type: 'reviewA' });\r\n        // }\r\n\r\n        if (JSON.parse(localStorage.getItem('questionNo')) === null) {\r\n            if (e == \"save\") {\r\n                setquestionNo({ id: 1, type: 'unanswered' });\r\n            } else {\r\n                setquestionNo({ id: 1, type: 'reviewU' });\r\n            }\r\n        } else {\r\n            if (e == \"save\") {\r\n                setquestionNo({ id: 1, type: 'answered' });\r\n            } else {\r\n                setquestionNo({ id: 1, type: 'reviewA' });\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    const response = (quesNo) => {\r\n        console.log(\"quesNo\", quesNo);\r\n        quesNo = quesNo;\r\n        localStorage.setItem('questionNo', JSON.stringify(quesNo));\r\n        // setquestionNo(quesNo);\r\n        // quesNo = String(quesNo);\r\n        // const questionNo = JSON.parse(localStorage.getItem('questionNo'));\r\n        // const result = questionNo.includes(quesNo);\r\n\r\n        // if (result === false) {\r\n        //     localStorage.setItem('questionNo', JSON.stringify(questionNo.concat(quesNo)));\r\n        // }\r\n\r\n        // const questionNos = JSON.parse(localStorage.getItem('questionNo'));\r\n        // localStorage.setItem('candidateScore', String(questionNos.length));\r\n    };\r\n\r\n\r\n    const checkQuestionNo = (quesNo) => {\r\n        console.log(\"quesNo\", quesNo);\r\n        localStorage.setItem('questionNo', JSON.stringify(quesNo));\r\n        quesNo = quesNo;\r\n        // setquestionNo(quesNo);\r\n        // quesNo = String(quesNo);\r\n        // const questionNo = JSON.parse(localStorage.getItem('questionNo'));\r\n        // const result = questionNo.includes(quesNo);\r\n\r\n        // if (result === true) {\r\n        //     const questionNos = questionNo.filter((questionNumber) => {\r\n        //         return questionNumber !== quesNo;\r\n        //     });\r\n\r\n        //     localStorage.setItem('questionNo', JSON.stringify(questionNos));\r\n        //     localStorage.setItem('candidateScore', String(questionNos.length));\r\n        // }\r\n    }\r\n    return (\r\n        <>\r\n            <Grid container className={classes.container}>\r\n                <Grid container xs={12} md={8} lg={9} className={classes.leftContainer}>\r\n                    <Paper square elevation={0} className={classes.header}>\r\n                        <Typography>{Questions[1].id} {Questions[1].label}</Typography>\r\n                    </Paper>\r\n\r\n                    {/* {Questions.map(question => ( */}\r\n                    <Objective\r\n                        objective={Questions[1].obj}\r\n                        key={Questions[1].id}\r\n                        response={(quesNo) => response(quesNo)}\r\n                        checkQuestionNo={(quesNo) => checkQuestionNo(quesNo)} />\r\n                    {/* ))} */}\r\n\r\n                    <Button onClick={() => { saveQuestion('save') }} value=\"save\" variant=\"contained\">Save & Next</Button>\r\n                    <Button onClick={() => { saveQuestion('review') }} onClick={saveQuestion} variant=\"contained\" color=\"primary\">\r\n                        Review\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item xs={12} md={4} lg={3}>\r\n\r\n                    <ButtonsGroup arrLen={50} questionInfo={questionNo} />\r\n\r\n\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default withStyles(useStyles, { withTheme: true })(Test);\r\n// export default Test\r\n",["82","83"],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":7,"column":8,"nodeType":"90","messageId":"91","endLine":7,"endColumn":16},{"ruleId":"88","severity":1,"message":"92","line":16,"column":8,"nodeType":"90","messageId":"91","endLine":16,"endColumn":14},{"ruleId":"88","severity":1,"message":"93","line":73,"column":9,"nodeType":"90","messageId":"91","endLine":73,"endColumn":17},{"ruleId":"94","severity":1,"message":"95","line":79,"column":24,"nodeType":"96","messageId":"97","endLine":79,"endColumn":26},{"ruleId":"94","severity":1,"message":"95","line":104,"column":24,"nodeType":"96","messageId":"97","endLine":104,"endColumn":26},{"ruleId":"84","replacedBy":"98"},{"ruleId":"86","replacedBy":"99"},{"ruleId":"88","severity":1,"message":"100","line":2,"column":8,"nodeType":"90","messageId":"91","endLine":2,"endColumn":12},{"ruleId":"88","severity":1,"message":"101","line":3,"column":8,"nodeType":"90","messageId":"91","endLine":3,"endColumn":12},{"ruleId":"88","severity":1,"message":"102","line":8,"column":8,"nodeType":"90","messageId":"91","endLine":8,"endColumn":18},{"ruleId":"88","severity":1,"message":"103","line":9,"column":8,"nodeType":"90","messageId":"91","endLine":9,"endColumn":13},{"ruleId":"104","severity":1,"message":"105","line":158,"column":8,"nodeType":"106","endLine":158,"endColumn":22,"suggestions":"107"},{"ruleId":"88","severity":1,"message":"108","line":163,"column":13,"nodeType":"90","messageId":"91","endLine":163,"endColumn":16},{"ruleId":"94","severity":1,"message":"95","line":180,"column":29,"nodeType":"96","messageId":"97","endLine":180,"endColumn":31},{"ruleId":"88","severity":1,"message":"109","line":198,"column":12,"nodeType":"90","messageId":"91","endLine":198,"endColumn":23},{"ruleId":"88","severity":1,"message":"110","line":199,"column":12,"nodeType":"90","messageId":"91","endLine":199,"endColumn":24},{"ruleId":"88","severity":1,"message":"111","line":199,"column":26,"nodeType":"90","messageId":"91","endLine":199,"endColumn":41},{"ruleId":"88","severity":1,"message":"112","line":204,"column":12,"nodeType":"90","messageId":"91","endLine":204,"endColumn":27},{"ruleId":"88","severity":1,"message":"113","line":204,"column":29,"nodeType":"90","messageId":"91","endLine":204,"endColumn":47},{"ruleId":"88","severity":1,"message":"114","line":211,"column":11,"nodeType":"90","messageId":"91","endLine":211,"endColumn":18},{"ruleId":"84","replacedBy":"115"},{"ruleId":"86","replacedBy":"116"},{"ruleId":"88","severity":1,"message":"117","line":1,"column":27,"nodeType":"90","messageId":"91","endLine":1,"endColumn":36},{"ruleId":"88","severity":1,"message":"101","line":3,"column":8,"nodeType":"90","messageId":"91","endLine":3,"endColumn":12},{"ruleId":"88","severity":1,"message":"118","line":5,"column":8,"nodeType":"90","messageId":"91","endLine":5,"endColumn":18},{"ruleId":"88","severity":1,"message":"119","line":8,"column":8,"nodeType":"90","messageId":"91","endLine":8,"endColumn":23},{"ruleId":"88","severity":1,"message":"120","line":14,"column":8,"nodeType":"90","messageId":"91","endLine":14,"endColumn":21},{"ruleId":"88","severity":1,"message":"121","line":15,"column":8,"nodeType":"90","messageId":"91","endLine":15,"endColumn":25},{"ruleId":"88","severity":1,"message":"122","line":16,"column":8,"nodeType":"90","messageId":"91","endLine":16,"endColumn":26},{"ruleId":"88","severity":1,"message":"123","line":118,"column":22,"nodeType":"90","messageId":"91","endLine":118,"endColumn":27},{"ruleId":"94","severity":1,"message":"95","line":134,"column":19,"nodeType":"96","messageId":"97","endLine":134,"endColumn":21},{"ruleId":"94","severity":1,"message":"95","line":140,"column":19,"nodeType":"96","messageId":"97","endLine":140,"endColumn":21},{"ruleId":"124","severity":1,"message":"125","line":153,"column":18,"nodeType":"90","messageId":"126","endLine":153,"endColumn":24},{"ruleId":"124","severity":1,"message":"125","line":172,"column":18,"nodeType":"90","messageId":"126","endLine":172,"endColumn":24},{"ruleId":"127","severity":1,"message":"128","line":204,"column":72,"nodeType":"129","endLine":204,"endColumn":94},{"ruleId":"84","replacedBy":"130"},{"ruleId":"86","replacedBy":"131"},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'onSubmit' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["132"],["133"],"'Grid' is defined but never used.","'Card' is defined but never used.","'Typography' is defined but never used.","'Paper' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'arrLen' and 'newArr'. Either include them or remove the dependency array. You can also do a functional update 'setnewArr(n => ...)' if you only need 'newArr' in the 'setnewArr' call.","ArrayExpression",["134"],"'obj' is assigned a value but never used.","'itemClicked' is assigned a value but never used.","'answersCount' is assigned a value but never used.","'setanswersCount' is assigned a value but never used.","'isAnsweredColor' is assigned a value but never used.","'setisAnsweredColor' is assigned a value but never used.","'clicked' is assigned a value but never used.",["132"],["133"],"'useEffect' is defined but never used.","'classNames' is defined but never used.","'Brightness1Icon' is defined but never used.","'MobileStepper' is defined but never used.","'KeyboardArrowLeft' is defined but never used.","'KeyboardArrowRight' is defined but never used.","'theme' is assigned a value but never used.","no-self-assign","'quesNo' is assigned to itself.","selfAssignment","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["132"],["133"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},"Update the dependencies array to be: [arrLen, newArr, questionInfo]",{"range":"137","text":"138"},[4229,4243],"[arrLen, newArr, questionInfo]"]